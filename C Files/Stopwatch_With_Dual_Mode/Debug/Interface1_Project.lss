
Interface1_Project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000219e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000008  00800060  0000219e  00002232  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000b  00800068  00800068  0000223a  2**0
                  ALLOC
  3 .stab         000014c4  00000000  00000000  0000223c  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000008e2  00000000  00000000  00003700  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000140  00000000  00000000  00003fe2  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000170  00000000  00000000  00004122  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00001c49  00000000  00000000  00004292  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000eeb  00000000  00000000  00005edb  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000dad  00000000  00000000  00006dc6  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000160  00000000  00000000  00007b74  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000028d  00000000  00000000  00007cd4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000007ce  00000000  00000000  00007f61  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000050  00000000  00000000  0000872f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 a3 05 	jmp	0xb46	; 0xb46 <__vector_1>
       8:	0c 94 20 06 	jmp	0xc40	; 0xc40 <__vector_2>
       c:	0c 94 41 06 	jmp	0xc82	; 0xc82 <__vector_3>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 b9 05 	jmp	0xb72	; 0xb72 <__vector_7>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a8 e6       	ldi	r26, 0x68	; 104
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
      68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
      6a:	a3 37       	cpi	r26, 0x73	; 115
      6c:	b1 07       	cpc	r27, r17
      6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>

00000070 <__do_copy_data>:
      70:	10 e0       	ldi	r17, 0x00	; 0
      72:	a0 e6       	ldi	r26, 0x60	; 96
      74:	b0 e0       	ldi	r27, 0x00	; 0
      76:	ee e9       	ldi	r30, 0x9E	; 158
      78:	f1 e2       	ldi	r31, 0x21	; 33
      7a:	02 c0       	rjmp	.+4      	; 0x80 <.do_copy_data_start>

0000007c <.do_copy_data_loop>:
      7c:	05 90       	lpm	r0, Z+
      7e:	0d 92       	st	X+, r0

00000080 <.do_copy_data_start>:
      80:	a8 36       	cpi	r26, 0x68	; 104
      82:	b1 07       	cpc	r27, r17
      84:	d9 f7       	brne	.-10     	; 0x7c <.do_copy_data_loop>
      86:	0e 94 14 07 	call	0xe28	; 0xe28 <main>
      8a:	0c 94 cd 10 	jmp	0x219a	; 0x219a <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__fixunssfsi>:
      92:	ef 92       	push	r14
      94:	ff 92       	push	r15
      96:	0f 93       	push	r16
      98:	1f 93       	push	r17
      9a:	7b 01       	movw	r14, r22
      9c:	8c 01       	movw	r16, r24
      9e:	20 e0       	ldi	r18, 0x00	; 0
      a0:	30 e0       	ldi	r19, 0x00	; 0
      a2:	40 e0       	ldi	r20, 0x00	; 0
      a4:	5f e4       	ldi	r21, 0x4F	; 79
      a6:	0e 94 49 03 	call	0x692	; 0x692 <__gesf2>
      aa:	88 23       	and	r24, r24
      ac:	8c f0       	brlt	.+34     	; 0xd0 <__fixunssfsi+0x3e>
      ae:	c8 01       	movw	r24, r16
      b0:	b7 01       	movw	r22, r14
      b2:	20 e0       	ldi	r18, 0x00	; 0
      b4:	30 e0       	ldi	r19, 0x00	; 0
      b6:	40 e0       	ldi	r20, 0x00	; 0
      b8:	5f e4       	ldi	r21, 0x4F	; 79
      ba:	0e 94 c1 01 	call	0x382	; 0x382 <__subsf3>
      be:	0e 94 a9 03 	call	0x752	; 0x752 <__fixsfsi>
      c2:	9b 01       	movw	r18, r22
      c4:	ac 01       	movw	r20, r24
      c6:	20 50       	subi	r18, 0x00	; 0
      c8:	30 40       	sbci	r19, 0x00	; 0
      ca:	40 40       	sbci	r20, 0x00	; 0
      cc:	50 48       	sbci	r21, 0x80	; 128
      ce:	06 c0       	rjmp	.+12     	; 0xdc <__fixunssfsi+0x4a>
      d0:	c8 01       	movw	r24, r16
      d2:	b7 01       	movw	r22, r14
      d4:	0e 94 a9 03 	call	0x752	; 0x752 <__fixsfsi>
      d8:	9b 01       	movw	r18, r22
      da:	ac 01       	movw	r20, r24
      dc:	b9 01       	movw	r22, r18
      de:	ca 01       	movw	r24, r20
      e0:	1f 91       	pop	r17
      e2:	0f 91       	pop	r16
      e4:	ff 90       	pop	r15
      e6:	ef 90       	pop	r14
      e8:	08 95       	ret

000000ea <_fpadd_parts>:
      ea:	a0 e0       	ldi	r26, 0x00	; 0
      ec:	b0 e0       	ldi	r27, 0x00	; 0
      ee:	eb e7       	ldi	r30, 0x7B	; 123
      f0:	f0 e0       	ldi	r31, 0x00	; 0
      f2:	0c 94 96 10 	jmp	0x212c	; 0x212c <__prologue_saves__>
      f6:	dc 01       	movw	r26, r24
      f8:	2b 01       	movw	r4, r22
      fa:	fa 01       	movw	r30, r20
      fc:	9c 91       	ld	r25, X
      fe:	92 30       	cpi	r25, 0x02	; 2
     100:	08 f4       	brcc	.+2      	; 0x104 <_fpadd_parts+0x1a>
     102:	39 c1       	rjmp	.+626    	; 0x376 <_fpadd_parts+0x28c>
     104:	eb 01       	movw	r28, r22
     106:	88 81       	ld	r24, Y
     108:	82 30       	cpi	r24, 0x02	; 2
     10a:	08 f4       	brcc	.+2      	; 0x10e <_fpadd_parts+0x24>
     10c:	33 c1       	rjmp	.+614    	; 0x374 <_fpadd_parts+0x28a>
     10e:	94 30       	cpi	r25, 0x04	; 4
     110:	69 f4       	brne	.+26     	; 0x12c <_fpadd_parts+0x42>
     112:	84 30       	cpi	r24, 0x04	; 4
     114:	09 f0       	breq	.+2      	; 0x118 <_fpadd_parts+0x2e>
     116:	2f c1       	rjmp	.+606    	; 0x376 <_fpadd_parts+0x28c>
     118:	11 96       	adiw	r26, 0x01	; 1
     11a:	9c 91       	ld	r25, X
     11c:	11 97       	sbiw	r26, 0x01	; 1
     11e:	89 81       	ldd	r24, Y+1	; 0x01
     120:	98 17       	cp	r25, r24
     122:	09 f4       	brne	.+2      	; 0x126 <_fpadd_parts+0x3c>
     124:	28 c1       	rjmp	.+592    	; 0x376 <_fpadd_parts+0x28c>
     126:	a0 e6       	ldi	r26, 0x60	; 96
     128:	b0 e0       	ldi	r27, 0x00	; 0
     12a:	25 c1       	rjmp	.+586    	; 0x376 <_fpadd_parts+0x28c>
     12c:	84 30       	cpi	r24, 0x04	; 4
     12e:	09 f4       	brne	.+2      	; 0x132 <_fpadd_parts+0x48>
     130:	21 c1       	rjmp	.+578    	; 0x374 <_fpadd_parts+0x28a>
     132:	82 30       	cpi	r24, 0x02	; 2
     134:	a9 f4       	brne	.+42     	; 0x160 <_fpadd_parts+0x76>
     136:	92 30       	cpi	r25, 0x02	; 2
     138:	09 f0       	breq	.+2      	; 0x13c <_fpadd_parts+0x52>
     13a:	1d c1       	rjmp	.+570    	; 0x376 <_fpadd_parts+0x28c>
     13c:	9a 01       	movw	r18, r20
     13e:	ad 01       	movw	r20, r26
     140:	88 e0       	ldi	r24, 0x08	; 8
     142:	ea 01       	movw	r28, r20
     144:	09 90       	ld	r0, Y+
     146:	ae 01       	movw	r20, r28
     148:	e9 01       	movw	r28, r18
     14a:	09 92       	st	Y+, r0
     14c:	9e 01       	movw	r18, r28
     14e:	81 50       	subi	r24, 0x01	; 1
     150:	c1 f7       	brne	.-16     	; 0x142 <_fpadd_parts+0x58>
     152:	e2 01       	movw	r28, r4
     154:	89 81       	ldd	r24, Y+1	; 0x01
     156:	11 96       	adiw	r26, 0x01	; 1
     158:	9c 91       	ld	r25, X
     15a:	89 23       	and	r24, r25
     15c:	81 83       	std	Z+1, r24	; 0x01
     15e:	08 c1       	rjmp	.+528    	; 0x370 <_fpadd_parts+0x286>
     160:	92 30       	cpi	r25, 0x02	; 2
     162:	09 f4       	brne	.+2      	; 0x166 <_fpadd_parts+0x7c>
     164:	07 c1       	rjmp	.+526    	; 0x374 <_fpadd_parts+0x28a>
     166:	12 96       	adiw	r26, 0x02	; 2
     168:	2d 90       	ld	r2, X+
     16a:	3c 90       	ld	r3, X
     16c:	13 97       	sbiw	r26, 0x03	; 3
     16e:	eb 01       	movw	r28, r22
     170:	8a 81       	ldd	r24, Y+2	; 0x02
     172:	9b 81       	ldd	r25, Y+3	; 0x03
     174:	14 96       	adiw	r26, 0x04	; 4
     176:	ad 90       	ld	r10, X+
     178:	bd 90       	ld	r11, X+
     17a:	cd 90       	ld	r12, X+
     17c:	dc 90       	ld	r13, X
     17e:	17 97       	sbiw	r26, 0x07	; 7
     180:	ec 80       	ldd	r14, Y+4	; 0x04
     182:	fd 80       	ldd	r15, Y+5	; 0x05
     184:	0e 81       	ldd	r16, Y+6	; 0x06
     186:	1f 81       	ldd	r17, Y+7	; 0x07
     188:	91 01       	movw	r18, r2
     18a:	28 1b       	sub	r18, r24
     18c:	39 0b       	sbc	r19, r25
     18e:	b9 01       	movw	r22, r18
     190:	37 ff       	sbrs	r19, 7
     192:	04 c0       	rjmp	.+8      	; 0x19c <_fpadd_parts+0xb2>
     194:	66 27       	eor	r22, r22
     196:	77 27       	eor	r23, r23
     198:	62 1b       	sub	r22, r18
     19a:	73 0b       	sbc	r23, r19
     19c:	60 32       	cpi	r22, 0x20	; 32
     19e:	71 05       	cpc	r23, r1
     1a0:	0c f0       	brlt	.+2      	; 0x1a4 <_fpadd_parts+0xba>
     1a2:	61 c0       	rjmp	.+194    	; 0x266 <_fpadd_parts+0x17c>
     1a4:	12 16       	cp	r1, r18
     1a6:	13 06       	cpc	r1, r19
     1a8:	6c f5       	brge	.+90     	; 0x204 <_fpadd_parts+0x11a>
     1aa:	37 01       	movw	r6, r14
     1ac:	48 01       	movw	r8, r16
     1ae:	06 2e       	mov	r0, r22
     1b0:	04 c0       	rjmp	.+8      	; 0x1ba <_fpadd_parts+0xd0>
     1b2:	96 94       	lsr	r9
     1b4:	87 94       	ror	r8
     1b6:	77 94       	ror	r7
     1b8:	67 94       	ror	r6
     1ba:	0a 94       	dec	r0
     1bc:	d2 f7       	brpl	.-12     	; 0x1b2 <_fpadd_parts+0xc8>
     1be:	21 e0       	ldi	r18, 0x01	; 1
     1c0:	30 e0       	ldi	r19, 0x00	; 0
     1c2:	40 e0       	ldi	r20, 0x00	; 0
     1c4:	50 e0       	ldi	r21, 0x00	; 0
     1c6:	04 c0       	rjmp	.+8      	; 0x1d0 <_fpadd_parts+0xe6>
     1c8:	22 0f       	add	r18, r18
     1ca:	33 1f       	adc	r19, r19
     1cc:	44 1f       	adc	r20, r20
     1ce:	55 1f       	adc	r21, r21
     1d0:	6a 95       	dec	r22
     1d2:	d2 f7       	brpl	.-12     	; 0x1c8 <_fpadd_parts+0xde>
     1d4:	21 50       	subi	r18, 0x01	; 1
     1d6:	30 40       	sbci	r19, 0x00	; 0
     1d8:	40 40       	sbci	r20, 0x00	; 0
     1da:	50 40       	sbci	r21, 0x00	; 0
     1dc:	2e 21       	and	r18, r14
     1de:	3f 21       	and	r19, r15
     1e0:	40 23       	and	r20, r16
     1e2:	51 23       	and	r21, r17
     1e4:	21 15       	cp	r18, r1
     1e6:	31 05       	cpc	r19, r1
     1e8:	41 05       	cpc	r20, r1
     1ea:	51 05       	cpc	r21, r1
     1ec:	21 f0       	breq	.+8      	; 0x1f6 <_fpadd_parts+0x10c>
     1ee:	21 e0       	ldi	r18, 0x01	; 1
     1f0:	30 e0       	ldi	r19, 0x00	; 0
     1f2:	40 e0       	ldi	r20, 0x00	; 0
     1f4:	50 e0       	ldi	r21, 0x00	; 0
     1f6:	79 01       	movw	r14, r18
     1f8:	8a 01       	movw	r16, r20
     1fa:	e6 28       	or	r14, r6
     1fc:	f7 28       	or	r15, r7
     1fe:	08 29       	or	r16, r8
     200:	19 29       	or	r17, r9
     202:	3c c0       	rjmp	.+120    	; 0x27c <_fpadd_parts+0x192>
     204:	23 2b       	or	r18, r19
     206:	d1 f1       	breq	.+116    	; 0x27c <_fpadd_parts+0x192>
     208:	26 0e       	add	r2, r22
     20a:	37 1e       	adc	r3, r23
     20c:	35 01       	movw	r6, r10
     20e:	46 01       	movw	r8, r12
     210:	06 2e       	mov	r0, r22
     212:	04 c0       	rjmp	.+8      	; 0x21c <_fpadd_parts+0x132>
     214:	96 94       	lsr	r9
     216:	87 94       	ror	r8
     218:	77 94       	ror	r7
     21a:	67 94       	ror	r6
     21c:	0a 94       	dec	r0
     21e:	d2 f7       	brpl	.-12     	; 0x214 <_fpadd_parts+0x12a>
     220:	21 e0       	ldi	r18, 0x01	; 1
     222:	30 e0       	ldi	r19, 0x00	; 0
     224:	40 e0       	ldi	r20, 0x00	; 0
     226:	50 e0       	ldi	r21, 0x00	; 0
     228:	04 c0       	rjmp	.+8      	; 0x232 <_fpadd_parts+0x148>
     22a:	22 0f       	add	r18, r18
     22c:	33 1f       	adc	r19, r19
     22e:	44 1f       	adc	r20, r20
     230:	55 1f       	adc	r21, r21
     232:	6a 95       	dec	r22
     234:	d2 f7       	brpl	.-12     	; 0x22a <_fpadd_parts+0x140>
     236:	21 50       	subi	r18, 0x01	; 1
     238:	30 40       	sbci	r19, 0x00	; 0
     23a:	40 40       	sbci	r20, 0x00	; 0
     23c:	50 40       	sbci	r21, 0x00	; 0
     23e:	2a 21       	and	r18, r10
     240:	3b 21       	and	r19, r11
     242:	4c 21       	and	r20, r12
     244:	5d 21       	and	r21, r13
     246:	21 15       	cp	r18, r1
     248:	31 05       	cpc	r19, r1
     24a:	41 05       	cpc	r20, r1
     24c:	51 05       	cpc	r21, r1
     24e:	21 f0       	breq	.+8      	; 0x258 <_fpadd_parts+0x16e>
     250:	21 e0       	ldi	r18, 0x01	; 1
     252:	30 e0       	ldi	r19, 0x00	; 0
     254:	40 e0       	ldi	r20, 0x00	; 0
     256:	50 e0       	ldi	r21, 0x00	; 0
     258:	59 01       	movw	r10, r18
     25a:	6a 01       	movw	r12, r20
     25c:	a6 28       	or	r10, r6
     25e:	b7 28       	or	r11, r7
     260:	c8 28       	or	r12, r8
     262:	d9 28       	or	r13, r9
     264:	0b c0       	rjmp	.+22     	; 0x27c <_fpadd_parts+0x192>
     266:	82 15       	cp	r24, r2
     268:	93 05       	cpc	r25, r3
     26a:	2c f0       	brlt	.+10     	; 0x276 <_fpadd_parts+0x18c>
     26c:	1c 01       	movw	r2, r24
     26e:	aa 24       	eor	r10, r10
     270:	bb 24       	eor	r11, r11
     272:	65 01       	movw	r12, r10
     274:	03 c0       	rjmp	.+6      	; 0x27c <_fpadd_parts+0x192>
     276:	ee 24       	eor	r14, r14
     278:	ff 24       	eor	r15, r15
     27a:	87 01       	movw	r16, r14
     27c:	11 96       	adiw	r26, 0x01	; 1
     27e:	9c 91       	ld	r25, X
     280:	d2 01       	movw	r26, r4
     282:	11 96       	adiw	r26, 0x01	; 1
     284:	8c 91       	ld	r24, X
     286:	98 17       	cp	r25, r24
     288:	09 f4       	brne	.+2      	; 0x28c <_fpadd_parts+0x1a2>
     28a:	45 c0       	rjmp	.+138    	; 0x316 <_fpadd_parts+0x22c>
     28c:	99 23       	and	r25, r25
     28e:	39 f0       	breq	.+14     	; 0x29e <_fpadd_parts+0x1b4>
     290:	a8 01       	movw	r20, r16
     292:	97 01       	movw	r18, r14
     294:	2a 19       	sub	r18, r10
     296:	3b 09       	sbc	r19, r11
     298:	4c 09       	sbc	r20, r12
     29a:	5d 09       	sbc	r21, r13
     29c:	06 c0       	rjmp	.+12     	; 0x2aa <_fpadd_parts+0x1c0>
     29e:	a6 01       	movw	r20, r12
     2a0:	95 01       	movw	r18, r10
     2a2:	2e 19       	sub	r18, r14
     2a4:	3f 09       	sbc	r19, r15
     2a6:	40 0b       	sbc	r20, r16
     2a8:	51 0b       	sbc	r21, r17
     2aa:	57 fd       	sbrc	r21, 7
     2ac:	08 c0       	rjmp	.+16     	; 0x2be <_fpadd_parts+0x1d4>
     2ae:	11 82       	std	Z+1, r1	; 0x01
     2b0:	33 82       	std	Z+3, r3	; 0x03
     2b2:	22 82       	std	Z+2, r2	; 0x02
     2b4:	24 83       	std	Z+4, r18	; 0x04
     2b6:	35 83       	std	Z+5, r19	; 0x05
     2b8:	46 83       	std	Z+6, r20	; 0x06
     2ba:	57 83       	std	Z+7, r21	; 0x07
     2bc:	1d c0       	rjmp	.+58     	; 0x2f8 <_fpadd_parts+0x20e>
     2be:	81 e0       	ldi	r24, 0x01	; 1
     2c0:	81 83       	std	Z+1, r24	; 0x01
     2c2:	33 82       	std	Z+3, r3	; 0x03
     2c4:	22 82       	std	Z+2, r2	; 0x02
     2c6:	88 27       	eor	r24, r24
     2c8:	99 27       	eor	r25, r25
     2ca:	dc 01       	movw	r26, r24
     2cc:	82 1b       	sub	r24, r18
     2ce:	93 0b       	sbc	r25, r19
     2d0:	a4 0b       	sbc	r26, r20
     2d2:	b5 0b       	sbc	r27, r21
     2d4:	84 83       	std	Z+4, r24	; 0x04
     2d6:	95 83       	std	Z+5, r25	; 0x05
     2d8:	a6 83       	std	Z+6, r26	; 0x06
     2da:	b7 83       	std	Z+7, r27	; 0x07
     2dc:	0d c0       	rjmp	.+26     	; 0x2f8 <_fpadd_parts+0x20e>
     2de:	22 0f       	add	r18, r18
     2e0:	33 1f       	adc	r19, r19
     2e2:	44 1f       	adc	r20, r20
     2e4:	55 1f       	adc	r21, r21
     2e6:	24 83       	std	Z+4, r18	; 0x04
     2e8:	35 83       	std	Z+5, r19	; 0x05
     2ea:	46 83       	std	Z+6, r20	; 0x06
     2ec:	57 83       	std	Z+7, r21	; 0x07
     2ee:	82 81       	ldd	r24, Z+2	; 0x02
     2f0:	93 81       	ldd	r25, Z+3	; 0x03
     2f2:	01 97       	sbiw	r24, 0x01	; 1
     2f4:	93 83       	std	Z+3, r25	; 0x03
     2f6:	82 83       	std	Z+2, r24	; 0x02
     2f8:	24 81       	ldd	r18, Z+4	; 0x04
     2fa:	35 81       	ldd	r19, Z+5	; 0x05
     2fc:	46 81       	ldd	r20, Z+6	; 0x06
     2fe:	57 81       	ldd	r21, Z+7	; 0x07
     300:	da 01       	movw	r26, r20
     302:	c9 01       	movw	r24, r18
     304:	01 97       	sbiw	r24, 0x01	; 1
     306:	a1 09       	sbc	r26, r1
     308:	b1 09       	sbc	r27, r1
     30a:	8f 5f       	subi	r24, 0xFF	; 255
     30c:	9f 4f       	sbci	r25, 0xFF	; 255
     30e:	af 4f       	sbci	r26, 0xFF	; 255
     310:	bf 43       	sbci	r27, 0x3F	; 63
     312:	28 f3       	brcs	.-54     	; 0x2de <_fpadd_parts+0x1f4>
     314:	0b c0       	rjmp	.+22     	; 0x32c <_fpadd_parts+0x242>
     316:	91 83       	std	Z+1, r25	; 0x01
     318:	33 82       	std	Z+3, r3	; 0x03
     31a:	22 82       	std	Z+2, r2	; 0x02
     31c:	ea 0c       	add	r14, r10
     31e:	fb 1c       	adc	r15, r11
     320:	0c 1d       	adc	r16, r12
     322:	1d 1d       	adc	r17, r13
     324:	e4 82       	std	Z+4, r14	; 0x04
     326:	f5 82       	std	Z+5, r15	; 0x05
     328:	06 83       	std	Z+6, r16	; 0x06
     32a:	17 83       	std	Z+7, r17	; 0x07
     32c:	83 e0       	ldi	r24, 0x03	; 3
     32e:	80 83       	st	Z, r24
     330:	24 81       	ldd	r18, Z+4	; 0x04
     332:	35 81       	ldd	r19, Z+5	; 0x05
     334:	46 81       	ldd	r20, Z+6	; 0x06
     336:	57 81       	ldd	r21, Z+7	; 0x07
     338:	57 ff       	sbrs	r21, 7
     33a:	1a c0       	rjmp	.+52     	; 0x370 <_fpadd_parts+0x286>
     33c:	c9 01       	movw	r24, r18
     33e:	aa 27       	eor	r26, r26
     340:	97 fd       	sbrc	r25, 7
     342:	a0 95       	com	r26
     344:	ba 2f       	mov	r27, r26
     346:	81 70       	andi	r24, 0x01	; 1
     348:	90 70       	andi	r25, 0x00	; 0
     34a:	a0 70       	andi	r26, 0x00	; 0
     34c:	b0 70       	andi	r27, 0x00	; 0
     34e:	56 95       	lsr	r21
     350:	47 95       	ror	r20
     352:	37 95       	ror	r19
     354:	27 95       	ror	r18
     356:	82 2b       	or	r24, r18
     358:	93 2b       	or	r25, r19
     35a:	a4 2b       	or	r26, r20
     35c:	b5 2b       	or	r27, r21
     35e:	84 83       	std	Z+4, r24	; 0x04
     360:	95 83       	std	Z+5, r25	; 0x05
     362:	a6 83       	std	Z+6, r26	; 0x06
     364:	b7 83       	std	Z+7, r27	; 0x07
     366:	82 81       	ldd	r24, Z+2	; 0x02
     368:	93 81       	ldd	r25, Z+3	; 0x03
     36a:	01 96       	adiw	r24, 0x01	; 1
     36c:	93 83       	std	Z+3, r25	; 0x03
     36e:	82 83       	std	Z+2, r24	; 0x02
     370:	df 01       	movw	r26, r30
     372:	01 c0       	rjmp	.+2      	; 0x376 <_fpadd_parts+0x28c>
     374:	d2 01       	movw	r26, r4
     376:	cd 01       	movw	r24, r26
     378:	cd b7       	in	r28, 0x3d	; 61
     37a:	de b7       	in	r29, 0x3e	; 62
     37c:	e2 e1       	ldi	r30, 0x12	; 18
     37e:	0c 94 b2 10 	jmp	0x2164	; 0x2164 <__epilogue_restores__>

00000382 <__subsf3>:
     382:	a0 e2       	ldi	r26, 0x20	; 32
     384:	b0 e0       	ldi	r27, 0x00	; 0
     386:	e7 ec       	ldi	r30, 0xC7	; 199
     388:	f1 e0       	ldi	r31, 0x01	; 1
     38a:	0c 94 a2 10 	jmp	0x2144	; 0x2144 <__prologue_saves__+0x18>
     38e:	69 83       	std	Y+1, r22	; 0x01
     390:	7a 83       	std	Y+2, r23	; 0x02
     392:	8b 83       	std	Y+3, r24	; 0x03
     394:	9c 83       	std	Y+4, r25	; 0x04
     396:	2d 83       	std	Y+5, r18	; 0x05
     398:	3e 83       	std	Y+6, r19	; 0x06
     39a:	4f 83       	std	Y+7, r20	; 0x07
     39c:	58 87       	std	Y+8, r21	; 0x08
     39e:	e9 e0       	ldi	r30, 0x09	; 9
     3a0:	ee 2e       	mov	r14, r30
     3a2:	f1 2c       	mov	r15, r1
     3a4:	ec 0e       	add	r14, r28
     3a6:	fd 1e       	adc	r15, r29
     3a8:	ce 01       	movw	r24, r28
     3aa:	01 96       	adiw	r24, 0x01	; 1
     3ac:	b7 01       	movw	r22, r14
     3ae:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     3b2:	8e 01       	movw	r16, r28
     3b4:	0f 5e       	subi	r16, 0xEF	; 239
     3b6:	1f 4f       	sbci	r17, 0xFF	; 255
     3b8:	ce 01       	movw	r24, r28
     3ba:	05 96       	adiw	r24, 0x05	; 5
     3bc:	b8 01       	movw	r22, r16
     3be:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     3c2:	8a 89       	ldd	r24, Y+18	; 0x12
     3c4:	91 e0       	ldi	r25, 0x01	; 1
     3c6:	89 27       	eor	r24, r25
     3c8:	8a 8b       	std	Y+18, r24	; 0x12
     3ca:	c7 01       	movw	r24, r14
     3cc:	b8 01       	movw	r22, r16
     3ce:	ae 01       	movw	r20, r28
     3d0:	47 5e       	subi	r20, 0xE7	; 231
     3d2:	5f 4f       	sbci	r21, 0xFF	; 255
     3d4:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     3d8:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     3dc:	a0 96       	adiw	r28, 0x20	; 32
     3de:	e6 e0       	ldi	r30, 0x06	; 6
     3e0:	0c 94 be 10 	jmp	0x217c	; 0x217c <__epilogue_restores__+0x18>

000003e4 <__addsf3>:
     3e4:	a0 e2       	ldi	r26, 0x20	; 32
     3e6:	b0 e0       	ldi	r27, 0x00	; 0
     3e8:	e8 ef       	ldi	r30, 0xF8	; 248
     3ea:	f1 e0       	ldi	r31, 0x01	; 1
     3ec:	0c 94 a2 10 	jmp	0x2144	; 0x2144 <__prologue_saves__+0x18>
     3f0:	69 83       	std	Y+1, r22	; 0x01
     3f2:	7a 83       	std	Y+2, r23	; 0x02
     3f4:	8b 83       	std	Y+3, r24	; 0x03
     3f6:	9c 83       	std	Y+4, r25	; 0x04
     3f8:	2d 83       	std	Y+5, r18	; 0x05
     3fa:	3e 83       	std	Y+6, r19	; 0x06
     3fc:	4f 83       	std	Y+7, r20	; 0x07
     3fe:	58 87       	std	Y+8, r21	; 0x08
     400:	f9 e0       	ldi	r31, 0x09	; 9
     402:	ef 2e       	mov	r14, r31
     404:	f1 2c       	mov	r15, r1
     406:	ec 0e       	add	r14, r28
     408:	fd 1e       	adc	r15, r29
     40a:	ce 01       	movw	r24, r28
     40c:	01 96       	adiw	r24, 0x01	; 1
     40e:	b7 01       	movw	r22, r14
     410:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     414:	8e 01       	movw	r16, r28
     416:	0f 5e       	subi	r16, 0xEF	; 239
     418:	1f 4f       	sbci	r17, 0xFF	; 255
     41a:	ce 01       	movw	r24, r28
     41c:	05 96       	adiw	r24, 0x05	; 5
     41e:	b8 01       	movw	r22, r16
     420:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     424:	c7 01       	movw	r24, r14
     426:	b8 01       	movw	r22, r16
     428:	ae 01       	movw	r20, r28
     42a:	47 5e       	subi	r20, 0xE7	; 231
     42c:	5f 4f       	sbci	r21, 0xFF	; 255
     42e:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     432:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     436:	a0 96       	adiw	r28, 0x20	; 32
     438:	e6 e0       	ldi	r30, 0x06	; 6
     43a:	0c 94 be 10 	jmp	0x217c	; 0x217c <__epilogue_restores__+0x18>

0000043e <__mulsf3>:
     43e:	a0 e2       	ldi	r26, 0x20	; 32
     440:	b0 e0       	ldi	r27, 0x00	; 0
     442:	e5 e2       	ldi	r30, 0x25	; 37
     444:	f2 e0       	ldi	r31, 0x02	; 2
     446:	0c 94 96 10 	jmp	0x212c	; 0x212c <__prologue_saves__>
     44a:	69 83       	std	Y+1, r22	; 0x01
     44c:	7a 83       	std	Y+2, r23	; 0x02
     44e:	8b 83       	std	Y+3, r24	; 0x03
     450:	9c 83       	std	Y+4, r25	; 0x04
     452:	2d 83       	std	Y+5, r18	; 0x05
     454:	3e 83       	std	Y+6, r19	; 0x06
     456:	4f 83       	std	Y+7, r20	; 0x07
     458:	58 87       	std	Y+8, r21	; 0x08
     45a:	ce 01       	movw	r24, r28
     45c:	01 96       	adiw	r24, 0x01	; 1
     45e:	be 01       	movw	r22, r28
     460:	67 5f       	subi	r22, 0xF7	; 247
     462:	7f 4f       	sbci	r23, 0xFF	; 255
     464:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     468:	ce 01       	movw	r24, r28
     46a:	05 96       	adiw	r24, 0x05	; 5
     46c:	be 01       	movw	r22, r28
     46e:	6f 5e       	subi	r22, 0xEF	; 239
     470:	7f 4f       	sbci	r23, 0xFF	; 255
     472:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     476:	99 85       	ldd	r25, Y+9	; 0x09
     478:	92 30       	cpi	r25, 0x02	; 2
     47a:	88 f0       	brcs	.+34     	; 0x49e <__mulsf3+0x60>
     47c:	89 89       	ldd	r24, Y+17	; 0x11
     47e:	82 30       	cpi	r24, 0x02	; 2
     480:	c8 f0       	brcs	.+50     	; 0x4b4 <__mulsf3+0x76>
     482:	94 30       	cpi	r25, 0x04	; 4
     484:	19 f4       	brne	.+6      	; 0x48c <__mulsf3+0x4e>
     486:	82 30       	cpi	r24, 0x02	; 2
     488:	51 f4       	brne	.+20     	; 0x49e <__mulsf3+0x60>
     48a:	04 c0       	rjmp	.+8      	; 0x494 <__mulsf3+0x56>
     48c:	84 30       	cpi	r24, 0x04	; 4
     48e:	29 f4       	brne	.+10     	; 0x49a <__mulsf3+0x5c>
     490:	92 30       	cpi	r25, 0x02	; 2
     492:	81 f4       	brne	.+32     	; 0x4b4 <__mulsf3+0x76>
     494:	80 e6       	ldi	r24, 0x60	; 96
     496:	90 e0       	ldi	r25, 0x00	; 0
     498:	c6 c0       	rjmp	.+396    	; 0x626 <__mulsf3+0x1e8>
     49a:	92 30       	cpi	r25, 0x02	; 2
     49c:	49 f4       	brne	.+18     	; 0x4b0 <__mulsf3+0x72>
     49e:	20 e0       	ldi	r18, 0x00	; 0
     4a0:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a2:	8a 89       	ldd	r24, Y+18	; 0x12
     4a4:	98 13       	cpse	r25, r24
     4a6:	21 e0       	ldi	r18, 0x01	; 1
     4a8:	2a 87       	std	Y+10, r18	; 0x0a
     4aa:	ce 01       	movw	r24, r28
     4ac:	09 96       	adiw	r24, 0x09	; 9
     4ae:	bb c0       	rjmp	.+374    	; 0x626 <__mulsf3+0x1e8>
     4b0:	82 30       	cpi	r24, 0x02	; 2
     4b2:	49 f4       	brne	.+18     	; 0x4c6 <__mulsf3+0x88>
     4b4:	20 e0       	ldi	r18, 0x00	; 0
     4b6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4b8:	8a 89       	ldd	r24, Y+18	; 0x12
     4ba:	98 13       	cpse	r25, r24
     4bc:	21 e0       	ldi	r18, 0x01	; 1
     4be:	2a 8b       	std	Y+18, r18	; 0x12
     4c0:	ce 01       	movw	r24, r28
     4c2:	41 96       	adiw	r24, 0x11	; 17
     4c4:	b0 c0       	rjmp	.+352    	; 0x626 <__mulsf3+0x1e8>
     4c6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4c8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ca:	4f 84       	ldd	r4, Y+15	; 0x0f
     4cc:	58 88       	ldd	r5, Y+16	; 0x10
     4ce:	6d 88       	ldd	r6, Y+21	; 0x15
     4d0:	7e 88       	ldd	r7, Y+22	; 0x16
     4d2:	8f 88       	ldd	r8, Y+23	; 0x17
     4d4:	98 8c       	ldd	r9, Y+24	; 0x18
     4d6:	ee 24       	eor	r14, r14
     4d8:	ff 24       	eor	r15, r15
     4da:	87 01       	movw	r16, r14
     4dc:	aa 24       	eor	r10, r10
     4de:	bb 24       	eor	r11, r11
     4e0:	65 01       	movw	r12, r10
     4e2:	40 e0       	ldi	r20, 0x00	; 0
     4e4:	50 e0       	ldi	r21, 0x00	; 0
     4e6:	60 e0       	ldi	r22, 0x00	; 0
     4e8:	70 e0       	ldi	r23, 0x00	; 0
     4ea:	e0 e0       	ldi	r30, 0x00	; 0
     4ec:	f0 e0       	ldi	r31, 0x00	; 0
     4ee:	c1 01       	movw	r24, r2
     4f0:	81 70       	andi	r24, 0x01	; 1
     4f2:	90 70       	andi	r25, 0x00	; 0
     4f4:	89 2b       	or	r24, r25
     4f6:	e9 f0       	breq	.+58     	; 0x532 <__mulsf3+0xf4>
     4f8:	e6 0c       	add	r14, r6
     4fa:	f7 1c       	adc	r15, r7
     4fc:	08 1d       	adc	r16, r8
     4fe:	19 1d       	adc	r17, r9
     500:	9a 01       	movw	r18, r20
     502:	ab 01       	movw	r20, r22
     504:	2a 0d       	add	r18, r10
     506:	3b 1d       	adc	r19, r11
     508:	4c 1d       	adc	r20, r12
     50a:	5d 1d       	adc	r21, r13
     50c:	80 e0       	ldi	r24, 0x00	; 0
     50e:	90 e0       	ldi	r25, 0x00	; 0
     510:	a0 e0       	ldi	r26, 0x00	; 0
     512:	b0 e0       	ldi	r27, 0x00	; 0
     514:	e6 14       	cp	r14, r6
     516:	f7 04       	cpc	r15, r7
     518:	08 05       	cpc	r16, r8
     51a:	19 05       	cpc	r17, r9
     51c:	20 f4       	brcc	.+8      	; 0x526 <__mulsf3+0xe8>
     51e:	81 e0       	ldi	r24, 0x01	; 1
     520:	90 e0       	ldi	r25, 0x00	; 0
     522:	a0 e0       	ldi	r26, 0x00	; 0
     524:	b0 e0       	ldi	r27, 0x00	; 0
     526:	ba 01       	movw	r22, r20
     528:	a9 01       	movw	r20, r18
     52a:	48 0f       	add	r20, r24
     52c:	59 1f       	adc	r21, r25
     52e:	6a 1f       	adc	r22, r26
     530:	7b 1f       	adc	r23, r27
     532:	aa 0c       	add	r10, r10
     534:	bb 1c       	adc	r11, r11
     536:	cc 1c       	adc	r12, r12
     538:	dd 1c       	adc	r13, r13
     53a:	97 fe       	sbrs	r9, 7
     53c:	08 c0       	rjmp	.+16     	; 0x54e <__mulsf3+0x110>
     53e:	81 e0       	ldi	r24, 0x01	; 1
     540:	90 e0       	ldi	r25, 0x00	; 0
     542:	a0 e0       	ldi	r26, 0x00	; 0
     544:	b0 e0       	ldi	r27, 0x00	; 0
     546:	a8 2a       	or	r10, r24
     548:	b9 2a       	or	r11, r25
     54a:	ca 2a       	or	r12, r26
     54c:	db 2a       	or	r13, r27
     54e:	31 96       	adiw	r30, 0x01	; 1
     550:	e0 32       	cpi	r30, 0x20	; 32
     552:	f1 05       	cpc	r31, r1
     554:	49 f0       	breq	.+18     	; 0x568 <__mulsf3+0x12a>
     556:	66 0c       	add	r6, r6
     558:	77 1c       	adc	r7, r7
     55a:	88 1c       	adc	r8, r8
     55c:	99 1c       	adc	r9, r9
     55e:	56 94       	lsr	r5
     560:	47 94       	ror	r4
     562:	37 94       	ror	r3
     564:	27 94       	ror	r2
     566:	c3 cf       	rjmp	.-122    	; 0x4ee <__mulsf3+0xb0>
     568:	fa 85       	ldd	r31, Y+10	; 0x0a
     56a:	ea 89       	ldd	r30, Y+18	; 0x12
     56c:	2b 89       	ldd	r18, Y+19	; 0x13
     56e:	3c 89       	ldd	r19, Y+20	; 0x14
     570:	8b 85       	ldd	r24, Y+11	; 0x0b
     572:	9c 85       	ldd	r25, Y+12	; 0x0c
     574:	28 0f       	add	r18, r24
     576:	39 1f       	adc	r19, r25
     578:	2e 5f       	subi	r18, 0xFE	; 254
     57a:	3f 4f       	sbci	r19, 0xFF	; 255
     57c:	17 c0       	rjmp	.+46     	; 0x5ac <__mulsf3+0x16e>
     57e:	ca 01       	movw	r24, r20
     580:	81 70       	andi	r24, 0x01	; 1
     582:	90 70       	andi	r25, 0x00	; 0
     584:	89 2b       	or	r24, r25
     586:	61 f0       	breq	.+24     	; 0x5a0 <__mulsf3+0x162>
     588:	16 95       	lsr	r17
     58a:	07 95       	ror	r16
     58c:	f7 94       	ror	r15
     58e:	e7 94       	ror	r14
     590:	80 e0       	ldi	r24, 0x00	; 0
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	a0 e0       	ldi	r26, 0x00	; 0
     596:	b0 e8       	ldi	r27, 0x80	; 128
     598:	e8 2a       	or	r14, r24
     59a:	f9 2a       	or	r15, r25
     59c:	0a 2b       	or	r16, r26
     59e:	1b 2b       	or	r17, r27
     5a0:	76 95       	lsr	r23
     5a2:	67 95       	ror	r22
     5a4:	57 95       	ror	r21
     5a6:	47 95       	ror	r20
     5a8:	2f 5f       	subi	r18, 0xFF	; 255
     5aa:	3f 4f       	sbci	r19, 0xFF	; 255
     5ac:	77 fd       	sbrc	r23, 7
     5ae:	e7 cf       	rjmp	.-50     	; 0x57e <__mulsf3+0x140>
     5b0:	0c c0       	rjmp	.+24     	; 0x5ca <__mulsf3+0x18c>
     5b2:	44 0f       	add	r20, r20
     5b4:	55 1f       	adc	r21, r21
     5b6:	66 1f       	adc	r22, r22
     5b8:	77 1f       	adc	r23, r23
     5ba:	17 fd       	sbrc	r17, 7
     5bc:	41 60       	ori	r20, 0x01	; 1
     5be:	ee 0c       	add	r14, r14
     5c0:	ff 1c       	adc	r15, r15
     5c2:	00 1f       	adc	r16, r16
     5c4:	11 1f       	adc	r17, r17
     5c6:	21 50       	subi	r18, 0x01	; 1
     5c8:	30 40       	sbci	r19, 0x00	; 0
     5ca:	40 30       	cpi	r20, 0x00	; 0
     5cc:	90 e0       	ldi	r25, 0x00	; 0
     5ce:	59 07       	cpc	r21, r25
     5d0:	90 e0       	ldi	r25, 0x00	; 0
     5d2:	69 07       	cpc	r22, r25
     5d4:	90 e4       	ldi	r25, 0x40	; 64
     5d6:	79 07       	cpc	r23, r25
     5d8:	60 f3       	brcs	.-40     	; 0x5b2 <__mulsf3+0x174>
     5da:	2b 8f       	std	Y+27, r18	; 0x1b
     5dc:	3c 8f       	std	Y+28, r19	; 0x1c
     5de:	db 01       	movw	r26, r22
     5e0:	ca 01       	movw	r24, r20
     5e2:	8f 77       	andi	r24, 0x7F	; 127
     5e4:	90 70       	andi	r25, 0x00	; 0
     5e6:	a0 70       	andi	r26, 0x00	; 0
     5e8:	b0 70       	andi	r27, 0x00	; 0
     5ea:	80 34       	cpi	r24, 0x40	; 64
     5ec:	91 05       	cpc	r25, r1
     5ee:	a1 05       	cpc	r26, r1
     5f0:	b1 05       	cpc	r27, r1
     5f2:	61 f4       	brne	.+24     	; 0x60c <__mulsf3+0x1ce>
     5f4:	47 fd       	sbrc	r20, 7
     5f6:	0a c0       	rjmp	.+20     	; 0x60c <__mulsf3+0x1ce>
     5f8:	e1 14       	cp	r14, r1
     5fa:	f1 04       	cpc	r15, r1
     5fc:	01 05       	cpc	r16, r1
     5fe:	11 05       	cpc	r17, r1
     600:	29 f0       	breq	.+10     	; 0x60c <__mulsf3+0x1ce>
     602:	40 5c       	subi	r20, 0xC0	; 192
     604:	5f 4f       	sbci	r21, 0xFF	; 255
     606:	6f 4f       	sbci	r22, 0xFF	; 255
     608:	7f 4f       	sbci	r23, 0xFF	; 255
     60a:	40 78       	andi	r20, 0x80	; 128
     60c:	1a 8e       	std	Y+26, r1	; 0x1a
     60e:	fe 17       	cp	r31, r30
     610:	11 f0       	breq	.+4      	; 0x616 <__mulsf3+0x1d8>
     612:	81 e0       	ldi	r24, 0x01	; 1
     614:	8a 8f       	std	Y+26, r24	; 0x1a
     616:	4d 8f       	std	Y+29, r20	; 0x1d
     618:	5e 8f       	std	Y+30, r21	; 0x1e
     61a:	6f 8f       	std	Y+31, r22	; 0x1f
     61c:	78 a3       	std	Y+32, r23	; 0x20
     61e:	83 e0       	ldi	r24, 0x03	; 3
     620:	89 8f       	std	Y+25, r24	; 0x19
     622:	ce 01       	movw	r24, r28
     624:	49 96       	adiw	r24, 0x19	; 25
     626:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     62a:	a0 96       	adiw	r28, 0x20	; 32
     62c:	e2 e1       	ldi	r30, 0x12	; 18
     62e:	0c 94 b2 10 	jmp	0x2164	; 0x2164 <__epilogue_restores__>

00000632 <__gtsf2>:
     632:	a8 e1       	ldi	r26, 0x18	; 24
     634:	b0 e0       	ldi	r27, 0x00	; 0
     636:	ef e1       	ldi	r30, 0x1F	; 31
     638:	f3 e0       	ldi	r31, 0x03	; 3
     63a:	0c 94 a2 10 	jmp	0x2144	; 0x2144 <__prologue_saves__+0x18>
     63e:	69 83       	std	Y+1, r22	; 0x01
     640:	7a 83       	std	Y+2, r23	; 0x02
     642:	8b 83       	std	Y+3, r24	; 0x03
     644:	9c 83       	std	Y+4, r25	; 0x04
     646:	2d 83       	std	Y+5, r18	; 0x05
     648:	3e 83       	std	Y+6, r19	; 0x06
     64a:	4f 83       	std	Y+7, r20	; 0x07
     64c:	58 87       	std	Y+8, r21	; 0x08
     64e:	89 e0       	ldi	r24, 0x09	; 9
     650:	e8 2e       	mov	r14, r24
     652:	f1 2c       	mov	r15, r1
     654:	ec 0e       	add	r14, r28
     656:	fd 1e       	adc	r15, r29
     658:	ce 01       	movw	r24, r28
     65a:	01 96       	adiw	r24, 0x01	; 1
     65c:	b7 01       	movw	r22, r14
     65e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     662:	8e 01       	movw	r16, r28
     664:	0f 5e       	subi	r16, 0xEF	; 239
     666:	1f 4f       	sbci	r17, 0xFF	; 255
     668:	ce 01       	movw	r24, r28
     66a:	05 96       	adiw	r24, 0x05	; 5
     66c:	b8 01       	movw	r22, r16
     66e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     672:	89 85       	ldd	r24, Y+9	; 0x09
     674:	82 30       	cpi	r24, 0x02	; 2
     676:	40 f0       	brcs	.+16     	; 0x688 <__gtsf2+0x56>
     678:	89 89       	ldd	r24, Y+17	; 0x11
     67a:	82 30       	cpi	r24, 0x02	; 2
     67c:	28 f0       	brcs	.+10     	; 0x688 <__gtsf2+0x56>
     67e:	c7 01       	movw	r24, r14
     680:	b8 01       	movw	r22, r16
     682:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     686:	01 c0       	rjmp	.+2      	; 0x68a <__gtsf2+0x58>
     688:	8f ef       	ldi	r24, 0xFF	; 255
     68a:	68 96       	adiw	r28, 0x18	; 24
     68c:	e6 e0       	ldi	r30, 0x06	; 6
     68e:	0c 94 be 10 	jmp	0x217c	; 0x217c <__epilogue_restores__+0x18>

00000692 <__gesf2>:
     692:	a8 e1       	ldi	r26, 0x18	; 24
     694:	b0 e0       	ldi	r27, 0x00	; 0
     696:	ef e4       	ldi	r30, 0x4F	; 79
     698:	f3 e0       	ldi	r31, 0x03	; 3
     69a:	0c 94 a2 10 	jmp	0x2144	; 0x2144 <__prologue_saves__+0x18>
     69e:	69 83       	std	Y+1, r22	; 0x01
     6a0:	7a 83       	std	Y+2, r23	; 0x02
     6a2:	8b 83       	std	Y+3, r24	; 0x03
     6a4:	9c 83       	std	Y+4, r25	; 0x04
     6a6:	2d 83       	std	Y+5, r18	; 0x05
     6a8:	3e 83       	std	Y+6, r19	; 0x06
     6aa:	4f 83       	std	Y+7, r20	; 0x07
     6ac:	58 87       	std	Y+8, r21	; 0x08
     6ae:	89 e0       	ldi	r24, 0x09	; 9
     6b0:	e8 2e       	mov	r14, r24
     6b2:	f1 2c       	mov	r15, r1
     6b4:	ec 0e       	add	r14, r28
     6b6:	fd 1e       	adc	r15, r29
     6b8:	ce 01       	movw	r24, r28
     6ba:	01 96       	adiw	r24, 0x01	; 1
     6bc:	b7 01       	movw	r22, r14
     6be:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     6c2:	8e 01       	movw	r16, r28
     6c4:	0f 5e       	subi	r16, 0xEF	; 239
     6c6:	1f 4f       	sbci	r17, 0xFF	; 255
     6c8:	ce 01       	movw	r24, r28
     6ca:	05 96       	adiw	r24, 0x05	; 5
     6cc:	b8 01       	movw	r22, r16
     6ce:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     6d2:	89 85       	ldd	r24, Y+9	; 0x09
     6d4:	82 30       	cpi	r24, 0x02	; 2
     6d6:	40 f0       	brcs	.+16     	; 0x6e8 <__gesf2+0x56>
     6d8:	89 89       	ldd	r24, Y+17	; 0x11
     6da:	82 30       	cpi	r24, 0x02	; 2
     6dc:	28 f0       	brcs	.+10     	; 0x6e8 <__gesf2+0x56>
     6de:	c7 01       	movw	r24, r14
     6e0:	b8 01       	movw	r22, r16
     6e2:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     6e6:	01 c0       	rjmp	.+2      	; 0x6ea <__gesf2+0x58>
     6e8:	8f ef       	ldi	r24, 0xFF	; 255
     6ea:	68 96       	adiw	r28, 0x18	; 24
     6ec:	e6 e0       	ldi	r30, 0x06	; 6
     6ee:	0c 94 be 10 	jmp	0x217c	; 0x217c <__epilogue_restores__+0x18>

000006f2 <__ltsf2>:
     6f2:	a8 e1       	ldi	r26, 0x18	; 24
     6f4:	b0 e0       	ldi	r27, 0x00	; 0
     6f6:	ef e7       	ldi	r30, 0x7F	; 127
     6f8:	f3 e0       	ldi	r31, 0x03	; 3
     6fa:	0c 94 a2 10 	jmp	0x2144	; 0x2144 <__prologue_saves__+0x18>
     6fe:	69 83       	std	Y+1, r22	; 0x01
     700:	7a 83       	std	Y+2, r23	; 0x02
     702:	8b 83       	std	Y+3, r24	; 0x03
     704:	9c 83       	std	Y+4, r25	; 0x04
     706:	2d 83       	std	Y+5, r18	; 0x05
     708:	3e 83       	std	Y+6, r19	; 0x06
     70a:	4f 83       	std	Y+7, r20	; 0x07
     70c:	58 87       	std	Y+8, r21	; 0x08
     70e:	89 e0       	ldi	r24, 0x09	; 9
     710:	e8 2e       	mov	r14, r24
     712:	f1 2c       	mov	r15, r1
     714:	ec 0e       	add	r14, r28
     716:	fd 1e       	adc	r15, r29
     718:	ce 01       	movw	r24, r28
     71a:	01 96       	adiw	r24, 0x01	; 1
     71c:	b7 01       	movw	r22, r14
     71e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     722:	8e 01       	movw	r16, r28
     724:	0f 5e       	subi	r16, 0xEF	; 239
     726:	1f 4f       	sbci	r17, 0xFF	; 255
     728:	ce 01       	movw	r24, r28
     72a:	05 96       	adiw	r24, 0x05	; 5
     72c:	b8 01       	movw	r22, r16
     72e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     732:	89 85       	ldd	r24, Y+9	; 0x09
     734:	82 30       	cpi	r24, 0x02	; 2
     736:	40 f0       	brcs	.+16     	; 0x748 <__ltsf2+0x56>
     738:	89 89       	ldd	r24, Y+17	; 0x11
     73a:	82 30       	cpi	r24, 0x02	; 2
     73c:	28 f0       	brcs	.+10     	; 0x748 <__ltsf2+0x56>
     73e:	c7 01       	movw	r24, r14
     740:	b8 01       	movw	r22, r16
     742:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     746:	01 c0       	rjmp	.+2      	; 0x74a <__ltsf2+0x58>
     748:	81 e0       	ldi	r24, 0x01	; 1
     74a:	68 96       	adiw	r28, 0x18	; 24
     74c:	e6 e0       	ldi	r30, 0x06	; 6
     74e:	0c 94 be 10 	jmp	0x217c	; 0x217c <__epilogue_restores__+0x18>

00000752 <__fixsfsi>:
     752:	ac e0       	ldi	r26, 0x0C	; 12
     754:	b0 e0       	ldi	r27, 0x00	; 0
     756:	ef ea       	ldi	r30, 0xAF	; 175
     758:	f3 e0       	ldi	r31, 0x03	; 3
     75a:	0c 94 a6 10 	jmp	0x214c	; 0x214c <__prologue_saves__+0x20>
     75e:	69 83       	std	Y+1, r22	; 0x01
     760:	7a 83       	std	Y+2, r23	; 0x02
     762:	8b 83       	std	Y+3, r24	; 0x03
     764:	9c 83       	std	Y+4, r25	; 0x04
     766:	ce 01       	movw	r24, r28
     768:	01 96       	adiw	r24, 0x01	; 1
     76a:	be 01       	movw	r22, r28
     76c:	6b 5f       	subi	r22, 0xFB	; 251
     76e:	7f 4f       	sbci	r23, 0xFF	; 255
     770:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     774:	8d 81       	ldd	r24, Y+5	; 0x05
     776:	82 30       	cpi	r24, 0x02	; 2
     778:	61 f1       	breq	.+88     	; 0x7d2 <__fixsfsi+0x80>
     77a:	82 30       	cpi	r24, 0x02	; 2
     77c:	50 f1       	brcs	.+84     	; 0x7d2 <__fixsfsi+0x80>
     77e:	84 30       	cpi	r24, 0x04	; 4
     780:	21 f4       	brne	.+8      	; 0x78a <__fixsfsi+0x38>
     782:	8e 81       	ldd	r24, Y+6	; 0x06
     784:	88 23       	and	r24, r24
     786:	51 f1       	breq	.+84     	; 0x7dc <__fixsfsi+0x8a>
     788:	2e c0       	rjmp	.+92     	; 0x7e6 <__fixsfsi+0x94>
     78a:	2f 81       	ldd	r18, Y+7	; 0x07
     78c:	38 85       	ldd	r19, Y+8	; 0x08
     78e:	37 fd       	sbrc	r19, 7
     790:	20 c0       	rjmp	.+64     	; 0x7d2 <__fixsfsi+0x80>
     792:	6e 81       	ldd	r22, Y+6	; 0x06
     794:	2f 31       	cpi	r18, 0x1F	; 31
     796:	31 05       	cpc	r19, r1
     798:	1c f0       	brlt	.+6      	; 0x7a0 <__fixsfsi+0x4e>
     79a:	66 23       	and	r22, r22
     79c:	f9 f0       	breq	.+62     	; 0x7dc <__fixsfsi+0x8a>
     79e:	23 c0       	rjmp	.+70     	; 0x7e6 <__fixsfsi+0x94>
     7a0:	8e e1       	ldi	r24, 0x1E	; 30
     7a2:	90 e0       	ldi	r25, 0x00	; 0
     7a4:	82 1b       	sub	r24, r18
     7a6:	93 0b       	sbc	r25, r19
     7a8:	29 85       	ldd	r18, Y+9	; 0x09
     7aa:	3a 85       	ldd	r19, Y+10	; 0x0a
     7ac:	4b 85       	ldd	r20, Y+11	; 0x0b
     7ae:	5c 85       	ldd	r21, Y+12	; 0x0c
     7b0:	04 c0       	rjmp	.+8      	; 0x7ba <__fixsfsi+0x68>
     7b2:	56 95       	lsr	r21
     7b4:	47 95       	ror	r20
     7b6:	37 95       	ror	r19
     7b8:	27 95       	ror	r18
     7ba:	8a 95       	dec	r24
     7bc:	d2 f7       	brpl	.-12     	; 0x7b2 <__fixsfsi+0x60>
     7be:	66 23       	and	r22, r22
     7c0:	b1 f0       	breq	.+44     	; 0x7ee <__fixsfsi+0x9c>
     7c2:	50 95       	com	r21
     7c4:	40 95       	com	r20
     7c6:	30 95       	com	r19
     7c8:	21 95       	neg	r18
     7ca:	3f 4f       	sbci	r19, 0xFF	; 255
     7cc:	4f 4f       	sbci	r20, 0xFF	; 255
     7ce:	5f 4f       	sbci	r21, 0xFF	; 255
     7d0:	0e c0       	rjmp	.+28     	; 0x7ee <__fixsfsi+0x9c>
     7d2:	20 e0       	ldi	r18, 0x00	; 0
     7d4:	30 e0       	ldi	r19, 0x00	; 0
     7d6:	40 e0       	ldi	r20, 0x00	; 0
     7d8:	50 e0       	ldi	r21, 0x00	; 0
     7da:	09 c0       	rjmp	.+18     	; 0x7ee <__fixsfsi+0x9c>
     7dc:	2f ef       	ldi	r18, 0xFF	; 255
     7de:	3f ef       	ldi	r19, 0xFF	; 255
     7e0:	4f ef       	ldi	r20, 0xFF	; 255
     7e2:	5f e7       	ldi	r21, 0x7F	; 127
     7e4:	04 c0       	rjmp	.+8      	; 0x7ee <__fixsfsi+0x9c>
     7e6:	20 e0       	ldi	r18, 0x00	; 0
     7e8:	30 e0       	ldi	r19, 0x00	; 0
     7ea:	40 e0       	ldi	r20, 0x00	; 0
     7ec:	50 e8       	ldi	r21, 0x80	; 128
     7ee:	b9 01       	movw	r22, r18
     7f0:	ca 01       	movw	r24, r20
     7f2:	2c 96       	adiw	r28, 0x0c	; 12
     7f4:	e2 e0       	ldi	r30, 0x02	; 2
     7f6:	0c 94 c2 10 	jmp	0x2184	; 0x2184 <__epilogue_restores__+0x20>

000007fa <__pack_f>:
     7fa:	df 92       	push	r13
     7fc:	ef 92       	push	r14
     7fe:	ff 92       	push	r15
     800:	0f 93       	push	r16
     802:	1f 93       	push	r17
     804:	fc 01       	movw	r30, r24
     806:	e4 80       	ldd	r14, Z+4	; 0x04
     808:	f5 80       	ldd	r15, Z+5	; 0x05
     80a:	06 81       	ldd	r16, Z+6	; 0x06
     80c:	17 81       	ldd	r17, Z+7	; 0x07
     80e:	d1 80       	ldd	r13, Z+1	; 0x01
     810:	80 81       	ld	r24, Z
     812:	82 30       	cpi	r24, 0x02	; 2
     814:	48 f4       	brcc	.+18     	; 0x828 <__pack_f+0x2e>
     816:	80 e0       	ldi	r24, 0x00	; 0
     818:	90 e0       	ldi	r25, 0x00	; 0
     81a:	a0 e1       	ldi	r26, 0x10	; 16
     81c:	b0 e0       	ldi	r27, 0x00	; 0
     81e:	e8 2a       	or	r14, r24
     820:	f9 2a       	or	r15, r25
     822:	0a 2b       	or	r16, r26
     824:	1b 2b       	or	r17, r27
     826:	a5 c0       	rjmp	.+330    	; 0x972 <__stack+0x113>
     828:	84 30       	cpi	r24, 0x04	; 4
     82a:	09 f4       	brne	.+2      	; 0x82e <__pack_f+0x34>
     82c:	9f c0       	rjmp	.+318    	; 0x96c <__stack+0x10d>
     82e:	82 30       	cpi	r24, 0x02	; 2
     830:	21 f4       	brne	.+8      	; 0x83a <__pack_f+0x40>
     832:	ee 24       	eor	r14, r14
     834:	ff 24       	eor	r15, r15
     836:	87 01       	movw	r16, r14
     838:	05 c0       	rjmp	.+10     	; 0x844 <__pack_f+0x4a>
     83a:	e1 14       	cp	r14, r1
     83c:	f1 04       	cpc	r15, r1
     83e:	01 05       	cpc	r16, r1
     840:	11 05       	cpc	r17, r1
     842:	19 f4       	brne	.+6      	; 0x84a <__pack_f+0x50>
     844:	e0 e0       	ldi	r30, 0x00	; 0
     846:	f0 e0       	ldi	r31, 0x00	; 0
     848:	96 c0       	rjmp	.+300    	; 0x976 <__stack+0x117>
     84a:	62 81       	ldd	r22, Z+2	; 0x02
     84c:	73 81       	ldd	r23, Z+3	; 0x03
     84e:	9f ef       	ldi	r25, 0xFF	; 255
     850:	62 38       	cpi	r22, 0x82	; 130
     852:	79 07       	cpc	r23, r25
     854:	0c f0       	brlt	.+2      	; 0x858 <__pack_f+0x5e>
     856:	5b c0       	rjmp	.+182    	; 0x90e <__stack+0xaf>
     858:	22 e8       	ldi	r18, 0x82	; 130
     85a:	3f ef       	ldi	r19, 0xFF	; 255
     85c:	26 1b       	sub	r18, r22
     85e:	37 0b       	sbc	r19, r23
     860:	2a 31       	cpi	r18, 0x1A	; 26
     862:	31 05       	cpc	r19, r1
     864:	2c f0       	brlt	.+10     	; 0x870 <__stack+0x11>
     866:	20 e0       	ldi	r18, 0x00	; 0
     868:	30 e0       	ldi	r19, 0x00	; 0
     86a:	40 e0       	ldi	r20, 0x00	; 0
     86c:	50 e0       	ldi	r21, 0x00	; 0
     86e:	2a c0       	rjmp	.+84     	; 0x8c4 <__stack+0x65>
     870:	b8 01       	movw	r22, r16
     872:	a7 01       	movw	r20, r14
     874:	02 2e       	mov	r0, r18
     876:	04 c0       	rjmp	.+8      	; 0x880 <__stack+0x21>
     878:	76 95       	lsr	r23
     87a:	67 95       	ror	r22
     87c:	57 95       	ror	r21
     87e:	47 95       	ror	r20
     880:	0a 94       	dec	r0
     882:	d2 f7       	brpl	.-12     	; 0x878 <__stack+0x19>
     884:	81 e0       	ldi	r24, 0x01	; 1
     886:	90 e0       	ldi	r25, 0x00	; 0
     888:	a0 e0       	ldi	r26, 0x00	; 0
     88a:	b0 e0       	ldi	r27, 0x00	; 0
     88c:	04 c0       	rjmp	.+8      	; 0x896 <__stack+0x37>
     88e:	88 0f       	add	r24, r24
     890:	99 1f       	adc	r25, r25
     892:	aa 1f       	adc	r26, r26
     894:	bb 1f       	adc	r27, r27
     896:	2a 95       	dec	r18
     898:	d2 f7       	brpl	.-12     	; 0x88e <__stack+0x2f>
     89a:	01 97       	sbiw	r24, 0x01	; 1
     89c:	a1 09       	sbc	r26, r1
     89e:	b1 09       	sbc	r27, r1
     8a0:	8e 21       	and	r24, r14
     8a2:	9f 21       	and	r25, r15
     8a4:	a0 23       	and	r26, r16
     8a6:	b1 23       	and	r27, r17
     8a8:	00 97       	sbiw	r24, 0x00	; 0
     8aa:	a1 05       	cpc	r26, r1
     8ac:	b1 05       	cpc	r27, r1
     8ae:	21 f0       	breq	.+8      	; 0x8b8 <__stack+0x59>
     8b0:	81 e0       	ldi	r24, 0x01	; 1
     8b2:	90 e0       	ldi	r25, 0x00	; 0
     8b4:	a0 e0       	ldi	r26, 0x00	; 0
     8b6:	b0 e0       	ldi	r27, 0x00	; 0
     8b8:	9a 01       	movw	r18, r20
     8ba:	ab 01       	movw	r20, r22
     8bc:	28 2b       	or	r18, r24
     8be:	39 2b       	or	r19, r25
     8c0:	4a 2b       	or	r20, r26
     8c2:	5b 2b       	or	r21, r27
     8c4:	da 01       	movw	r26, r20
     8c6:	c9 01       	movw	r24, r18
     8c8:	8f 77       	andi	r24, 0x7F	; 127
     8ca:	90 70       	andi	r25, 0x00	; 0
     8cc:	a0 70       	andi	r26, 0x00	; 0
     8ce:	b0 70       	andi	r27, 0x00	; 0
     8d0:	80 34       	cpi	r24, 0x40	; 64
     8d2:	91 05       	cpc	r25, r1
     8d4:	a1 05       	cpc	r26, r1
     8d6:	b1 05       	cpc	r27, r1
     8d8:	39 f4       	brne	.+14     	; 0x8e8 <__stack+0x89>
     8da:	27 ff       	sbrs	r18, 7
     8dc:	09 c0       	rjmp	.+18     	; 0x8f0 <__stack+0x91>
     8de:	20 5c       	subi	r18, 0xC0	; 192
     8e0:	3f 4f       	sbci	r19, 0xFF	; 255
     8e2:	4f 4f       	sbci	r20, 0xFF	; 255
     8e4:	5f 4f       	sbci	r21, 0xFF	; 255
     8e6:	04 c0       	rjmp	.+8      	; 0x8f0 <__stack+0x91>
     8e8:	21 5c       	subi	r18, 0xC1	; 193
     8ea:	3f 4f       	sbci	r19, 0xFF	; 255
     8ec:	4f 4f       	sbci	r20, 0xFF	; 255
     8ee:	5f 4f       	sbci	r21, 0xFF	; 255
     8f0:	e0 e0       	ldi	r30, 0x00	; 0
     8f2:	f0 e0       	ldi	r31, 0x00	; 0
     8f4:	20 30       	cpi	r18, 0x00	; 0
     8f6:	a0 e0       	ldi	r26, 0x00	; 0
     8f8:	3a 07       	cpc	r19, r26
     8fa:	a0 e0       	ldi	r26, 0x00	; 0
     8fc:	4a 07       	cpc	r20, r26
     8fe:	a0 e4       	ldi	r26, 0x40	; 64
     900:	5a 07       	cpc	r21, r26
     902:	10 f0       	brcs	.+4      	; 0x908 <__stack+0xa9>
     904:	e1 e0       	ldi	r30, 0x01	; 1
     906:	f0 e0       	ldi	r31, 0x00	; 0
     908:	79 01       	movw	r14, r18
     90a:	8a 01       	movw	r16, r20
     90c:	27 c0       	rjmp	.+78     	; 0x95c <__stack+0xfd>
     90e:	60 38       	cpi	r22, 0x80	; 128
     910:	71 05       	cpc	r23, r1
     912:	64 f5       	brge	.+88     	; 0x96c <__stack+0x10d>
     914:	fb 01       	movw	r30, r22
     916:	e1 58       	subi	r30, 0x81	; 129
     918:	ff 4f       	sbci	r31, 0xFF	; 255
     91a:	d8 01       	movw	r26, r16
     91c:	c7 01       	movw	r24, r14
     91e:	8f 77       	andi	r24, 0x7F	; 127
     920:	90 70       	andi	r25, 0x00	; 0
     922:	a0 70       	andi	r26, 0x00	; 0
     924:	b0 70       	andi	r27, 0x00	; 0
     926:	80 34       	cpi	r24, 0x40	; 64
     928:	91 05       	cpc	r25, r1
     92a:	a1 05       	cpc	r26, r1
     92c:	b1 05       	cpc	r27, r1
     92e:	39 f4       	brne	.+14     	; 0x93e <__stack+0xdf>
     930:	e7 fe       	sbrs	r14, 7
     932:	0d c0       	rjmp	.+26     	; 0x94e <__stack+0xef>
     934:	80 e4       	ldi	r24, 0x40	; 64
     936:	90 e0       	ldi	r25, 0x00	; 0
     938:	a0 e0       	ldi	r26, 0x00	; 0
     93a:	b0 e0       	ldi	r27, 0x00	; 0
     93c:	04 c0       	rjmp	.+8      	; 0x946 <__stack+0xe7>
     93e:	8f e3       	ldi	r24, 0x3F	; 63
     940:	90 e0       	ldi	r25, 0x00	; 0
     942:	a0 e0       	ldi	r26, 0x00	; 0
     944:	b0 e0       	ldi	r27, 0x00	; 0
     946:	e8 0e       	add	r14, r24
     948:	f9 1e       	adc	r15, r25
     94a:	0a 1f       	adc	r16, r26
     94c:	1b 1f       	adc	r17, r27
     94e:	17 ff       	sbrs	r17, 7
     950:	05 c0       	rjmp	.+10     	; 0x95c <__stack+0xfd>
     952:	16 95       	lsr	r17
     954:	07 95       	ror	r16
     956:	f7 94       	ror	r15
     958:	e7 94       	ror	r14
     95a:	31 96       	adiw	r30, 0x01	; 1
     95c:	87 e0       	ldi	r24, 0x07	; 7
     95e:	16 95       	lsr	r17
     960:	07 95       	ror	r16
     962:	f7 94       	ror	r15
     964:	e7 94       	ror	r14
     966:	8a 95       	dec	r24
     968:	d1 f7       	brne	.-12     	; 0x95e <__stack+0xff>
     96a:	05 c0       	rjmp	.+10     	; 0x976 <__stack+0x117>
     96c:	ee 24       	eor	r14, r14
     96e:	ff 24       	eor	r15, r15
     970:	87 01       	movw	r16, r14
     972:	ef ef       	ldi	r30, 0xFF	; 255
     974:	f0 e0       	ldi	r31, 0x00	; 0
     976:	6e 2f       	mov	r22, r30
     978:	67 95       	ror	r22
     97a:	66 27       	eor	r22, r22
     97c:	67 95       	ror	r22
     97e:	90 2f       	mov	r25, r16
     980:	9f 77       	andi	r25, 0x7F	; 127
     982:	d7 94       	ror	r13
     984:	dd 24       	eor	r13, r13
     986:	d7 94       	ror	r13
     988:	8e 2f       	mov	r24, r30
     98a:	86 95       	lsr	r24
     98c:	49 2f       	mov	r20, r25
     98e:	46 2b       	or	r20, r22
     990:	58 2f       	mov	r21, r24
     992:	5d 29       	or	r21, r13
     994:	b7 01       	movw	r22, r14
     996:	ca 01       	movw	r24, r20
     998:	1f 91       	pop	r17
     99a:	0f 91       	pop	r16
     99c:	ff 90       	pop	r15
     99e:	ef 90       	pop	r14
     9a0:	df 90       	pop	r13
     9a2:	08 95       	ret

000009a4 <__unpack_f>:
     9a4:	fc 01       	movw	r30, r24
     9a6:	db 01       	movw	r26, r22
     9a8:	40 81       	ld	r20, Z
     9aa:	51 81       	ldd	r21, Z+1	; 0x01
     9ac:	22 81       	ldd	r18, Z+2	; 0x02
     9ae:	62 2f       	mov	r22, r18
     9b0:	6f 77       	andi	r22, 0x7F	; 127
     9b2:	70 e0       	ldi	r23, 0x00	; 0
     9b4:	22 1f       	adc	r18, r18
     9b6:	22 27       	eor	r18, r18
     9b8:	22 1f       	adc	r18, r18
     9ba:	93 81       	ldd	r25, Z+3	; 0x03
     9bc:	89 2f       	mov	r24, r25
     9be:	88 0f       	add	r24, r24
     9c0:	82 2b       	or	r24, r18
     9c2:	28 2f       	mov	r18, r24
     9c4:	30 e0       	ldi	r19, 0x00	; 0
     9c6:	99 1f       	adc	r25, r25
     9c8:	99 27       	eor	r25, r25
     9ca:	99 1f       	adc	r25, r25
     9cc:	11 96       	adiw	r26, 0x01	; 1
     9ce:	9c 93       	st	X, r25
     9d0:	11 97       	sbiw	r26, 0x01	; 1
     9d2:	21 15       	cp	r18, r1
     9d4:	31 05       	cpc	r19, r1
     9d6:	a9 f5       	brne	.+106    	; 0xa42 <__unpack_f+0x9e>
     9d8:	41 15       	cp	r20, r1
     9da:	51 05       	cpc	r21, r1
     9dc:	61 05       	cpc	r22, r1
     9de:	71 05       	cpc	r23, r1
     9e0:	11 f4       	brne	.+4      	; 0x9e6 <__unpack_f+0x42>
     9e2:	82 e0       	ldi	r24, 0x02	; 2
     9e4:	37 c0       	rjmp	.+110    	; 0xa54 <__unpack_f+0xb0>
     9e6:	82 e8       	ldi	r24, 0x82	; 130
     9e8:	9f ef       	ldi	r25, 0xFF	; 255
     9ea:	13 96       	adiw	r26, 0x03	; 3
     9ec:	9c 93       	st	X, r25
     9ee:	8e 93       	st	-X, r24
     9f0:	12 97       	sbiw	r26, 0x02	; 2
     9f2:	9a 01       	movw	r18, r20
     9f4:	ab 01       	movw	r20, r22
     9f6:	67 e0       	ldi	r22, 0x07	; 7
     9f8:	22 0f       	add	r18, r18
     9fa:	33 1f       	adc	r19, r19
     9fc:	44 1f       	adc	r20, r20
     9fe:	55 1f       	adc	r21, r21
     a00:	6a 95       	dec	r22
     a02:	d1 f7       	brne	.-12     	; 0x9f8 <__unpack_f+0x54>
     a04:	83 e0       	ldi	r24, 0x03	; 3
     a06:	8c 93       	st	X, r24
     a08:	0d c0       	rjmp	.+26     	; 0xa24 <__unpack_f+0x80>
     a0a:	22 0f       	add	r18, r18
     a0c:	33 1f       	adc	r19, r19
     a0e:	44 1f       	adc	r20, r20
     a10:	55 1f       	adc	r21, r21
     a12:	12 96       	adiw	r26, 0x02	; 2
     a14:	8d 91       	ld	r24, X+
     a16:	9c 91       	ld	r25, X
     a18:	13 97       	sbiw	r26, 0x03	; 3
     a1a:	01 97       	sbiw	r24, 0x01	; 1
     a1c:	13 96       	adiw	r26, 0x03	; 3
     a1e:	9c 93       	st	X, r25
     a20:	8e 93       	st	-X, r24
     a22:	12 97       	sbiw	r26, 0x02	; 2
     a24:	20 30       	cpi	r18, 0x00	; 0
     a26:	80 e0       	ldi	r24, 0x00	; 0
     a28:	38 07       	cpc	r19, r24
     a2a:	80 e0       	ldi	r24, 0x00	; 0
     a2c:	48 07       	cpc	r20, r24
     a2e:	80 e4       	ldi	r24, 0x40	; 64
     a30:	58 07       	cpc	r21, r24
     a32:	58 f3       	brcs	.-42     	; 0xa0a <__unpack_f+0x66>
     a34:	14 96       	adiw	r26, 0x04	; 4
     a36:	2d 93       	st	X+, r18
     a38:	3d 93       	st	X+, r19
     a3a:	4d 93       	st	X+, r20
     a3c:	5c 93       	st	X, r21
     a3e:	17 97       	sbiw	r26, 0x07	; 7
     a40:	08 95       	ret
     a42:	2f 3f       	cpi	r18, 0xFF	; 255
     a44:	31 05       	cpc	r19, r1
     a46:	79 f4       	brne	.+30     	; 0xa66 <__unpack_f+0xc2>
     a48:	41 15       	cp	r20, r1
     a4a:	51 05       	cpc	r21, r1
     a4c:	61 05       	cpc	r22, r1
     a4e:	71 05       	cpc	r23, r1
     a50:	19 f4       	brne	.+6      	; 0xa58 <__unpack_f+0xb4>
     a52:	84 e0       	ldi	r24, 0x04	; 4
     a54:	8c 93       	st	X, r24
     a56:	08 95       	ret
     a58:	64 ff       	sbrs	r22, 4
     a5a:	03 c0       	rjmp	.+6      	; 0xa62 <__unpack_f+0xbe>
     a5c:	81 e0       	ldi	r24, 0x01	; 1
     a5e:	8c 93       	st	X, r24
     a60:	12 c0       	rjmp	.+36     	; 0xa86 <__unpack_f+0xe2>
     a62:	1c 92       	st	X, r1
     a64:	10 c0       	rjmp	.+32     	; 0xa86 <__unpack_f+0xe2>
     a66:	2f 57       	subi	r18, 0x7F	; 127
     a68:	30 40       	sbci	r19, 0x00	; 0
     a6a:	13 96       	adiw	r26, 0x03	; 3
     a6c:	3c 93       	st	X, r19
     a6e:	2e 93       	st	-X, r18
     a70:	12 97       	sbiw	r26, 0x02	; 2
     a72:	83 e0       	ldi	r24, 0x03	; 3
     a74:	8c 93       	st	X, r24
     a76:	87 e0       	ldi	r24, 0x07	; 7
     a78:	44 0f       	add	r20, r20
     a7a:	55 1f       	adc	r21, r21
     a7c:	66 1f       	adc	r22, r22
     a7e:	77 1f       	adc	r23, r23
     a80:	8a 95       	dec	r24
     a82:	d1 f7       	brne	.-12     	; 0xa78 <__unpack_f+0xd4>
     a84:	70 64       	ori	r23, 0x40	; 64
     a86:	14 96       	adiw	r26, 0x04	; 4
     a88:	4d 93       	st	X+, r20
     a8a:	5d 93       	st	X+, r21
     a8c:	6d 93       	st	X+, r22
     a8e:	7c 93       	st	X, r23
     a90:	17 97       	sbiw	r26, 0x07	; 7
     a92:	08 95       	ret

00000a94 <__fpcmp_parts_f>:
     a94:	1f 93       	push	r17
     a96:	dc 01       	movw	r26, r24
     a98:	fb 01       	movw	r30, r22
     a9a:	9c 91       	ld	r25, X
     a9c:	92 30       	cpi	r25, 0x02	; 2
     a9e:	08 f4       	brcc	.+2      	; 0xaa2 <__fpcmp_parts_f+0xe>
     aa0:	47 c0       	rjmp	.+142    	; 0xb30 <__fpcmp_parts_f+0x9c>
     aa2:	80 81       	ld	r24, Z
     aa4:	82 30       	cpi	r24, 0x02	; 2
     aa6:	08 f4       	brcc	.+2      	; 0xaaa <__fpcmp_parts_f+0x16>
     aa8:	43 c0       	rjmp	.+134    	; 0xb30 <__fpcmp_parts_f+0x9c>
     aaa:	94 30       	cpi	r25, 0x04	; 4
     aac:	51 f4       	brne	.+20     	; 0xac2 <__fpcmp_parts_f+0x2e>
     aae:	11 96       	adiw	r26, 0x01	; 1
     ab0:	1c 91       	ld	r17, X
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	99 f5       	brne	.+102    	; 0xb1c <__fpcmp_parts_f+0x88>
     ab6:	81 81       	ldd	r24, Z+1	; 0x01
     ab8:	68 2f       	mov	r22, r24
     aba:	70 e0       	ldi	r23, 0x00	; 0
     abc:	61 1b       	sub	r22, r17
     abe:	71 09       	sbc	r23, r1
     ac0:	3f c0       	rjmp	.+126    	; 0xb40 <__fpcmp_parts_f+0xac>
     ac2:	84 30       	cpi	r24, 0x04	; 4
     ac4:	21 f0       	breq	.+8      	; 0xace <__fpcmp_parts_f+0x3a>
     ac6:	92 30       	cpi	r25, 0x02	; 2
     ac8:	31 f4       	brne	.+12     	; 0xad6 <__fpcmp_parts_f+0x42>
     aca:	82 30       	cpi	r24, 0x02	; 2
     acc:	b9 f1       	breq	.+110    	; 0xb3c <__fpcmp_parts_f+0xa8>
     ace:	81 81       	ldd	r24, Z+1	; 0x01
     ad0:	88 23       	and	r24, r24
     ad2:	89 f1       	breq	.+98     	; 0xb36 <__fpcmp_parts_f+0xa2>
     ad4:	2d c0       	rjmp	.+90     	; 0xb30 <__fpcmp_parts_f+0x9c>
     ad6:	11 96       	adiw	r26, 0x01	; 1
     ad8:	1c 91       	ld	r17, X
     ada:	11 97       	sbiw	r26, 0x01	; 1
     adc:	82 30       	cpi	r24, 0x02	; 2
     ade:	f1 f0       	breq	.+60     	; 0xb1c <__fpcmp_parts_f+0x88>
     ae0:	81 81       	ldd	r24, Z+1	; 0x01
     ae2:	18 17       	cp	r17, r24
     ae4:	d9 f4       	brne	.+54     	; 0xb1c <__fpcmp_parts_f+0x88>
     ae6:	12 96       	adiw	r26, 0x02	; 2
     ae8:	2d 91       	ld	r18, X+
     aea:	3c 91       	ld	r19, X
     aec:	13 97       	sbiw	r26, 0x03	; 3
     aee:	82 81       	ldd	r24, Z+2	; 0x02
     af0:	93 81       	ldd	r25, Z+3	; 0x03
     af2:	82 17       	cp	r24, r18
     af4:	93 07       	cpc	r25, r19
     af6:	94 f0       	brlt	.+36     	; 0xb1c <__fpcmp_parts_f+0x88>
     af8:	28 17       	cp	r18, r24
     afa:	39 07       	cpc	r19, r25
     afc:	bc f0       	brlt	.+46     	; 0xb2c <__fpcmp_parts_f+0x98>
     afe:	14 96       	adiw	r26, 0x04	; 4
     b00:	8d 91       	ld	r24, X+
     b02:	9d 91       	ld	r25, X+
     b04:	0d 90       	ld	r0, X+
     b06:	bc 91       	ld	r27, X
     b08:	a0 2d       	mov	r26, r0
     b0a:	24 81       	ldd	r18, Z+4	; 0x04
     b0c:	35 81       	ldd	r19, Z+5	; 0x05
     b0e:	46 81       	ldd	r20, Z+6	; 0x06
     b10:	57 81       	ldd	r21, Z+7	; 0x07
     b12:	28 17       	cp	r18, r24
     b14:	39 07       	cpc	r19, r25
     b16:	4a 07       	cpc	r20, r26
     b18:	5b 07       	cpc	r21, r27
     b1a:	18 f4       	brcc	.+6      	; 0xb22 <__fpcmp_parts_f+0x8e>
     b1c:	11 23       	and	r17, r17
     b1e:	41 f0       	breq	.+16     	; 0xb30 <__fpcmp_parts_f+0x9c>
     b20:	0a c0       	rjmp	.+20     	; 0xb36 <__fpcmp_parts_f+0xa2>
     b22:	82 17       	cp	r24, r18
     b24:	93 07       	cpc	r25, r19
     b26:	a4 07       	cpc	r26, r20
     b28:	b5 07       	cpc	r27, r21
     b2a:	40 f4       	brcc	.+16     	; 0xb3c <__fpcmp_parts_f+0xa8>
     b2c:	11 23       	and	r17, r17
     b2e:	19 f0       	breq	.+6      	; 0xb36 <__fpcmp_parts_f+0xa2>
     b30:	61 e0       	ldi	r22, 0x01	; 1
     b32:	70 e0       	ldi	r23, 0x00	; 0
     b34:	05 c0       	rjmp	.+10     	; 0xb40 <__fpcmp_parts_f+0xac>
     b36:	6f ef       	ldi	r22, 0xFF	; 255
     b38:	7f ef       	ldi	r23, 0xFF	; 255
     b3a:	02 c0       	rjmp	.+4      	; 0xb40 <__fpcmp_parts_f+0xac>
     b3c:	60 e0       	ldi	r22, 0x00	; 0
     b3e:	70 e0       	ldi	r23, 0x00	; 0
     b40:	cb 01       	movw	r24, r22
     b42:	1f 91       	pop	r17
     b44:	08 95       	ret

00000b46 <__vector_1>:
unsigned char H_Decrement_flag = 0;
unsigned char H_Increment_flag = 0;

//--------------------------------------INTERRUPT ROUTINES-----------------------------------------

ISR(INT0_vect) {
     b46:	1f 92       	push	r1
     b48:	0f 92       	push	r0
     b4a:	0f b6       	in	r0, 0x3f	; 63
     b4c:	0f 92       	push	r0
     b4e:	11 24       	eor	r1, r1
     b50:	df 93       	push	r29
     b52:	cf 93       	push	r28
     b54:	cd b7       	in	r28, 0x3d	; 61
     b56:	de b7       	in	r29, 0x3e	; 62
    hours = 0;
     b58:	10 92 68 00 	sts	0x0068, r1
    minutes = 0;
     b5c:	10 92 69 00 	sts	0x0069, r1
    seconds = 0;
     b60:	10 92 6a 00 	sts	0x006A, r1
}
     b64:	cf 91       	pop	r28
     b66:	df 91       	pop	r29
     b68:	0f 90       	pop	r0
     b6a:	0f be       	out	0x3f, r0	; 63
     b6c:	0f 90       	pop	r0
     b6e:	1f 90       	pop	r1
     b70:	18 95       	reti

00000b72 <__vector_7>:

ISR(TIMER1_COMPA_vect) {
     b72:	1f 92       	push	r1
     b74:	0f 92       	push	r0
     b76:	0f b6       	in	r0, 0x3f	; 63
     b78:	0f 92       	push	r0
     b7a:	11 24       	eor	r1, r1
     b7c:	8f 93       	push	r24
     b7e:	df 93       	push	r29
     b80:	cf 93       	push	r28
     b82:	cd b7       	in	r28, 0x3d	; 61
     b84:	de b7       	in	r29, 0x3e	; 62
    if (TimerState_flag == 0) {
     b86:	80 91 6c 00 	lds	r24, 0x006C
     b8a:	88 23       	and	r24, r24
     b8c:	11 f5       	brne	.+68     	; 0xbd2 <__vector_7+0x60>
        seconds++;
     b8e:	80 91 6a 00 	lds	r24, 0x006A
     b92:	8f 5f       	subi	r24, 0xFF	; 255
     b94:	80 93 6a 00 	sts	0x006A, r24
        if (seconds == 60) {
     b98:	80 91 6a 00 	lds	r24, 0x006A
     b9c:	8c 33       	cpi	r24, 0x3C	; 60
     b9e:	39 f4       	brne	.+14     	; 0xbae <__vector_7+0x3c>
            seconds = 0;
     ba0:	10 92 6a 00 	sts	0x006A, r1
            minutes++;
     ba4:	80 91 69 00 	lds	r24, 0x0069
     ba8:	8f 5f       	subi	r24, 0xFF	; 255
     baa:	80 93 69 00 	sts	0x0069, r24
        }
        if (minutes == 60) {
     bae:	80 91 69 00 	lds	r24, 0x0069
     bb2:	8c 33       	cpi	r24, 0x3C	; 60
     bb4:	39 f4       	brne	.+14     	; 0xbc4 <__vector_7+0x52>
            minutes = 0;
     bb6:	10 92 69 00 	sts	0x0069, r1
            hours++;
     bba:	80 91 68 00 	lds	r24, 0x0068
     bbe:	8f 5f       	subi	r24, 0xFF	; 255
     bc0:	80 93 68 00 	sts	0x0068, r24
        }
        if (hours == 100) {
     bc4:	80 91 68 00 	lds	r24, 0x0068
     bc8:	84 36       	cpi	r24, 0x64	; 100
     bca:	91 f5       	brne	.+100    	; 0xc30 <__vector_7+0xbe>
            hours = 0;
     bcc:	10 92 68 00 	sts	0x0068, r1
     bd0:	2f c0       	rjmp	.+94     	; 0xc30 <__vector_7+0xbe>
        }
    } else if (TimerState_flag == 1) {
     bd2:	80 91 6c 00 	lds	r24, 0x006C
     bd6:	81 30       	cpi	r24, 0x01	; 1
     bd8:	59 f5       	brne	.+86     	; 0xc30 <__vector_7+0xbe>
        if (seconds > 0) {
     bda:	80 91 6a 00 	lds	r24, 0x006A
     bde:	88 23       	and	r24, r24
     be0:	31 f0       	breq	.+12     	; 0xbee <__vector_7+0x7c>
            seconds--;  // as long as seconds are greater than 0;
     be2:	80 91 6a 00 	lds	r24, 0x006A
     be6:	81 50       	subi	r24, 0x01	; 1
     be8:	80 93 6a 00 	sts	0x006A, r24
     bec:	21 c0       	rjmp	.+66     	; 0xc30 <__vector_7+0xbe>
        } else if (minutes > 0 || hours > 0) {
     bee:	80 91 69 00 	lds	r24, 0x0069
     bf2:	88 23       	and	r24, r24
     bf4:	21 f4       	brne	.+8      	; 0xbfe <__vector_7+0x8c>
     bf6:	80 91 68 00 	lds	r24, 0x0068
     bfa:	88 23       	and	r24, r24
     bfc:	c9 f0       	breq	.+50     	; 0xc30 <__vector_7+0xbe>
            seconds = 59;  // Wrap seconds to 59 when decrementing from 0
     bfe:	8b e3       	ldi	r24, 0x3B	; 59
     c00:	80 93 6a 00 	sts	0x006A, r24
            if (minutes > 0) {
     c04:	80 91 69 00 	lds	r24, 0x0069
     c08:	88 23       	and	r24, r24
     c0a:	31 f0       	breq	.+12     	; 0xc18 <__vector_7+0xa6>
                minutes--;
     c0c:	80 91 69 00 	lds	r24, 0x0069
     c10:	81 50       	subi	r24, 0x01	; 1
     c12:	80 93 69 00 	sts	0x0069, r24
     c16:	0c c0       	rjmp	.+24     	; 0xc30 <__vector_7+0xbe>
            } else if (hours > 0) {
     c18:	80 91 68 00 	lds	r24, 0x0068
     c1c:	88 23       	and	r24, r24
     c1e:	41 f0       	breq	.+16     	; 0xc30 <__vector_7+0xbe>
                hours--;
     c20:	80 91 68 00 	lds	r24, 0x0068
     c24:	81 50       	subi	r24, 0x01	; 1
     c26:	80 93 68 00 	sts	0x0068, r24
                minutes = 59;  // Borrow from hours if needed
     c2a:	8b e3       	ldi	r24, 0x3B	; 59
     c2c:	80 93 69 00 	sts	0x0069, r24
            }
        }
    }
}
     c30:	cf 91       	pop	r28
     c32:	df 91       	pop	r29
     c34:	8f 91       	pop	r24
     c36:	0f 90       	pop	r0
     c38:	0f be       	out	0x3f, r0	; 63
     c3a:	0f 90       	pop	r0
     c3c:	1f 90       	pop	r1
     c3e:	18 95       	reti

00000c40 <__vector_2>:

ISR(INT1_vect) {
     c40:	1f 92       	push	r1
     c42:	0f 92       	push	r0
     c44:	0f b6       	in	r0, 0x3f	; 63
     c46:	0f 92       	push	r0
     c48:	11 24       	eor	r1, r1
     c4a:	8f 93       	push	r24
     c4c:	af 93       	push	r26
     c4e:	bf 93       	push	r27
     c50:	ef 93       	push	r30
     c52:	ff 93       	push	r31
     c54:	df 93       	push	r29
     c56:	cf 93       	push	r28
     c58:	cd b7       	in	r28, 0x3d	; 61
     c5a:	de b7       	in	r29, 0x3e	; 62
    TCCR1B &= ~(1<<CS12) & ~(1<<CS11) & ~(1<<CS10);
     c5c:	ae e4       	ldi	r26, 0x4E	; 78
     c5e:	b0 e0       	ldi	r27, 0x00	; 0
     c60:	ee e4       	ldi	r30, 0x4E	; 78
     c62:	f0 e0       	ldi	r31, 0x00	; 0
     c64:	80 81       	ld	r24, Z
     c66:	88 7f       	andi	r24, 0xF8	; 248
     c68:	8c 93       	st	X, r24
}
     c6a:	cf 91       	pop	r28
     c6c:	df 91       	pop	r29
     c6e:	ff 91       	pop	r31
     c70:	ef 91       	pop	r30
     c72:	bf 91       	pop	r27
     c74:	af 91       	pop	r26
     c76:	8f 91       	pop	r24
     c78:	0f 90       	pop	r0
     c7a:	0f be       	out	0x3f, r0	; 63
     c7c:	0f 90       	pop	r0
     c7e:	1f 90       	pop	r1
     c80:	18 95       	reti

00000c82 <__vector_3>:

ISR(INT2_vect) {
     c82:	1f 92       	push	r1
     c84:	0f 92       	push	r0
     c86:	0f b6       	in	r0, 0x3f	; 63
     c88:	0f 92       	push	r0
     c8a:	11 24       	eor	r1, r1
     c8c:	8f 93       	push	r24
     c8e:	af 93       	push	r26
     c90:	bf 93       	push	r27
     c92:	ef 93       	push	r30
     c94:	ff 93       	push	r31
     c96:	df 93       	push	r29
     c98:	cf 93       	push	r28
     c9a:	cd b7       	in	r28, 0x3d	; 61
     c9c:	de b7       	in	r29, 0x3e	; 62
    TCCR1B |= (1<<CS12) | (1<<CS10);
     c9e:	ae e4       	ldi	r26, 0x4E	; 78
     ca0:	b0 e0       	ldi	r27, 0x00	; 0
     ca2:	ee e4       	ldi	r30, 0x4E	; 78
     ca4:	f0 e0       	ldi	r31, 0x00	; 0
     ca6:	80 81       	ld	r24, Z
     ca8:	85 60       	ori	r24, 0x05	; 5
     caa:	8c 93       	st	X, r24
}
     cac:	cf 91       	pop	r28
     cae:	df 91       	pop	r29
     cb0:	ff 91       	pop	r31
     cb2:	ef 91       	pop	r30
     cb4:	bf 91       	pop	r27
     cb6:	af 91       	pop	r26
     cb8:	8f 91       	pop	r24
     cba:	0f 90       	pop	r0
     cbc:	0f be       	out	0x3f, r0	; 63
     cbe:	0f 90       	pop	r0
     cc0:	1f 90       	pop	r1
     cc2:	18 95       	reti

00000cc4 <INT0_INIT>:

//--------------------------------------INITIALIZATION---------------------------------------------

void INT0_INIT(void) {
     cc4:	df 93       	push	r29
     cc6:	cf 93       	push	r28
     cc8:	cd b7       	in	r28, 0x3d	; 61
     cca:	de b7       	in	r29, 0x3e	; 62
    DDRD &= ~(1<<2);  // INT0 pin as input
     ccc:	a1 e3       	ldi	r26, 0x31	; 49
     cce:	b0 e0       	ldi	r27, 0x00	; 0
     cd0:	e1 e3       	ldi	r30, 0x31	; 49
     cd2:	f0 e0       	ldi	r31, 0x00	; 0
     cd4:	80 81       	ld	r24, Z
     cd6:	8b 7f       	andi	r24, 0xFB	; 251
     cd8:	8c 93       	st	X, r24
    PORTD |= (1<<2);  // Enable internal pull-up
     cda:	a2 e3       	ldi	r26, 0x32	; 50
     cdc:	b0 e0       	ldi	r27, 0x00	; 0
     cde:	e2 e3       	ldi	r30, 0x32	; 50
     ce0:	f0 e0       	ldi	r31, 0x00	; 0
     ce2:	80 81       	ld	r24, Z
     ce4:	84 60       	ori	r24, 0x04	; 4
     ce6:	8c 93       	st	X, r24

    SREG |= (1<<7);
     ce8:	af e5       	ldi	r26, 0x5F	; 95
     cea:	b0 e0       	ldi	r27, 0x00	; 0
     cec:	ef e5       	ldi	r30, 0x5F	; 95
     cee:	f0 e0       	ldi	r31, 0x00	; 0
     cf0:	80 81       	ld	r24, Z
     cf2:	80 68       	ori	r24, 0x80	; 128
     cf4:	8c 93       	st	X, r24
    GICR |= (1<<INT0);  // Enable external interrupt INT0
     cf6:	ab e5       	ldi	r26, 0x5B	; 91
     cf8:	b0 e0       	ldi	r27, 0x00	; 0
     cfa:	eb e5       	ldi	r30, 0x5B	; 91
     cfc:	f0 e0       	ldi	r31, 0x00	; 0
     cfe:	80 81       	ld	r24, Z
     d00:	80 64       	ori	r24, 0x40	; 64
     d02:	8c 93       	st	X, r24
    MCUCR &= ~(1<<ISC00);  // Configure for falling edge trigger
     d04:	a5 e5       	ldi	r26, 0x55	; 85
     d06:	b0 e0       	ldi	r27, 0x00	; 0
     d08:	e5 e5       	ldi	r30, 0x55	; 85
     d0a:	f0 e0       	ldi	r31, 0x00	; 0
     d0c:	80 81       	ld	r24, Z
     d0e:	8e 7f       	andi	r24, 0xFE	; 254
     d10:	8c 93       	st	X, r24
    MCUCR |= (1<<ISC01);
     d12:	a5 e5       	ldi	r26, 0x55	; 85
     d14:	b0 e0       	ldi	r27, 0x00	; 0
     d16:	e5 e5       	ldi	r30, 0x55	; 85
     d18:	f0 e0       	ldi	r31, 0x00	; 0
     d1a:	80 81       	ld	r24, Z
     d1c:	82 60       	ori	r24, 0x02	; 2
     d1e:	8c 93       	st	X, r24
}
     d20:	cf 91       	pop	r28
     d22:	df 91       	pop	r29
     d24:	08 95       	ret

00000d26 <init_timer1>:

void init_timer1(void) {
     d26:	df 93       	push	r29
     d28:	cf 93       	push	r28
     d2a:	cd b7       	in	r28, 0x3d	; 61
     d2c:	de b7       	in	r29, 0x3e	; 62
    TCNT1 = 0;
     d2e:	ec e4       	ldi	r30, 0x4C	; 76
     d30:	f0 e0       	ldi	r31, 0x00	; 0
     d32:	11 82       	std	Z+1, r1	; 0x01
     d34:	10 82       	st	Z, r1
    TCCR1B |= (1 << WGM12);  // CTC mode (Clear Timer on Compare)
     d36:	ae e4       	ldi	r26, 0x4E	; 78
     d38:	b0 e0       	ldi	r27, 0x00	; 0
     d3a:	ee e4       	ldi	r30, 0x4E	; 78
     d3c:	f0 e0       	ldi	r31, 0x00	; 0
     d3e:	80 81       	ld	r24, Z
     d40:	88 60       	ori	r24, 0x08	; 8
     d42:	8c 93       	st	X, r24
    TCCR1B |= (1 << CS12) | (1 << CS10);  // Prescaler of 1024
     d44:	ae e4       	ldi	r26, 0x4E	; 78
     d46:	b0 e0       	ldi	r27, 0x00	; 0
     d48:	ee e4       	ldi	r30, 0x4E	; 78
     d4a:	f0 e0       	ldi	r31, 0x00	; 0
     d4c:	80 81       	ld	r24, Z
     d4e:	85 60       	ori	r24, 0x05	; 5
     d50:	8c 93       	st	X, r24
    TCCR1B &= ~(1<<CS11);
     d52:	ae e4       	ldi	r26, 0x4E	; 78
     d54:	b0 e0       	ldi	r27, 0x00	; 0
     d56:	ee e4       	ldi	r30, 0x4E	; 78
     d58:	f0 e0       	ldi	r31, 0x00	; 0
     d5a:	80 81       	ld	r24, Z
     d5c:	8d 7f       	andi	r24, 0xFD	; 253
     d5e:	8c 93       	st	X, r24
    OCR1A = 15625;  // Compare match value for 1 second (16 MHz / 1024 = 15625)
     d60:	ea e4       	ldi	r30, 0x4A	; 74
     d62:	f0 e0       	ldi	r31, 0x00	; 0
     d64:	89 e0       	ldi	r24, 0x09	; 9
     d66:	9d e3       	ldi	r25, 0x3D	; 61
     d68:	91 83       	std	Z+1, r25	; 0x01
     d6a:	80 83       	st	Z, r24
    TIMSK |= (1 << OCIE1A);  // Enable Timer1 Compare A Match interrupt
     d6c:	a9 e5       	ldi	r26, 0x59	; 89
     d6e:	b0 e0       	ldi	r27, 0x00	; 0
     d70:	e9 e5       	ldi	r30, 0x59	; 89
     d72:	f0 e0       	ldi	r31, 0x00	; 0
     d74:	80 81       	ld	r24, Z
     d76:	80 61       	ori	r24, 0x10	; 16
     d78:	8c 93       	st	X, r24
    SREG |= (1<<7);  // Enable global interrupts
     d7a:	af e5       	ldi	r26, 0x5F	; 95
     d7c:	b0 e0       	ldi	r27, 0x00	; 0
     d7e:	ef e5       	ldi	r30, 0x5F	; 95
     d80:	f0 e0       	ldi	r31, 0x00	; 0
     d82:	80 81       	ld	r24, Z
     d84:	80 68       	ori	r24, 0x80	; 128
     d86:	8c 93       	st	X, r24
}
     d88:	cf 91       	pop	r28
     d8a:	df 91       	pop	r29
     d8c:	08 95       	ret

00000d8e <INT1_INIT>:

void INT1_INIT(void) {
     d8e:	df 93       	push	r29
     d90:	cf 93       	push	r28
     d92:	cd b7       	in	r28, 0x3d	; 61
     d94:	de b7       	in	r29, 0x3e	; 62
    DDRD &= ~(1<<3);  // INT1 pin as input
     d96:	a1 e3       	ldi	r26, 0x31	; 49
     d98:	b0 e0       	ldi	r27, 0x00	; 0
     d9a:	e1 e3       	ldi	r30, 0x31	; 49
     d9c:	f0 e0       	ldi	r31, 0x00	; 0
     d9e:	80 81       	ld	r24, Z
     da0:	87 7f       	andi	r24, 0xF7	; 247
     da2:	8c 93       	st	X, r24
    MCUCR |= (1<<ISC11) | (1<<ISC10);  // Configure for rising edge trigger
     da4:	a5 e5       	ldi	r26, 0x55	; 85
     da6:	b0 e0       	ldi	r27, 0x00	; 0
     da8:	e5 e5       	ldi	r30, 0x55	; 85
     daa:	f0 e0       	ldi	r31, 0x00	; 0
     dac:	80 81       	ld	r24, Z
     dae:	8c 60       	ori	r24, 0x0C	; 12
     db0:	8c 93       	st	X, r24
    GICR |= (1<<INT1);  // Enable external interrupt INT1
     db2:	ab e5       	ldi	r26, 0x5B	; 91
     db4:	b0 e0       	ldi	r27, 0x00	; 0
     db6:	eb e5       	ldi	r30, 0x5B	; 91
     db8:	f0 e0       	ldi	r31, 0x00	; 0
     dba:	80 81       	ld	r24, Z
     dbc:	80 68       	ori	r24, 0x80	; 128
     dbe:	8c 93       	st	X, r24
    SREG |= (1<<7);  // Enable global interrupts
     dc0:	af e5       	ldi	r26, 0x5F	; 95
     dc2:	b0 e0       	ldi	r27, 0x00	; 0
     dc4:	ef e5       	ldi	r30, 0x5F	; 95
     dc6:	f0 e0       	ldi	r31, 0x00	; 0
     dc8:	80 81       	ld	r24, Z
     dca:	80 68       	ori	r24, 0x80	; 128
     dcc:	8c 93       	st	X, r24
}
     dce:	cf 91       	pop	r28
     dd0:	df 91       	pop	r29
     dd2:	08 95       	ret

00000dd4 <INT2_INIT>:

void INT2_INIT(void) {
     dd4:	df 93       	push	r29
     dd6:	cf 93       	push	r28
     dd8:	cd b7       	in	r28, 0x3d	; 61
     dda:	de b7       	in	r29, 0x3e	; 62
    DDRB &= ~(1<<2);  // INT2 pin as input
     ddc:	a7 e3       	ldi	r26, 0x37	; 55
     dde:	b0 e0       	ldi	r27, 0x00	; 0
     de0:	e7 e3       	ldi	r30, 0x37	; 55
     de2:	f0 e0       	ldi	r31, 0x00	; 0
     de4:	80 81       	ld	r24, Z
     de6:	8b 7f       	andi	r24, 0xFB	; 251
     de8:	8c 93       	st	X, r24
    PORTB |= (1<<2);  // Enable internal pull-up
     dea:	a8 e3       	ldi	r26, 0x38	; 56
     dec:	b0 e0       	ldi	r27, 0x00	; 0
     dee:	e8 e3       	ldi	r30, 0x38	; 56
     df0:	f0 e0       	ldi	r31, 0x00	; 0
     df2:	80 81       	ld	r24, Z
     df4:	84 60       	ori	r24, 0x04	; 4
     df6:	8c 93       	st	X, r24
    MCUCSR &= ~(1<<ISC2);  // Falling edge trigger
     df8:	a4 e5       	ldi	r26, 0x54	; 84
     dfa:	b0 e0       	ldi	r27, 0x00	; 0
     dfc:	e4 e5       	ldi	r30, 0x54	; 84
     dfe:	f0 e0       	ldi	r31, 0x00	; 0
     e00:	80 81       	ld	r24, Z
     e02:	8f 7b       	andi	r24, 0xBF	; 191
     e04:	8c 93       	st	X, r24
    GICR |= (1<<INT2);  // Enable external interrupt INT2
     e06:	ab e5       	ldi	r26, 0x5B	; 91
     e08:	b0 e0       	ldi	r27, 0x00	; 0
     e0a:	eb e5       	ldi	r30, 0x5B	; 91
     e0c:	f0 e0       	ldi	r31, 0x00	; 0
     e0e:	80 81       	ld	r24, Z
     e10:	80 62       	ori	r24, 0x20	; 32
     e12:	8c 93       	st	X, r24
    SREG |= (1<<7);  // Enable global interrupts
     e14:	af e5       	ldi	r26, 0x5F	; 95
     e16:	b0 e0       	ldi	r27, 0x00	; 0
     e18:	ef e5       	ldi	r30, 0x5F	; 95
     e1a:	f0 e0       	ldi	r31, 0x00	; 0
     e1c:	80 81       	ld	r24, Z
     e1e:	80 68       	ori	r24, 0x80	; 128
     e20:	8c 93       	st	X, r24
}
     e22:	cf 91       	pop	r28
     e24:	df 91       	pop	r29
     e26:	08 95       	ret

00000e28 <main>:

//--------------------------------------MAIN PROGRAM-----------------------------------------------

int main(void) {
     e28:	0f 93       	push	r16
     e2a:	1f 93       	push	r17
     e2c:	df 93       	push	r29
     e2e:	cf 93       	push	r28
     e30:	cd b7       	in	r28, 0x3d	; 61
     e32:	de b7       	in	r29, 0x3e	; 62
     e34:	c2 56       	subi	r28, 0x62	; 98
     e36:	d0 40       	sbci	r29, 0x00	; 0
     e38:	0f b6       	in	r0, 0x3f	; 63
     e3a:	f8 94       	cli
     e3c:	de bf       	out	0x3e, r29	; 62
     e3e:	0f be       	out	0x3f, r0	; 63
     e40:	cd bf       	out	0x3d, r28	; 61
    // Configure seven-segment display pins
    DDRC |= 0x0F;  // First 4 bits are output (0000 1111)
     e42:	a4 e3       	ldi	r26, 0x34	; 52
     e44:	b0 e0       	ldi	r27, 0x00	; 0
     e46:	e4 e3       	ldi	r30, 0x34	; 52
     e48:	f0 e0       	ldi	r31, 0x00	; 0
     e4a:	80 81       	ld	r24, Z
     e4c:	8f 60       	ori	r24, 0x0F	; 15
     e4e:	8c 93       	st	X, r24
    PORTC &= 0xF0; // Set PC0, PC1, PC2, PC3 to 0
     e50:	a5 e3       	ldi	r26, 0x35	; 53
     e52:	b0 e0       	ldi	r27, 0x00	; 0
     e54:	e5 e3       	ldi	r30, 0x35	; 53
     e56:	f0 e0       	ldi	r31, 0x00	; 0
     e58:	80 81       	ld	r24, Z
     e5a:	80 7f       	andi	r24, 0xF0	; 240
     e5c:	8c 93       	st	X, r24

    DDRA |= 0x3F;  // All bits of port A are output (0011 1111)
     e5e:	aa e3       	ldi	r26, 0x3A	; 58
     e60:	b0 e0       	ldi	r27, 0x00	; 0
     e62:	ea e3       	ldi	r30, 0x3A	; 58
     e64:	f0 e0       	ldi	r31, 0x00	; 0
     e66:	80 81       	ld	r24, Z
     e68:	8f 63       	ori	r24, 0x3F	; 63
     e6a:	8c 93       	st	X, r24

    // Configure buzzer and LEDs
    DDRD |= (1<<0);  // Buzzer output
     e6c:	a1 e3       	ldi	r26, 0x31	; 49
     e6e:	b0 e0       	ldi	r27, 0x00	; 0
     e70:	e1 e3       	ldi	r30, 0x31	; 49
     e72:	f0 e0       	ldi	r31, 0x00	; 0
     e74:	80 81       	ld	r24, Z
     e76:	81 60       	ori	r24, 0x01	; 1
     e78:	8c 93       	st	X, r24
    PORTD &= ~(1<<0);  // Initially off
     e7a:	a2 e3       	ldi	r26, 0x32	; 50
     e7c:	b0 e0       	ldi	r27, 0x00	; 0
     e7e:	e2 e3       	ldi	r30, 0x32	; 50
     e80:	f0 e0       	ldi	r31, 0x00	; 0
     e82:	80 81       	ld	r24, Z
     e84:	8e 7f       	andi	r24, 0xFE	; 254
     e86:	8c 93       	st	X, r24

    DDRD |= (1<<4);  // Counting up RED LED output
     e88:	a1 e3       	ldi	r26, 0x31	; 49
     e8a:	b0 e0       	ldi	r27, 0x00	; 0
     e8c:	e1 e3       	ldi	r30, 0x31	; 49
     e8e:	f0 e0       	ldi	r31, 0x00	; 0
     e90:	80 81       	ld	r24, Z
     e92:	80 61       	ori	r24, 0x10	; 16
     e94:	8c 93       	st	X, r24
    PORTD |= (1<<4);  // Initially on
     e96:	a2 e3       	ldi	r26, 0x32	; 50
     e98:	b0 e0       	ldi	r27, 0x00	; 0
     e9a:	e2 e3       	ldi	r30, 0x32	; 50
     e9c:	f0 e0       	ldi	r31, 0x00	; 0
     e9e:	80 81       	ld	r24, Z
     ea0:	80 61       	ori	r24, 0x10	; 16
     ea2:	8c 93       	st	X, r24

    DDRD |= (1<<5);  // Counting down YELLOW LED output
     ea4:	a1 e3       	ldi	r26, 0x31	; 49
     ea6:	b0 e0       	ldi	r27, 0x00	; 0
     ea8:	e1 e3       	ldi	r30, 0x31	; 49
     eaa:	f0 e0       	ldi	r31, 0x00	; 0
     eac:	80 81       	ld	r24, Z
     eae:	80 62       	ori	r24, 0x20	; 32
     eb0:	8c 93       	st	X, r24
    PORTD &= ~(1<<5);  // Initially off
     eb2:	a2 e3       	ldi	r26, 0x32	; 50
     eb4:	b0 e0       	ldi	r27, 0x00	; 0
     eb6:	e2 e3       	ldi	r30, 0x32	; 50
     eb8:	f0 e0       	ldi	r31, 0x00	; 0
     eba:	80 81       	ld	r24, Z
     ebc:	8f 7d       	andi	r24, 0xDF	; 223
     ebe:	8c 93       	st	X, r24

    // Configure buttons
    DDRB &= ~(1<<5);  // Seconds Decrement
     ec0:	a7 e3       	ldi	r26, 0x37	; 55
     ec2:	b0 e0       	ldi	r27, 0x00	; 0
     ec4:	e7 e3       	ldi	r30, 0x37	; 55
     ec6:	f0 e0       	ldi	r31, 0x00	; 0
     ec8:	80 81       	ld	r24, Z
     eca:	8f 7d       	andi	r24, 0xDF	; 223
     ecc:	8c 93       	st	X, r24
    PORTB |= (1<<5);  // Internal pull-up
     ece:	a8 e3       	ldi	r26, 0x38	; 56
     ed0:	b0 e0       	ldi	r27, 0x00	; 0
     ed2:	e8 e3       	ldi	r30, 0x38	; 56
     ed4:	f0 e0       	ldi	r31, 0x00	; 0
     ed6:	80 81       	ld	r24, Z
     ed8:	80 62       	ori	r24, 0x20	; 32
     eda:	8c 93       	st	X, r24

    DDRB &= ~(1<<6);  // Seconds Increment
     edc:	a7 e3       	ldi	r26, 0x37	; 55
     ede:	b0 e0       	ldi	r27, 0x00	; 0
     ee0:	e7 e3       	ldi	r30, 0x37	; 55
     ee2:	f0 e0       	ldi	r31, 0x00	; 0
     ee4:	80 81       	ld	r24, Z
     ee6:	8f 7b       	andi	r24, 0xBF	; 191
     ee8:	8c 93       	st	X, r24
    PORTB |= (1<<6);  // Internal pull-up
     eea:	a8 e3       	ldi	r26, 0x38	; 56
     eec:	b0 e0       	ldi	r27, 0x00	; 0
     eee:	e8 e3       	ldi	r30, 0x38	; 56
     ef0:	f0 e0       	ldi	r31, 0x00	; 0
     ef2:	80 81       	ld	r24, Z
     ef4:	80 64       	ori	r24, 0x40	; 64
     ef6:	8c 93       	st	X, r24

    DDRB &= ~(1<<3);  // Minutes Decrement
     ef8:	a7 e3       	ldi	r26, 0x37	; 55
     efa:	b0 e0       	ldi	r27, 0x00	; 0
     efc:	e7 e3       	ldi	r30, 0x37	; 55
     efe:	f0 e0       	ldi	r31, 0x00	; 0
     f00:	80 81       	ld	r24, Z
     f02:	87 7f       	andi	r24, 0xF7	; 247
     f04:	8c 93       	st	X, r24
    PORTB |= (1<<3);  // Internal pull-up
     f06:	a8 e3       	ldi	r26, 0x38	; 56
     f08:	b0 e0       	ldi	r27, 0x00	; 0
     f0a:	e8 e3       	ldi	r30, 0x38	; 56
     f0c:	f0 e0       	ldi	r31, 0x00	; 0
     f0e:	80 81       	ld	r24, Z
     f10:	88 60       	ori	r24, 0x08	; 8
     f12:	8c 93       	st	X, r24

    DDRB &= ~(1<<4);  // Minutes Increment
     f14:	a7 e3       	ldi	r26, 0x37	; 55
     f16:	b0 e0       	ldi	r27, 0x00	; 0
     f18:	e7 e3       	ldi	r30, 0x37	; 55
     f1a:	f0 e0       	ldi	r31, 0x00	; 0
     f1c:	80 81       	ld	r24, Z
     f1e:	8f 7e       	andi	r24, 0xEF	; 239
     f20:	8c 93       	st	X, r24
    PORTB |= (1<<4);  // Internal pull-up
     f22:	a8 e3       	ldi	r26, 0x38	; 56
     f24:	b0 e0       	ldi	r27, 0x00	; 0
     f26:	e8 e3       	ldi	r30, 0x38	; 56
     f28:	f0 e0       	ldi	r31, 0x00	; 0
     f2a:	80 81       	ld	r24, Z
     f2c:	80 61       	ori	r24, 0x10	; 16
     f2e:	8c 93       	st	X, r24

    DDRB &= ~(1<<0);  // Hours Decrement
     f30:	a7 e3       	ldi	r26, 0x37	; 55
     f32:	b0 e0       	ldi	r27, 0x00	; 0
     f34:	e7 e3       	ldi	r30, 0x37	; 55
     f36:	f0 e0       	ldi	r31, 0x00	; 0
     f38:	80 81       	ld	r24, Z
     f3a:	8e 7f       	andi	r24, 0xFE	; 254
     f3c:	8c 93       	st	X, r24
    PORTB |= (1<<0);  // Internal pull-up
     f3e:	a8 e3       	ldi	r26, 0x38	; 56
     f40:	b0 e0       	ldi	r27, 0x00	; 0
     f42:	e8 e3       	ldi	r30, 0x38	; 56
     f44:	f0 e0       	ldi	r31, 0x00	; 0
     f46:	80 81       	ld	r24, Z
     f48:	81 60       	ori	r24, 0x01	; 1
     f4a:	8c 93       	st	X, r24

    DDRB &= ~(1<<1);  // Hours Increment
     f4c:	a7 e3       	ldi	r26, 0x37	; 55
     f4e:	b0 e0       	ldi	r27, 0x00	; 0
     f50:	e7 e3       	ldi	r30, 0x37	; 55
     f52:	f0 e0       	ldi	r31, 0x00	; 0
     f54:	80 81       	ld	r24, Z
     f56:	8d 7f       	andi	r24, 0xFD	; 253
     f58:	8c 93       	st	X, r24
    PORTB |= (1<<1);  // Internal pull-up
     f5a:	a8 e3       	ldi	r26, 0x38	; 56
     f5c:	b0 e0       	ldi	r27, 0x00	; 0
     f5e:	e8 e3       	ldi	r30, 0x38	; 56
     f60:	f0 e0       	ldi	r31, 0x00	; 0
     f62:	80 81       	ld	r24, Z
     f64:	82 60       	ori	r24, 0x02	; 2
     f66:	8c 93       	st	X, r24

    DDRB &= ~(1<<7);  // Timer state pushbutton
     f68:	a7 e3       	ldi	r26, 0x37	; 55
     f6a:	b0 e0       	ldi	r27, 0x00	; 0
     f6c:	e7 e3       	ldi	r30, 0x37	; 55
     f6e:	f0 e0       	ldi	r31, 0x00	; 0
     f70:	80 81       	ld	r24, Z
     f72:	8f 77       	andi	r24, 0x7F	; 127
     f74:	8c 93       	st	X, r24
    PORTB |= (1<<7);  // Internal pull-up
     f76:	a8 e3       	ldi	r26, 0x38	; 56
     f78:	b0 e0       	ldi	r27, 0x00	; 0
     f7a:	e8 e3       	ldi	r30, 0x38	; 56
     f7c:	f0 e0       	ldi	r31, 0x00	; 0
     f7e:	80 81       	ld	r24, Z
     f80:	80 68       	ori	r24, 0x80	; 128
     f82:	8c 93       	st	X, r24

    // Initialize interrupts
    INT0_INIT();  // Reset Timer
     f84:	0e 94 62 06 	call	0xcc4	; 0xcc4 <INT0_INIT>
    init_timer1();  // Timer1 with prescaler of 1024
     f88:	0e 94 93 06 	call	0xd26	; 0xd26 <init_timer1>
    INT1_INIT();  // Pause Timer
     f8c:	0e 94 c7 06 	call	0xd8e	; 0xd8e <INT1_INIT>
    INT2_INIT();  // Resume Timer
     f90:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <INT2_INIT>

    while (1) {
        display_time(hours, minutes, seconds);
     f94:	80 91 68 00 	lds	r24, 0x0068
     f98:	90 91 69 00 	lds	r25, 0x0069
     f9c:	20 91 6a 00 	lds	r18, 0x006A
     fa0:	69 2f       	mov	r22, r25
     fa2:	42 2f       	mov	r20, r18
     fa4:	0e 94 cc 0c 	call	0x1998	; 0x1998 <display_time>

        // Buzzer activation condition
        if (hours == 0 && minutes == 0 && seconds == 0 && TimerState_flag == 1) {
     fa8:	80 91 68 00 	lds	r24, 0x0068
     fac:	88 23       	and	r24, r24
     fae:	a1 f4       	brne	.+40     	; 0xfd8 <main+0x1b0>
     fb0:	80 91 69 00 	lds	r24, 0x0069
     fb4:	88 23       	and	r24, r24
     fb6:	81 f4       	brne	.+32     	; 0xfd8 <main+0x1b0>
     fb8:	80 91 6a 00 	lds	r24, 0x006A
     fbc:	88 23       	and	r24, r24
     fbe:	61 f4       	brne	.+24     	; 0xfd8 <main+0x1b0>
     fc0:	80 91 6c 00 	lds	r24, 0x006C
     fc4:	81 30       	cpi	r24, 0x01	; 1
     fc6:	41 f4       	brne	.+16     	; 0xfd8 <main+0x1b0>
            PORTD |= (1<<0);  // Activate buzzer
     fc8:	a2 e3       	ldi	r26, 0x32	; 50
     fca:	b0 e0       	ldi	r27, 0x00	; 0
     fcc:	e2 e3       	ldi	r30, 0x32	; 50
     fce:	f0 e0       	ldi	r31, 0x00	; 0
     fd0:	80 81       	ld	r24, Z
     fd2:	81 60       	ori	r24, 0x01	; 1
     fd4:	8c 93       	st	X, r24
     fd6:	07 c0       	rjmp	.+14     	; 0xfe6 <main+0x1be>
        } else {
            PORTD &= ~(1<<0);
     fd8:	a2 e3       	ldi	r26, 0x32	; 50
     fda:	b0 e0       	ldi	r27, 0x00	; 0
     fdc:	e2 e3       	ldi	r30, 0x32	; 50
     fde:	f0 e0       	ldi	r31, 0x00	; 0
     fe0:	80 81       	ld	r24, Z
     fe2:	8e 7f       	andi	r24, 0xFE	; 254
     fe4:	8c 93       	st	X, r24
        }

        //--------------------Time Adjustment--------------------

        // Seconds Increment
        if (!(PINB & (1<<6))) {
     fe6:	e6 e3       	ldi	r30, 0x36	; 54
     fe8:	f0 e0       	ldi	r31, 0x00	; 0
     fea:	80 81       	ld	r24, Z
     fec:	88 2f       	mov	r24, r24
     fee:	90 e0       	ldi	r25, 0x00	; 0
     ff0:	80 74       	andi	r24, 0x40	; 64
     ff2:	90 70       	andi	r25, 0x00	; 0
     ff4:	00 97       	sbiw	r24, 0x00	; 0
     ff6:	09 f0       	breq	.+2      	; 0xffa <main+0x1d2>
     ff8:	d0 c0       	rjmp	.+416    	; 0x119a <main+0x372>
     ffa:	fe 01       	movw	r30, r28
     ffc:	e1 5a       	subi	r30, 0xA1	; 161
     ffe:	ff 4f       	sbci	r31, 0xFF	; 255
    1000:	80 e0       	ldi	r24, 0x00	; 0
    1002:	90 e0       	ldi	r25, 0x00	; 0
    1004:	a0 ef       	ldi	r26, 0xF0	; 240
    1006:	b1 e4       	ldi	r27, 0x41	; 65
    1008:	80 83       	st	Z, r24
    100a:	91 83       	std	Z+1, r25	; 0x01
    100c:	a2 83       	std	Z+2, r26	; 0x02
    100e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1010:	8e 01       	movw	r16, r28
    1012:	05 5a       	subi	r16, 0xA5	; 165
    1014:	1f 4f       	sbci	r17, 0xFF	; 255
    1016:	fe 01       	movw	r30, r28
    1018:	e1 5a       	subi	r30, 0xA1	; 161
    101a:	ff 4f       	sbci	r31, 0xFF	; 255
    101c:	60 81       	ld	r22, Z
    101e:	71 81       	ldd	r23, Z+1	; 0x01
    1020:	82 81       	ldd	r24, Z+2	; 0x02
    1022:	93 81       	ldd	r25, Z+3	; 0x03
    1024:	20 e0       	ldi	r18, 0x00	; 0
    1026:	30 e0       	ldi	r19, 0x00	; 0
    1028:	4a e7       	ldi	r20, 0x7A	; 122
    102a:	55 e4       	ldi	r21, 0x45	; 69
    102c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1030:	dc 01       	movw	r26, r24
    1032:	cb 01       	movw	r24, r22
    1034:	f8 01       	movw	r30, r16
    1036:	80 83       	st	Z, r24
    1038:	91 83       	std	Z+1, r25	; 0x01
    103a:	a2 83       	std	Z+2, r26	; 0x02
    103c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    103e:	fe 01       	movw	r30, r28
    1040:	e5 5a       	subi	r30, 0xA5	; 165
    1042:	ff 4f       	sbci	r31, 0xFF	; 255
    1044:	60 81       	ld	r22, Z
    1046:	71 81       	ldd	r23, Z+1	; 0x01
    1048:	82 81       	ldd	r24, Z+2	; 0x02
    104a:	93 81       	ldd	r25, Z+3	; 0x03
    104c:	20 e0       	ldi	r18, 0x00	; 0
    104e:	30 e0       	ldi	r19, 0x00	; 0
    1050:	40 e8       	ldi	r20, 0x80	; 128
    1052:	5f e3       	ldi	r21, 0x3F	; 63
    1054:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1058:	88 23       	and	r24, r24
    105a:	44 f4       	brge	.+16     	; 0x106c <main+0x244>
		__ticks = 1;
    105c:	fe 01       	movw	r30, r28
    105e:	e7 5a       	subi	r30, 0xA7	; 167
    1060:	ff 4f       	sbci	r31, 0xFF	; 255
    1062:	81 e0       	ldi	r24, 0x01	; 1
    1064:	90 e0       	ldi	r25, 0x00	; 0
    1066:	91 83       	std	Z+1, r25	; 0x01
    1068:	80 83       	st	Z, r24
    106a:	64 c0       	rjmp	.+200    	; 0x1134 <main+0x30c>
	else if (__tmp > 65535)
    106c:	fe 01       	movw	r30, r28
    106e:	e5 5a       	subi	r30, 0xA5	; 165
    1070:	ff 4f       	sbci	r31, 0xFF	; 255
    1072:	60 81       	ld	r22, Z
    1074:	71 81       	ldd	r23, Z+1	; 0x01
    1076:	82 81       	ldd	r24, Z+2	; 0x02
    1078:	93 81       	ldd	r25, Z+3	; 0x03
    107a:	20 e0       	ldi	r18, 0x00	; 0
    107c:	3f ef       	ldi	r19, 0xFF	; 255
    107e:	4f e7       	ldi	r20, 0x7F	; 127
    1080:	57 e4       	ldi	r21, 0x47	; 71
    1082:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1086:	18 16       	cp	r1, r24
    1088:	0c f0       	brlt	.+2      	; 0x108c <main+0x264>
    108a:	43 c0       	rjmp	.+134    	; 0x1112 <main+0x2ea>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    108c:	fe 01       	movw	r30, r28
    108e:	e1 5a       	subi	r30, 0xA1	; 161
    1090:	ff 4f       	sbci	r31, 0xFF	; 255
    1092:	60 81       	ld	r22, Z
    1094:	71 81       	ldd	r23, Z+1	; 0x01
    1096:	82 81       	ldd	r24, Z+2	; 0x02
    1098:	93 81       	ldd	r25, Z+3	; 0x03
    109a:	20 e0       	ldi	r18, 0x00	; 0
    109c:	30 e0       	ldi	r19, 0x00	; 0
    109e:	40 e2       	ldi	r20, 0x20	; 32
    10a0:	51 e4       	ldi	r21, 0x41	; 65
    10a2:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    10a6:	dc 01       	movw	r26, r24
    10a8:	cb 01       	movw	r24, r22
    10aa:	8e 01       	movw	r16, r28
    10ac:	07 5a       	subi	r16, 0xA7	; 167
    10ae:	1f 4f       	sbci	r17, 0xFF	; 255
    10b0:	bc 01       	movw	r22, r24
    10b2:	cd 01       	movw	r24, r26
    10b4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    10b8:	dc 01       	movw	r26, r24
    10ba:	cb 01       	movw	r24, r22
    10bc:	f8 01       	movw	r30, r16
    10be:	91 83       	std	Z+1, r25	; 0x01
    10c0:	80 83       	st	Z, r24
    10c2:	1f c0       	rjmp	.+62     	; 0x1102 <main+0x2da>
    10c4:	fe 01       	movw	r30, r28
    10c6:	e9 5a       	subi	r30, 0xA9	; 169
    10c8:	ff 4f       	sbci	r31, 0xFF	; 255
    10ca:	80 e9       	ldi	r24, 0x90	; 144
    10cc:	91 e0       	ldi	r25, 0x01	; 1
    10ce:	91 83       	std	Z+1, r25	; 0x01
    10d0:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    10d2:	fe 01       	movw	r30, r28
    10d4:	e9 5a       	subi	r30, 0xA9	; 169
    10d6:	ff 4f       	sbci	r31, 0xFF	; 255
    10d8:	80 81       	ld	r24, Z
    10da:	91 81       	ldd	r25, Z+1	; 0x01
    10dc:	01 97       	sbiw	r24, 0x01	; 1
    10de:	f1 f7       	brne	.-4      	; 0x10dc <main+0x2b4>
    10e0:	fe 01       	movw	r30, r28
    10e2:	e9 5a       	subi	r30, 0xA9	; 169
    10e4:	ff 4f       	sbci	r31, 0xFF	; 255
    10e6:	91 83       	std	Z+1, r25	; 0x01
    10e8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    10ea:	de 01       	movw	r26, r28
    10ec:	a7 5a       	subi	r26, 0xA7	; 167
    10ee:	bf 4f       	sbci	r27, 0xFF	; 255
    10f0:	fe 01       	movw	r30, r28
    10f2:	e7 5a       	subi	r30, 0xA7	; 167
    10f4:	ff 4f       	sbci	r31, 0xFF	; 255
    10f6:	80 81       	ld	r24, Z
    10f8:	91 81       	ldd	r25, Z+1	; 0x01
    10fa:	01 97       	sbiw	r24, 0x01	; 1
    10fc:	11 96       	adiw	r26, 0x01	; 1
    10fe:	9c 93       	st	X, r25
    1100:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1102:	fe 01       	movw	r30, r28
    1104:	e7 5a       	subi	r30, 0xA7	; 167
    1106:	ff 4f       	sbci	r31, 0xFF	; 255
    1108:	80 81       	ld	r24, Z
    110a:	91 81       	ldd	r25, Z+1	; 0x01
    110c:	00 97       	sbiw	r24, 0x00	; 0
    110e:	d1 f6       	brne	.-76     	; 0x10c4 <main+0x29c>
    1110:	28 c0       	rjmp	.+80     	; 0x1162 <main+0x33a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1112:	8e 01       	movw	r16, r28
    1114:	07 5a       	subi	r16, 0xA7	; 167
    1116:	1f 4f       	sbci	r17, 0xFF	; 255
    1118:	fe 01       	movw	r30, r28
    111a:	e5 5a       	subi	r30, 0xA5	; 165
    111c:	ff 4f       	sbci	r31, 0xFF	; 255
    111e:	60 81       	ld	r22, Z
    1120:	71 81       	ldd	r23, Z+1	; 0x01
    1122:	82 81       	ldd	r24, Z+2	; 0x02
    1124:	93 81       	ldd	r25, Z+3	; 0x03
    1126:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    112a:	dc 01       	movw	r26, r24
    112c:	cb 01       	movw	r24, r22
    112e:	f8 01       	movw	r30, r16
    1130:	91 83       	std	Z+1, r25	; 0x01
    1132:	80 83       	st	Z, r24
    1134:	de 01       	movw	r26, r28
    1136:	ab 5a       	subi	r26, 0xAB	; 171
    1138:	bf 4f       	sbci	r27, 0xFF	; 255
    113a:	fe 01       	movw	r30, r28
    113c:	e7 5a       	subi	r30, 0xA7	; 167
    113e:	ff 4f       	sbci	r31, 0xFF	; 255
    1140:	80 81       	ld	r24, Z
    1142:	91 81       	ldd	r25, Z+1	; 0x01
    1144:	11 96       	adiw	r26, 0x01	; 1
    1146:	9c 93       	st	X, r25
    1148:	8e 93       	st	-X, r24
    114a:	fe 01       	movw	r30, r28
    114c:	eb 5a       	subi	r30, 0xAB	; 171
    114e:	ff 4f       	sbci	r31, 0xFF	; 255
    1150:	80 81       	ld	r24, Z
    1152:	91 81       	ldd	r25, Z+1	; 0x01
    1154:	01 97       	sbiw	r24, 0x01	; 1
    1156:	f1 f7       	brne	.-4      	; 0x1154 <main+0x32c>
    1158:	fe 01       	movw	r30, r28
    115a:	eb 5a       	subi	r30, 0xAB	; 171
    115c:	ff 4f       	sbci	r31, 0xFF	; 255
    115e:	91 83       	std	Z+1, r25	; 0x01
    1160:	80 83       	st	Z, r24
            _delay_ms(30);
            if (!(PINB & (1<<6)) && Sec_Increment_flag == 0) {
    1162:	e6 e3       	ldi	r30, 0x36	; 54
    1164:	f0 e0       	ldi	r31, 0x00	; 0
    1166:	80 81       	ld	r24, Z
    1168:	88 2f       	mov	r24, r24
    116a:	90 e0       	ldi	r25, 0x00	; 0
    116c:	80 74       	andi	r24, 0x40	; 64
    116e:	90 70       	andi	r25, 0x00	; 0
    1170:	00 97       	sbiw	r24, 0x00	; 0
    1172:	a9 f4       	brne	.+42     	; 0x119e <main+0x376>
    1174:	80 91 6e 00 	lds	r24, 0x006E
    1178:	88 23       	and	r24, r24
    117a:	89 f4       	brne	.+34     	; 0x119e <main+0x376>
                seconds++;
    117c:	80 91 6a 00 	lds	r24, 0x006A
    1180:	8f 5f       	subi	r24, 0xFF	; 255
    1182:	80 93 6a 00 	sts	0x006A, r24
                if (seconds == 60) {
    1186:	80 91 6a 00 	lds	r24, 0x006A
    118a:	8c 33       	cpi	r24, 0x3C	; 60
    118c:	11 f4       	brne	.+4      	; 0x1192 <main+0x36a>
                    seconds = 0;
    118e:	10 92 6a 00 	sts	0x006A, r1
                }
                Sec_Increment_flag = 1;
    1192:	81 e0       	ldi	r24, 0x01	; 1
    1194:	80 93 6e 00 	sts	0x006E, r24
    1198:	02 c0       	rjmp	.+4      	; 0x119e <main+0x376>
            }
        } else {
            Sec_Increment_flag = 0;
    119a:	10 92 6e 00 	sts	0x006E, r1
        }

        // Seconds Decrement
        if (!(PINB & (1<<5))) {
    119e:	e6 e3       	ldi	r30, 0x36	; 54
    11a0:	f0 e0       	ldi	r31, 0x00	; 0
    11a2:	80 81       	ld	r24, Z
    11a4:	88 2f       	mov	r24, r24
    11a6:	90 e0       	ldi	r25, 0x00	; 0
    11a8:	80 72       	andi	r24, 0x20	; 32
    11aa:	90 70       	andi	r25, 0x00	; 0
    11ac:	00 97       	sbiw	r24, 0x00	; 0
    11ae:	09 f0       	breq	.+2      	; 0x11b2 <main+0x38a>
    11b0:	d2 c0       	rjmp	.+420    	; 0x1356 <main+0x52e>
    11b2:	fe 01       	movw	r30, r28
    11b4:	ef 5a       	subi	r30, 0xAF	; 175
    11b6:	ff 4f       	sbci	r31, 0xFF	; 255
    11b8:	80 e0       	ldi	r24, 0x00	; 0
    11ba:	90 e0       	ldi	r25, 0x00	; 0
    11bc:	a0 ef       	ldi	r26, 0xF0	; 240
    11be:	b1 e4       	ldi	r27, 0x41	; 65
    11c0:	80 83       	st	Z, r24
    11c2:	91 83       	std	Z+1, r25	; 0x01
    11c4:	a2 83       	std	Z+2, r26	; 0x02
    11c6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    11c8:	8e 01       	movw	r16, r28
    11ca:	03 5b       	subi	r16, 0xB3	; 179
    11cc:	1f 4f       	sbci	r17, 0xFF	; 255
    11ce:	fe 01       	movw	r30, r28
    11d0:	ef 5a       	subi	r30, 0xAF	; 175
    11d2:	ff 4f       	sbci	r31, 0xFF	; 255
    11d4:	60 81       	ld	r22, Z
    11d6:	71 81       	ldd	r23, Z+1	; 0x01
    11d8:	82 81       	ldd	r24, Z+2	; 0x02
    11da:	93 81       	ldd	r25, Z+3	; 0x03
    11dc:	20 e0       	ldi	r18, 0x00	; 0
    11de:	30 e0       	ldi	r19, 0x00	; 0
    11e0:	4a e7       	ldi	r20, 0x7A	; 122
    11e2:	55 e4       	ldi	r21, 0x45	; 69
    11e4:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    11e8:	dc 01       	movw	r26, r24
    11ea:	cb 01       	movw	r24, r22
    11ec:	f8 01       	movw	r30, r16
    11ee:	80 83       	st	Z, r24
    11f0:	91 83       	std	Z+1, r25	; 0x01
    11f2:	a2 83       	std	Z+2, r26	; 0x02
    11f4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    11f6:	fe 01       	movw	r30, r28
    11f8:	e3 5b       	subi	r30, 0xB3	; 179
    11fa:	ff 4f       	sbci	r31, 0xFF	; 255
    11fc:	60 81       	ld	r22, Z
    11fe:	71 81       	ldd	r23, Z+1	; 0x01
    1200:	82 81       	ldd	r24, Z+2	; 0x02
    1202:	93 81       	ldd	r25, Z+3	; 0x03
    1204:	20 e0       	ldi	r18, 0x00	; 0
    1206:	30 e0       	ldi	r19, 0x00	; 0
    1208:	40 e8       	ldi	r20, 0x80	; 128
    120a:	5f e3       	ldi	r21, 0x3F	; 63
    120c:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1210:	88 23       	and	r24, r24
    1212:	44 f4       	brge	.+16     	; 0x1224 <main+0x3fc>
		__ticks = 1;
    1214:	fe 01       	movw	r30, r28
    1216:	e5 5b       	subi	r30, 0xB5	; 181
    1218:	ff 4f       	sbci	r31, 0xFF	; 255
    121a:	81 e0       	ldi	r24, 0x01	; 1
    121c:	90 e0       	ldi	r25, 0x00	; 0
    121e:	91 83       	std	Z+1, r25	; 0x01
    1220:	80 83       	st	Z, r24
    1222:	64 c0       	rjmp	.+200    	; 0x12ec <main+0x4c4>
	else if (__tmp > 65535)
    1224:	fe 01       	movw	r30, r28
    1226:	e3 5b       	subi	r30, 0xB3	; 179
    1228:	ff 4f       	sbci	r31, 0xFF	; 255
    122a:	60 81       	ld	r22, Z
    122c:	71 81       	ldd	r23, Z+1	; 0x01
    122e:	82 81       	ldd	r24, Z+2	; 0x02
    1230:	93 81       	ldd	r25, Z+3	; 0x03
    1232:	20 e0       	ldi	r18, 0x00	; 0
    1234:	3f ef       	ldi	r19, 0xFF	; 255
    1236:	4f e7       	ldi	r20, 0x7F	; 127
    1238:	57 e4       	ldi	r21, 0x47	; 71
    123a:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    123e:	18 16       	cp	r1, r24
    1240:	0c f0       	brlt	.+2      	; 0x1244 <main+0x41c>
    1242:	43 c0       	rjmp	.+134    	; 0x12ca <main+0x4a2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1244:	fe 01       	movw	r30, r28
    1246:	ef 5a       	subi	r30, 0xAF	; 175
    1248:	ff 4f       	sbci	r31, 0xFF	; 255
    124a:	60 81       	ld	r22, Z
    124c:	71 81       	ldd	r23, Z+1	; 0x01
    124e:	82 81       	ldd	r24, Z+2	; 0x02
    1250:	93 81       	ldd	r25, Z+3	; 0x03
    1252:	20 e0       	ldi	r18, 0x00	; 0
    1254:	30 e0       	ldi	r19, 0x00	; 0
    1256:	40 e2       	ldi	r20, 0x20	; 32
    1258:	51 e4       	ldi	r21, 0x41	; 65
    125a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    125e:	dc 01       	movw	r26, r24
    1260:	cb 01       	movw	r24, r22
    1262:	8e 01       	movw	r16, r28
    1264:	05 5b       	subi	r16, 0xB5	; 181
    1266:	1f 4f       	sbci	r17, 0xFF	; 255
    1268:	bc 01       	movw	r22, r24
    126a:	cd 01       	movw	r24, r26
    126c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1270:	dc 01       	movw	r26, r24
    1272:	cb 01       	movw	r24, r22
    1274:	f8 01       	movw	r30, r16
    1276:	91 83       	std	Z+1, r25	; 0x01
    1278:	80 83       	st	Z, r24
    127a:	1f c0       	rjmp	.+62     	; 0x12ba <main+0x492>
    127c:	fe 01       	movw	r30, r28
    127e:	e7 5b       	subi	r30, 0xB7	; 183
    1280:	ff 4f       	sbci	r31, 0xFF	; 255
    1282:	80 e9       	ldi	r24, 0x90	; 144
    1284:	91 e0       	ldi	r25, 0x01	; 1
    1286:	91 83       	std	Z+1, r25	; 0x01
    1288:	80 83       	st	Z, r24
    128a:	fe 01       	movw	r30, r28
    128c:	e7 5b       	subi	r30, 0xB7	; 183
    128e:	ff 4f       	sbci	r31, 0xFF	; 255
    1290:	80 81       	ld	r24, Z
    1292:	91 81       	ldd	r25, Z+1	; 0x01
    1294:	01 97       	sbiw	r24, 0x01	; 1
    1296:	f1 f7       	brne	.-4      	; 0x1294 <main+0x46c>
    1298:	fe 01       	movw	r30, r28
    129a:	e7 5b       	subi	r30, 0xB7	; 183
    129c:	ff 4f       	sbci	r31, 0xFF	; 255
    129e:	91 83       	std	Z+1, r25	; 0x01
    12a0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    12a2:	de 01       	movw	r26, r28
    12a4:	a5 5b       	subi	r26, 0xB5	; 181
    12a6:	bf 4f       	sbci	r27, 0xFF	; 255
    12a8:	fe 01       	movw	r30, r28
    12aa:	e5 5b       	subi	r30, 0xB5	; 181
    12ac:	ff 4f       	sbci	r31, 0xFF	; 255
    12ae:	80 81       	ld	r24, Z
    12b0:	91 81       	ldd	r25, Z+1	; 0x01
    12b2:	01 97       	sbiw	r24, 0x01	; 1
    12b4:	11 96       	adiw	r26, 0x01	; 1
    12b6:	9c 93       	st	X, r25
    12b8:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    12ba:	fe 01       	movw	r30, r28
    12bc:	e5 5b       	subi	r30, 0xB5	; 181
    12be:	ff 4f       	sbci	r31, 0xFF	; 255
    12c0:	80 81       	ld	r24, Z
    12c2:	91 81       	ldd	r25, Z+1	; 0x01
    12c4:	00 97       	sbiw	r24, 0x00	; 0
    12c6:	d1 f6       	brne	.-76     	; 0x127c <main+0x454>
    12c8:	28 c0       	rjmp	.+80     	; 0x131a <main+0x4f2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    12ca:	8e 01       	movw	r16, r28
    12cc:	05 5b       	subi	r16, 0xB5	; 181
    12ce:	1f 4f       	sbci	r17, 0xFF	; 255
    12d0:	fe 01       	movw	r30, r28
    12d2:	e3 5b       	subi	r30, 0xB3	; 179
    12d4:	ff 4f       	sbci	r31, 0xFF	; 255
    12d6:	60 81       	ld	r22, Z
    12d8:	71 81       	ldd	r23, Z+1	; 0x01
    12da:	82 81       	ldd	r24, Z+2	; 0x02
    12dc:	93 81       	ldd	r25, Z+3	; 0x03
    12de:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    12e2:	dc 01       	movw	r26, r24
    12e4:	cb 01       	movw	r24, r22
    12e6:	f8 01       	movw	r30, r16
    12e8:	91 83       	std	Z+1, r25	; 0x01
    12ea:	80 83       	st	Z, r24
    12ec:	de 01       	movw	r26, r28
    12ee:	a9 5b       	subi	r26, 0xB9	; 185
    12f0:	bf 4f       	sbci	r27, 0xFF	; 255
    12f2:	fe 01       	movw	r30, r28
    12f4:	e5 5b       	subi	r30, 0xB5	; 181
    12f6:	ff 4f       	sbci	r31, 0xFF	; 255
    12f8:	80 81       	ld	r24, Z
    12fa:	91 81       	ldd	r25, Z+1	; 0x01
    12fc:	11 96       	adiw	r26, 0x01	; 1
    12fe:	9c 93       	st	X, r25
    1300:	8e 93       	st	-X, r24
    1302:	fe 01       	movw	r30, r28
    1304:	e9 5b       	subi	r30, 0xB9	; 185
    1306:	ff 4f       	sbci	r31, 0xFF	; 255
    1308:	80 81       	ld	r24, Z
    130a:	91 81       	ldd	r25, Z+1	; 0x01
    130c:	01 97       	sbiw	r24, 0x01	; 1
    130e:	f1 f7       	brne	.-4      	; 0x130c <main+0x4e4>
    1310:	fe 01       	movw	r30, r28
    1312:	e9 5b       	subi	r30, 0xB9	; 185
    1314:	ff 4f       	sbci	r31, 0xFF	; 255
    1316:	91 83       	std	Z+1, r25	; 0x01
    1318:	80 83       	st	Z, r24
            _delay_ms(30);
            if (!(PINB & (1<<5)) && Sec_Decrement_flag == 0) {
    131a:	e6 e3       	ldi	r30, 0x36	; 54
    131c:	f0 e0       	ldi	r31, 0x00	; 0
    131e:	80 81       	ld	r24, Z
    1320:	88 2f       	mov	r24, r24
    1322:	90 e0       	ldi	r25, 0x00	; 0
    1324:	80 72       	andi	r24, 0x20	; 32
    1326:	90 70       	andi	r25, 0x00	; 0
    1328:	00 97       	sbiw	r24, 0x00	; 0
    132a:	b9 f4       	brne	.+46     	; 0x135a <main+0x532>
    132c:	80 91 6d 00 	lds	r24, 0x006D
    1330:	88 23       	and	r24, r24
    1332:	99 f4       	brne	.+38     	; 0x135a <main+0x532>
                if (seconds > 0) {
    1334:	80 91 6a 00 	lds	r24, 0x006A
    1338:	88 23       	and	r24, r24
    133a:	31 f0       	breq	.+12     	; 0x1348 <main+0x520>
                    seconds--;
    133c:	80 91 6a 00 	lds	r24, 0x006A
    1340:	81 50       	subi	r24, 0x01	; 1
    1342:	80 93 6a 00 	sts	0x006A, r24
    1346:	03 c0       	rjmp	.+6      	; 0x134e <main+0x526>
                } else {
                    seconds = 59;
    1348:	8b e3       	ldi	r24, 0x3B	; 59
    134a:	80 93 6a 00 	sts	0x006A, r24
                }
                Sec_Decrement_flag = 1;
    134e:	81 e0       	ldi	r24, 0x01	; 1
    1350:	80 93 6d 00 	sts	0x006D, r24
    1354:	02 c0       	rjmp	.+4      	; 0x135a <main+0x532>
            }
        } else {
            Sec_Decrement_flag = 0;
    1356:	10 92 6d 00 	sts	0x006D, r1
        }

        // Minutes Increment
        if (!(PINB & (1<<4))) {
    135a:	e6 e3       	ldi	r30, 0x36	; 54
    135c:	f0 e0       	ldi	r31, 0x00	; 0
    135e:	80 81       	ld	r24, Z
    1360:	88 2f       	mov	r24, r24
    1362:	90 e0       	ldi	r25, 0x00	; 0
    1364:	80 71       	andi	r24, 0x10	; 16
    1366:	90 70       	andi	r25, 0x00	; 0
    1368:	00 97       	sbiw	r24, 0x00	; 0
    136a:	09 f0       	breq	.+2      	; 0x136e <main+0x546>
    136c:	a1 c0       	rjmp	.+322    	; 0x14b0 <main+0x688>
    136e:	fe 01       	movw	r30, r28
    1370:	ed 5b       	subi	r30, 0xBD	; 189
    1372:	ff 4f       	sbci	r31, 0xFF	; 255
    1374:	80 e0       	ldi	r24, 0x00	; 0
    1376:	90 e0       	ldi	r25, 0x00	; 0
    1378:	a0 ef       	ldi	r26, 0xF0	; 240
    137a:	b1 e4       	ldi	r27, 0x41	; 65
    137c:	80 83       	st	Z, r24
    137e:	91 83       	std	Z+1, r25	; 0x01
    1380:	a2 83       	std	Z+2, r26	; 0x02
    1382:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1384:	8e 01       	movw	r16, r28
    1386:	01 5c       	subi	r16, 0xC1	; 193
    1388:	1f 4f       	sbci	r17, 0xFF	; 255
    138a:	fe 01       	movw	r30, r28
    138c:	ed 5b       	subi	r30, 0xBD	; 189
    138e:	ff 4f       	sbci	r31, 0xFF	; 255
    1390:	60 81       	ld	r22, Z
    1392:	71 81       	ldd	r23, Z+1	; 0x01
    1394:	82 81       	ldd	r24, Z+2	; 0x02
    1396:	93 81       	ldd	r25, Z+3	; 0x03
    1398:	20 e0       	ldi	r18, 0x00	; 0
    139a:	30 e0       	ldi	r19, 0x00	; 0
    139c:	4a e7       	ldi	r20, 0x7A	; 122
    139e:	55 e4       	ldi	r21, 0x45	; 69
    13a0:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    13a4:	dc 01       	movw	r26, r24
    13a6:	cb 01       	movw	r24, r22
    13a8:	f8 01       	movw	r30, r16
    13aa:	80 83       	st	Z, r24
    13ac:	91 83       	std	Z+1, r25	; 0x01
    13ae:	a2 83       	std	Z+2, r26	; 0x02
    13b0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    13b2:	fe 01       	movw	r30, r28
    13b4:	ff 96       	adiw	r30, 0x3f	; 63
    13b6:	60 81       	ld	r22, Z
    13b8:	71 81       	ldd	r23, Z+1	; 0x01
    13ba:	82 81       	ldd	r24, Z+2	; 0x02
    13bc:	93 81       	ldd	r25, Z+3	; 0x03
    13be:	20 e0       	ldi	r18, 0x00	; 0
    13c0:	30 e0       	ldi	r19, 0x00	; 0
    13c2:	40 e8       	ldi	r20, 0x80	; 128
    13c4:	5f e3       	ldi	r21, 0x3F	; 63
    13c6:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    13ca:	88 23       	and	r24, r24
    13cc:	2c f4       	brge	.+10     	; 0x13d8 <main+0x5b0>
		__ticks = 1;
    13ce:	81 e0       	ldi	r24, 0x01	; 1
    13d0:	90 e0       	ldi	r25, 0x00	; 0
    13d2:	9e af       	std	Y+62, r25	; 0x3e
    13d4:	8d af       	std	Y+61, r24	; 0x3d
    13d6:	46 c0       	rjmp	.+140    	; 0x1464 <main+0x63c>
	else if (__tmp > 65535)
    13d8:	fe 01       	movw	r30, r28
    13da:	ff 96       	adiw	r30, 0x3f	; 63
    13dc:	60 81       	ld	r22, Z
    13de:	71 81       	ldd	r23, Z+1	; 0x01
    13e0:	82 81       	ldd	r24, Z+2	; 0x02
    13e2:	93 81       	ldd	r25, Z+3	; 0x03
    13e4:	20 e0       	ldi	r18, 0x00	; 0
    13e6:	3f ef       	ldi	r19, 0xFF	; 255
    13e8:	4f e7       	ldi	r20, 0x7F	; 127
    13ea:	57 e4       	ldi	r21, 0x47	; 71
    13ec:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    13f0:	18 16       	cp	r1, r24
    13f2:	64 f5       	brge	.+88     	; 0x144c <main+0x624>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    13f4:	fe 01       	movw	r30, r28
    13f6:	ed 5b       	subi	r30, 0xBD	; 189
    13f8:	ff 4f       	sbci	r31, 0xFF	; 255
    13fa:	60 81       	ld	r22, Z
    13fc:	71 81       	ldd	r23, Z+1	; 0x01
    13fe:	82 81       	ldd	r24, Z+2	; 0x02
    1400:	93 81       	ldd	r25, Z+3	; 0x03
    1402:	20 e0       	ldi	r18, 0x00	; 0
    1404:	30 e0       	ldi	r19, 0x00	; 0
    1406:	40 e2       	ldi	r20, 0x20	; 32
    1408:	51 e4       	ldi	r21, 0x41	; 65
    140a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    140e:	dc 01       	movw	r26, r24
    1410:	cb 01       	movw	r24, r22
    1412:	bc 01       	movw	r22, r24
    1414:	cd 01       	movw	r24, r26
    1416:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    141a:	dc 01       	movw	r26, r24
    141c:	cb 01       	movw	r24, r22
    141e:	9e af       	std	Y+62, r25	; 0x3e
    1420:	8d af       	std	Y+61, r24	; 0x3d
    1422:	0f c0       	rjmp	.+30     	; 0x1442 <main+0x61a>
    1424:	80 e9       	ldi	r24, 0x90	; 144
    1426:	91 e0       	ldi	r25, 0x01	; 1
    1428:	9c af       	std	Y+60, r25	; 0x3c
    142a:	8b af       	std	Y+59, r24	; 0x3b
    142c:	8b ad       	ldd	r24, Y+59	; 0x3b
    142e:	9c ad       	ldd	r25, Y+60	; 0x3c
    1430:	01 97       	sbiw	r24, 0x01	; 1
    1432:	f1 f7       	brne	.-4      	; 0x1430 <main+0x608>
    1434:	9c af       	std	Y+60, r25	; 0x3c
    1436:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1438:	8d ad       	ldd	r24, Y+61	; 0x3d
    143a:	9e ad       	ldd	r25, Y+62	; 0x3e
    143c:	01 97       	sbiw	r24, 0x01	; 1
    143e:	9e af       	std	Y+62, r25	; 0x3e
    1440:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1442:	8d ad       	ldd	r24, Y+61	; 0x3d
    1444:	9e ad       	ldd	r25, Y+62	; 0x3e
    1446:	00 97       	sbiw	r24, 0x00	; 0
    1448:	69 f7       	brne	.-38     	; 0x1424 <main+0x5fc>
    144a:	16 c0       	rjmp	.+44     	; 0x1478 <main+0x650>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    144c:	fe 01       	movw	r30, r28
    144e:	ff 96       	adiw	r30, 0x3f	; 63
    1450:	60 81       	ld	r22, Z
    1452:	71 81       	ldd	r23, Z+1	; 0x01
    1454:	82 81       	ldd	r24, Z+2	; 0x02
    1456:	93 81       	ldd	r25, Z+3	; 0x03
    1458:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    145c:	dc 01       	movw	r26, r24
    145e:	cb 01       	movw	r24, r22
    1460:	9e af       	std	Y+62, r25	; 0x3e
    1462:	8d af       	std	Y+61, r24	; 0x3d
    1464:	8d ad       	ldd	r24, Y+61	; 0x3d
    1466:	9e ad       	ldd	r25, Y+62	; 0x3e
    1468:	9a af       	std	Y+58, r25	; 0x3a
    146a:	89 af       	std	Y+57, r24	; 0x39
    146c:	89 ad       	ldd	r24, Y+57	; 0x39
    146e:	9a ad       	ldd	r25, Y+58	; 0x3a
    1470:	01 97       	sbiw	r24, 0x01	; 1
    1472:	f1 f7       	brne	.-4      	; 0x1470 <main+0x648>
    1474:	9a af       	std	Y+58, r25	; 0x3a
    1476:	89 af       	std	Y+57, r24	; 0x39
            _delay_ms(30);
            if (!(PINB & (1<<4)) && Min_Increment_flag == 0) {
    1478:	e6 e3       	ldi	r30, 0x36	; 54
    147a:	f0 e0       	ldi	r31, 0x00	; 0
    147c:	80 81       	ld	r24, Z
    147e:	88 2f       	mov	r24, r24
    1480:	90 e0       	ldi	r25, 0x00	; 0
    1482:	80 71       	andi	r24, 0x10	; 16
    1484:	90 70       	andi	r25, 0x00	; 0
    1486:	00 97       	sbiw	r24, 0x00	; 0
    1488:	a9 f4       	brne	.+42     	; 0x14b4 <main+0x68c>
    148a:	80 91 70 00 	lds	r24, 0x0070
    148e:	88 23       	and	r24, r24
    1490:	89 f4       	brne	.+34     	; 0x14b4 <main+0x68c>
                minutes++;
    1492:	80 91 69 00 	lds	r24, 0x0069
    1496:	8f 5f       	subi	r24, 0xFF	; 255
    1498:	80 93 69 00 	sts	0x0069, r24
                if (minutes == 60) {
    149c:	80 91 69 00 	lds	r24, 0x0069
    14a0:	8c 33       	cpi	r24, 0x3C	; 60
    14a2:	11 f4       	brne	.+4      	; 0x14a8 <main+0x680>
                    minutes = 0;
    14a4:	10 92 69 00 	sts	0x0069, r1
                }
                Min_Increment_flag = 1;
    14a8:	81 e0       	ldi	r24, 0x01	; 1
    14aa:	80 93 70 00 	sts	0x0070, r24
    14ae:	02 c0       	rjmp	.+4      	; 0x14b4 <main+0x68c>
            }
        } else {
            Min_Increment_flag = 0;
    14b0:	10 92 70 00 	sts	0x0070, r1
        }

        // Minutes Decrement
        if (!(PINB & (1<<3))) {
    14b4:	e6 e3       	ldi	r30, 0x36	; 54
    14b6:	f0 e0       	ldi	r31, 0x00	; 0
    14b8:	80 81       	ld	r24, Z
    14ba:	88 2f       	mov	r24, r24
    14bc:	90 e0       	ldi	r25, 0x00	; 0
    14be:	88 70       	andi	r24, 0x08	; 8
    14c0:	90 70       	andi	r25, 0x00	; 0
    14c2:	00 97       	sbiw	r24, 0x00	; 0
    14c4:	09 f0       	breq	.+2      	; 0x14c8 <main+0x6a0>
    14c6:	90 c0       	rjmp	.+288    	; 0x15e8 <main+0x7c0>
    14c8:	80 e0       	ldi	r24, 0x00	; 0
    14ca:	90 e0       	ldi	r25, 0x00	; 0
    14cc:	a0 ef       	ldi	r26, 0xF0	; 240
    14ce:	b1 e4       	ldi	r27, 0x41	; 65
    14d0:	8d ab       	std	Y+53, r24	; 0x35
    14d2:	9e ab       	std	Y+54, r25	; 0x36
    14d4:	af ab       	std	Y+55, r26	; 0x37
    14d6:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    14d8:	6d a9       	ldd	r22, Y+53	; 0x35
    14da:	7e a9       	ldd	r23, Y+54	; 0x36
    14dc:	8f a9       	ldd	r24, Y+55	; 0x37
    14de:	98 ad       	ldd	r25, Y+56	; 0x38
    14e0:	20 e0       	ldi	r18, 0x00	; 0
    14e2:	30 e0       	ldi	r19, 0x00	; 0
    14e4:	4a e7       	ldi	r20, 0x7A	; 122
    14e6:	55 e4       	ldi	r21, 0x45	; 69
    14e8:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    14ec:	dc 01       	movw	r26, r24
    14ee:	cb 01       	movw	r24, r22
    14f0:	89 ab       	std	Y+49, r24	; 0x31
    14f2:	9a ab       	std	Y+50, r25	; 0x32
    14f4:	ab ab       	std	Y+51, r26	; 0x33
    14f6:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    14f8:	69 a9       	ldd	r22, Y+49	; 0x31
    14fa:	7a a9       	ldd	r23, Y+50	; 0x32
    14fc:	8b a9       	ldd	r24, Y+51	; 0x33
    14fe:	9c a9       	ldd	r25, Y+52	; 0x34
    1500:	20 e0       	ldi	r18, 0x00	; 0
    1502:	30 e0       	ldi	r19, 0x00	; 0
    1504:	40 e8       	ldi	r20, 0x80	; 128
    1506:	5f e3       	ldi	r21, 0x3F	; 63
    1508:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    150c:	88 23       	and	r24, r24
    150e:	2c f4       	brge	.+10     	; 0x151a <main+0x6f2>
		__ticks = 1;
    1510:	81 e0       	ldi	r24, 0x01	; 1
    1512:	90 e0       	ldi	r25, 0x00	; 0
    1514:	98 ab       	std	Y+48, r25	; 0x30
    1516:	8f a7       	std	Y+47, r24	; 0x2f
    1518:	3f c0       	rjmp	.+126    	; 0x1598 <main+0x770>
	else if (__tmp > 65535)
    151a:	69 a9       	ldd	r22, Y+49	; 0x31
    151c:	7a a9       	ldd	r23, Y+50	; 0x32
    151e:	8b a9       	ldd	r24, Y+51	; 0x33
    1520:	9c a9       	ldd	r25, Y+52	; 0x34
    1522:	20 e0       	ldi	r18, 0x00	; 0
    1524:	3f ef       	ldi	r19, 0xFF	; 255
    1526:	4f e7       	ldi	r20, 0x7F	; 127
    1528:	57 e4       	ldi	r21, 0x47	; 71
    152a:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    152e:	18 16       	cp	r1, r24
    1530:	4c f5       	brge	.+82     	; 0x1584 <main+0x75c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1532:	6d a9       	ldd	r22, Y+53	; 0x35
    1534:	7e a9       	ldd	r23, Y+54	; 0x36
    1536:	8f a9       	ldd	r24, Y+55	; 0x37
    1538:	98 ad       	ldd	r25, Y+56	; 0x38
    153a:	20 e0       	ldi	r18, 0x00	; 0
    153c:	30 e0       	ldi	r19, 0x00	; 0
    153e:	40 e2       	ldi	r20, 0x20	; 32
    1540:	51 e4       	ldi	r21, 0x41	; 65
    1542:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1546:	dc 01       	movw	r26, r24
    1548:	cb 01       	movw	r24, r22
    154a:	bc 01       	movw	r22, r24
    154c:	cd 01       	movw	r24, r26
    154e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1552:	dc 01       	movw	r26, r24
    1554:	cb 01       	movw	r24, r22
    1556:	98 ab       	std	Y+48, r25	; 0x30
    1558:	8f a7       	std	Y+47, r24	; 0x2f
    155a:	0f c0       	rjmp	.+30     	; 0x157a <main+0x752>
    155c:	80 e9       	ldi	r24, 0x90	; 144
    155e:	91 e0       	ldi	r25, 0x01	; 1
    1560:	9e a7       	std	Y+46, r25	; 0x2e
    1562:	8d a7       	std	Y+45, r24	; 0x2d
    1564:	8d a5       	ldd	r24, Y+45	; 0x2d
    1566:	9e a5       	ldd	r25, Y+46	; 0x2e
    1568:	01 97       	sbiw	r24, 0x01	; 1
    156a:	f1 f7       	brne	.-4      	; 0x1568 <main+0x740>
    156c:	9e a7       	std	Y+46, r25	; 0x2e
    156e:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1570:	8f a5       	ldd	r24, Y+47	; 0x2f
    1572:	98 a9       	ldd	r25, Y+48	; 0x30
    1574:	01 97       	sbiw	r24, 0x01	; 1
    1576:	98 ab       	std	Y+48, r25	; 0x30
    1578:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    157a:	8f a5       	ldd	r24, Y+47	; 0x2f
    157c:	98 a9       	ldd	r25, Y+48	; 0x30
    157e:	00 97       	sbiw	r24, 0x00	; 0
    1580:	69 f7       	brne	.-38     	; 0x155c <main+0x734>
    1582:	14 c0       	rjmp	.+40     	; 0x15ac <main+0x784>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1584:	69 a9       	ldd	r22, Y+49	; 0x31
    1586:	7a a9       	ldd	r23, Y+50	; 0x32
    1588:	8b a9       	ldd	r24, Y+51	; 0x33
    158a:	9c a9       	ldd	r25, Y+52	; 0x34
    158c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1590:	dc 01       	movw	r26, r24
    1592:	cb 01       	movw	r24, r22
    1594:	98 ab       	std	Y+48, r25	; 0x30
    1596:	8f a7       	std	Y+47, r24	; 0x2f
    1598:	8f a5       	ldd	r24, Y+47	; 0x2f
    159a:	98 a9       	ldd	r25, Y+48	; 0x30
    159c:	9c a7       	std	Y+44, r25	; 0x2c
    159e:	8b a7       	std	Y+43, r24	; 0x2b
    15a0:	8b a5       	ldd	r24, Y+43	; 0x2b
    15a2:	9c a5       	ldd	r25, Y+44	; 0x2c
    15a4:	01 97       	sbiw	r24, 0x01	; 1
    15a6:	f1 f7       	brne	.-4      	; 0x15a4 <main+0x77c>
    15a8:	9c a7       	std	Y+44, r25	; 0x2c
    15aa:	8b a7       	std	Y+43, r24	; 0x2b
            _delay_ms(30);
            if (!(PINB & (1<<3)) && Min_Decrement_flag == 0) {
    15ac:	e6 e3       	ldi	r30, 0x36	; 54
    15ae:	f0 e0       	ldi	r31, 0x00	; 0
    15b0:	80 81       	ld	r24, Z
    15b2:	88 2f       	mov	r24, r24
    15b4:	90 e0       	ldi	r25, 0x00	; 0
    15b6:	88 70       	andi	r24, 0x08	; 8
    15b8:	90 70       	andi	r25, 0x00	; 0
    15ba:	00 97       	sbiw	r24, 0x00	; 0
    15bc:	b9 f4       	brne	.+46     	; 0x15ec <main+0x7c4>
    15be:	80 91 6f 00 	lds	r24, 0x006F
    15c2:	88 23       	and	r24, r24
    15c4:	99 f4       	brne	.+38     	; 0x15ec <main+0x7c4>
                if (minutes > 0) {
    15c6:	80 91 69 00 	lds	r24, 0x0069
    15ca:	88 23       	and	r24, r24
    15cc:	31 f0       	breq	.+12     	; 0x15da <main+0x7b2>
                    minutes--;
    15ce:	80 91 69 00 	lds	r24, 0x0069
    15d2:	81 50       	subi	r24, 0x01	; 1
    15d4:	80 93 69 00 	sts	0x0069, r24
    15d8:	03 c0       	rjmp	.+6      	; 0x15e0 <main+0x7b8>
                } else {
                    minutes = 59;
    15da:	8b e3       	ldi	r24, 0x3B	; 59
    15dc:	80 93 69 00 	sts	0x0069, r24
                }
                Min_Decrement_flag = 1;
    15e0:	81 e0       	ldi	r24, 0x01	; 1
    15e2:	80 93 6f 00 	sts	0x006F, r24
    15e6:	02 c0       	rjmp	.+4      	; 0x15ec <main+0x7c4>
            }
        } else {
            Min_Decrement_flag = 0;
    15e8:	10 92 6f 00 	sts	0x006F, r1
        }

        // Hours Increment
        if (!(PINB & (1<<1))) {
    15ec:	e6 e3       	ldi	r30, 0x36	; 54
    15ee:	f0 e0       	ldi	r31, 0x00	; 0
    15f0:	80 81       	ld	r24, Z
    15f2:	88 2f       	mov	r24, r24
    15f4:	90 e0       	ldi	r25, 0x00	; 0
    15f6:	82 70       	andi	r24, 0x02	; 2
    15f8:	90 70       	andi	r25, 0x00	; 0
    15fa:	00 97       	sbiw	r24, 0x00	; 0
    15fc:	09 f0       	breq	.+2      	; 0x1600 <main+0x7d8>
    15fe:	8e c0       	rjmp	.+284    	; 0x171c <main+0x8f4>
    1600:	80 e0       	ldi	r24, 0x00	; 0
    1602:	90 e0       	ldi	r25, 0x00	; 0
    1604:	a0 ef       	ldi	r26, 0xF0	; 240
    1606:	b1 e4       	ldi	r27, 0x41	; 65
    1608:	8f a3       	std	Y+39, r24	; 0x27
    160a:	98 a7       	std	Y+40, r25	; 0x28
    160c:	a9 a7       	std	Y+41, r26	; 0x29
    160e:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1610:	6f a1       	ldd	r22, Y+39	; 0x27
    1612:	78 a5       	ldd	r23, Y+40	; 0x28
    1614:	89 a5       	ldd	r24, Y+41	; 0x29
    1616:	9a a5       	ldd	r25, Y+42	; 0x2a
    1618:	20 e0       	ldi	r18, 0x00	; 0
    161a:	30 e0       	ldi	r19, 0x00	; 0
    161c:	4a e7       	ldi	r20, 0x7A	; 122
    161e:	55 e4       	ldi	r21, 0x45	; 69
    1620:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1624:	dc 01       	movw	r26, r24
    1626:	cb 01       	movw	r24, r22
    1628:	8b a3       	std	Y+35, r24	; 0x23
    162a:	9c a3       	std	Y+36, r25	; 0x24
    162c:	ad a3       	std	Y+37, r26	; 0x25
    162e:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    1630:	6b a1       	ldd	r22, Y+35	; 0x23
    1632:	7c a1       	ldd	r23, Y+36	; 0x24
    1634:	8d a1       	ldd	r24, Y+37	; 0x25
    1636:	9e a1       	ldd	r25, Y+38	; 0x26
    1638:	20 e0       	ldi	r18, 0x00	; 0
    163a:	30 e0       	ldi	r19, 0x00	; 0
    163c:	40 e8       	ldi	r20, 0x80	; 128
    163e:	5f e3       	ldi	r21, 0x3F	; 63
    1640:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1644:	88 23       	and	r24, r24
    1646:	2c f4       	brge	.+10     	; 0x1652 <main+0x82a>
		__ticks = 1;
    1648:	81 e0       	ldi	r24, 0x01	; 1
    164a:	90 e0       	ldi	r25, 0x00	; 0
    164c:	9a a3       	std	Y+34, r25	; 0x22
    164e:	89 a3       	std	Y+33, r24	; 0x21
    1650:	3f c0       	rjmp	.+126    	; 0x16d0 <main+0x8a8>
	else if (__tmp > 65535)
    1652:	6b a1       	ldd	r22, Y+35	; 0x23
    1654:	7c a1       	ldd	r23, Y+36	; 0x24
    1656:	8d a1       	ldd	r24, Y+37	; 0x25
    1658:	9e a1       	ldd	r25, Y+38	; 0x26
    165a:	20 e0       	ldi	r18, 0x00	; 0
    165c:	3f ef       	ldi	r19, 0xFF	; 255
    165e:	4f e7       	ldi	r20, 0x7F	; 127
    1660:	57 e4       	ldi	r21, 0x47	; 71
    1662:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1666:	18 16       	cp	r1, r24
    1668:	4c f5       	brge	.+82     	; 0x16bc <main+0x894>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    166a:	6f a1       	ldd	r22, Y+39	; 0x27
    166c:	78 a5       	ldd	r23, Y+40	; 0x28
    166e:	89 a5       	ldd	r24, Y+41	; 0x29
    1670:	9a a5       	ldd	r25, Y+42	; 0x2a
    1672:	20 e0       	ldi	r18, 0x00	; 0
    1674:	30 e0       	ldi	r19, 0x00	; 0
    1676:	40 e2       	ldi	r20, 0x20	; 32
    1678:	51 e4       	ldi	r21, 0x41	; 65
    167a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    167e:	dc 01       	movw	r26, r24
    1680:	cb 01       	movw	r24, r22
    1682:	bc 01       	movw	r22, r24
    1684:	cd 01       	movw	r24, r26
    1686:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    168a:	dc 01       	movw	r26, r24
    168c:	cb 01       	movw	r24, r22
    168e:	9a a3       	std	Y+34, r25	; 0x22
    1690:	89 a3       	std	Y+33, r24	; 0x21
    1692:	0f c0       	rjmp	.+30     	; 0x16b2 <main+0x88a>
    1694:	80 e9       	ldi	r24, 0x90	; 144
    1696:	91 e0       	ldi	r25, 0x01	; 1
    1698:	98 a3       	std	Y+32, r25	; 0x20
    169a:	8f 8f       	std	Y+31, r24	; 0x1f
    169c:	8f 8d       	ldd	r24, Y+31	; 0x1f
    169e:	98 a1       	ldd	r25, Y+32	; 0x20
    16a0:	01 97       	sbiw	r24, 0x01	; 1
    16a2:	f1 f7       	brne	.-4      	; 0x16a0 <main+0x878>
    16a4:	98 a3       	std	Y+32, r25	; 0x20
    16a6:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    16a8:	89 a1       	ldd	r24, Y+33	; 0x21
    16aa:	9a a1       	ldd	r25, Y+34	; 0x22
    16ac:	01 97       	sbiw	r24, 0x01	; 1
    16ae:	9a a3       	std	Y+34, r25	; 0x22
    16b0:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    16b2:	89 a1       	ldd	r24, Y+33	; 0x21
    16b4:	9a a1       	ldd	r25, Y+34	; 0x22
    16b6:	00 97       	sbiw	r24, 0x00	; 0
    16b8:	69 f7       	brne	.-38     	; 0x1694 <main+0x86c>
    16ba:	14 c0       	rjmp	.+40     	; 0x16e4 <main+0x8bc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    16bc:	6b a1       	ldd	r22, Y+35	; 0x23
    16be:	7c a1       	ldd	r23, Y+36	; 0x24
    16c0:	8d a1       	ldd	r24, Y+37	; 0x25
    16c2:	9e a1       	ldd	r25, Y+38	; 0x26
    16c4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    16c8:	dc 01       	movw	r26, r24
    16ca:	cb 01       	movw	r24, r22
    16cc:	9a a3       	std	Y+34, r25	; 0x22
    16ce:	89 a3       	std	Y+33, r24	; 0x21
    16d0:	89 a1       	ldd	r24, Y+33	; 0x21
    16d2:	9a a1       	ldd	r25, Y+34	; 0x22
    16d4:	9e 8f       	std	Y+30, r25	; 0x1e
    16d6:	8d 8f       	std	Y+29, r24	; 0x1d
    16d8:	8d 8d       	ldd	r24, Y+29	; 0x1d
    16da:	9e 8d       	ldd	r25, Y+30	; 0x1e
    16dc:	01 97       	sbiw	r24, 0x01	; 1
    16de:	f1 f7       	brne	.-4      	; 0x16dc <main+0x8b4>
    16e0:	9e 8f       	std	Y+30, r25	; 0x1e
    16e2:	8d 8f       	std	Y+29, r24	; 0x1d
            _delay_ms(30);
            if (!(PINB & (1<<1)) && H_Increment_flag == 0) {
    16e4:	e6 e3       	ldi	r30, 0x36	; 54
    16e6:	f0 e0       	ldi	r31, 0x00	; 0
    16e8:	80 81       	ld	r24, Z
    16ea:	88 2f       	mov	r24, r24
    16ec:	90 e0       	ldi	r25, 0x00	; 0
    16ee:	82 70       	andi	r24, 0x02	; 2
    16f0:	90 70       	andi	r25, 0x00	; 0
    16f2:	00 97       	sbiw	r24, 0x00	; 0
    16f4:	a9 f4       	brne	.+42     	; 0x1720 <main+0x8f8>
    16f6:	80 91 72 00 	lds	r24, 0x0072
    16fa:	88 23       	and	r24, r24
    16fc:	89 f4       	brne	.+34     	; 0x1720 <main+0x8f8>
                hours++;
    16fe:	80 91 68 00 	lds	r24, 0x0068
    1702:	8f 5f       	subi	r24, 0xFF	; 255
    1704:	80 93 68 00 	sts	0x0068, r24
                if (hours == 100) {
    1708:	80 91 68 00 	lds	r24, 0x0068
    170c:	84 36       	cpi	r24, 0x64	; 100
    170e:	11 f4       	brne	.+4      	; 0x1714 <main+0x8ec>
                    hours = 0;
    1710:	10 92 68 00 	sts	0x0068, r1
                }
                H_Increment_flag = 1;
    1714:	81 e0       	ldi	r24, 0x01	; 1
    1716:	80 93 72 00 	sts	0x0072, r24
    171a:	02 c0       	rjmp	.+4      	; 0x1720 <main+0x8f8>
            }
        } else {
            H_Increment_flag = 0;
    171c:	10 92 72 00 	sts	0x0072, r1
        }

        // Hours Decrement
        if (!(PINB & (1<<0))) {
    1720:	e6 e3       	ldi	r30, 0x36	; 54
    1722:	f0 e0       	ldi	r31, 0x00	; 0
    1724:	80 81       	ld	r24, Z
    1726:	88 2f       	mov	r24, r24
    1728:	90 e0       	ldi	r25, 0x00	; 0
    172a:	81 70       	andi	r24, 0x01	; 1
    172c:	90 70       	andi	r25, 0x00	; 0
    172e:	00 97       	sbiw	r24, 0x00	; 0
    1730:	09 f0       	breq	.+2      	; 0x1734 <main+0x90c>
    1732:	90 c0       	rjmp	.+288    	; 0x1854 <main+0xa2c>
    1734:	80 e0       	ldi	r24, 0x00	; 0
    1736:	90 e0       	ldi	r25, 0x00	; 0
    1738:	a0 ef       	ldi	r26, 0xF0	; 240
    173a:	b1 e4       	ldi	r27, 0x41	; 65
    173c:	89 8f       	std	Y+25, r24	; 0x19
    173e:	9a 8f       	std	Y+26, r25	; 0x1a
    1740:	ab 8f       	std	Y+27, r26	; 0x1b
    1742:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1744:	69 8d       	ldd	r22, Y+25	; 0x19
    1746:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1748:	8b 8d       	ldd	r24, Y+27	; 0x1b
    174a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    174c:	20 e0       	ldi	r18, 0x00	; 0
    174e:	30 e0       	ldi	r19, 0x00	; 0
    1750:	4a e7       	ldi	r20, 0x7A	; 122
    1752:	55 e4       	ldi	r21, 0x45	; 69
    1754:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1758:	dc 01       	movw	r26, r24
    175a:	cb 01       	movw	r24, r22
    175c:	8d 8b       	std	Y+21, r24	; 0x15
    175e:	9e 8b       	std	Y+22, r25	; 0x16
    1760:	af 8b       	std	Y+23, r26	; 0x17
    1762:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1764:	6d 89       	ldd	r22, Y+21	; 0x15
    1766:	7e 89       	ldd	r23, Y+22	; 0x16
    1768:	8f 89       	ldd	r24, Y+23	; 0x17
    176a:	98 8d       	ldd	r25, Y+24	; 0x18
    176c:	20 e0       	ldi	r18, 0x00	; 0
    176e:	30 e0       	ldi	r19, 0x00	; 0
    1770:	40 e8       	ldi	r20, 0x80	; 128
    1772:	5f e3       	ldi	r21, 0x3F	; 63
    1774:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1778:	88 23       	and	r24, r24
    177a:	2c f4       	brge	.+10     	; 0x1786 <main+0x95e>
		__ticks = 1;
    177c:	81 e0       	ldi	r24, 0x01	; 1
    177e:	90 e0       	ldi	r25, 0x00	; 0
    1780:	9c 8b       	std	Y+20, r25	; 0x14
    1782:	8b 8b       	std	Y+19, r24	; 0x13
    1784:	3f c0       	rjmp	.+126    	; 0x1804 <main+0x9dc>
	else if (__tmp > 65535)
    1786:	6d 89       	ldd	r22, Y+21	; 0x15
    1788:	7e 89       	ldd	r23, Y+22	; 0x16
    178a:	8f 89       	ldd	r24, Y+23	; 0x17
    178c:	98 8d       	ldd	r25, Y+24	; 0x18
    178e:	20 e0       	ldi	r18, 0x00	; 0
    1790:	3f ef       	ldi	r19, 0xFF	; 255
    1792:	4f e7       	ldi	r20, 0x7F	; 127
    1794:	57 e4       	ldi	r21, 0x47	; 71
    1796:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    179a:	18 16       	cp	r1, r24
    179c:	4c f5       	brge	.+82     	; 0x17f0 <main+0x9c8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    179e:	69 8d       	ldd	r22, Y+25	; 0x19
    17a0:	7a 8d       	ldd	r23, Y+26	; 0x1a
    17a2:	8b 8d       	ldd	r24, Y+27	; 0x1b
    17a4:	9c 8d       	ldd	r25, Y+28	; 0x1c
    17a6:	20 e0       	ldi	r18, 0x00	; 0
    17a8:	30 e0       	ldi	r19, 0x00	; 0
    17aa:	40 e2       	ldi	r20, 0x20	; 32
    17ac:	51 e4       	ldi	r21, 0x41	; 65
    17ae:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    17b2:	dc 01       	movw	r26, r24
    17b4:	cb 01       	movw	r24, r22
    17b6:	bc 01       	movw	r22, r24
    17b8:	cd 01       	movw	r24, r26
    17ba:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    17be:	dc 01       	movw	r26, r24
    17c0:	cb 01       	movw	r24, r22
    17c2:	9c 8b       	std	Y+20, r25	; 0x14
    17c4:	8b 8b       	std	Y+19, r24	; 0x13
    17c6:	0f c0       	rjmp	.+30     	; 0x17e6 <main+0x9be>
    17c8:	80 e9       	ldi	r24, 0x90	; 144
    17ca:	91 e0       	ldi	r25, 0x01	; 1
    17cc:	9a 8b       	std	Y+18, r25	; 0x12
    17ce:	89 8b       	std	Y+17, r24	; 0x11
    17d0:	89 89       	ldd	r24, Y+17	; 0x11
    17d2:	9a 89       	ldd	r25, Y+18	; 0x12
    17d4:	01 97       	sbiw	r24, 0x01	; 1
    17d6:	f1 f7       	brne	.-4      	; 0x17d4 <main+0x9ac>
    17d8:	9a 8b       	std	Y+18, r25	; 0x12
    17da:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    17dc:	8b 89       	ldd	r24, Y+19	; 0x13
    17de:	9c 89       	ldd	r25, Y+20	; 0x14
    17e0:	01 97       	sbiw	r24, 0x01	; 1
    17e2:	9c 8b       	std	Y+20, r25	; 0x14
    17e4:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    17e6:	8b 89       	ldd	r24, Y+19	; 0x13
    17e8:	9c 89       	ldd	r25, Y+20	; 0x14
    17ea:	00 97       	sbiw	r24, 0x00	; 0
    17ec:	69 f7       	brne	.-38     	; 0x17c8 <main+0x9a0>
    17ee:	14 c0       	rjmp	.+40     	; 0x1818 <main+0x9f0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    17f0:	6d 89       	ldd	r22, Y+21	; 0x15
    17f2:	7e 89       	ldd	r23, Y+22	; 0x16
    17f4:	8f 89       	ldd	r24, Y+23	; 0x17
    17f6:	98 8d       	ldd	r25, Y+24	; 0x18
    17f8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    17fc:	dc 01       	movw	r26, r24
    17fe:	cb 01       	movw	r24, r22
    1800:	9c 8b       	std	Y+20, r25	; 0x14
    1802:	8b 8b       	std	Y+19, r24	; 0x13
    1804:	8b 89       	ldd	r24, Y+19	; 0x13
    1806:	9c 89       	ldd	r25, Y+20	; 0x14
    1808:	98 8b       	std	Y+16, r25	; 0x10
    180a:	8f 87       	std	Y+15, r24	; 0x0f
    180c:	8f 85       	ldd	r24, Y+15	; 0x0f
    180e:	98 89       	ldd	r25, Y+16	; 0x10
    1810:	01 97       	sbiw	r24, 0x01	; 1
    1812:	f1 f7       	brne	.-4      	; 0x1810 <main+0x9e8>
    1814:	98 8b       	std	Y+16, r25	; 0x10
    1816:	8f 87       	std	Y+15, r24	; 0x0f
            _delay_ms(30);
            if (!(PINB & (1<<0)) && H_Decrement_flag == 0) {
    1818:	e6 e3       	ldi	r30, 0x36	; 54
    181a:	f0 e0       	ldi	r31, 0x00	; 0
    181c:	80 81       	ld	r24, Z
    181e:	88 2f       	mov	r24, r24
    1820:	90 e0       	ldi	r25, 0x00	; 0
    1822:	81 70       	andi	r24, 0x01	; 1
    1824:	90 70       	andi	r25, 0x00	; 0
    1826:	00 97       	sbiw	r24, 0x00	; 0
    1828:	b9 f4       	brne	.+46     	; 0x1858 <main+0xa30>
    182a:	80 91 71 00 	lds	r24, 0x0071
    182e:	88 23       	and	r24, r24
    1830:	99 f4       	brne	.+38     	; 0x1858 <main+0xa30>
                if (hours > 0) {
    1832:	80 91 68 00 	lds	r24, 0x0068
    1836:	88 23       	and	r24, r24
    1838:	31 f0       	breq	.+12     	; 0x1846 <main+0xa1e>
                    hours--;
    183a:	80 91 68 00 	lds	r24, 0x0068
    183e:	81 50       	subi	r24, 0x01	; 1
    1840:	80 93 68 00 	sts	0x0068, r24
    1844:	03 c0       	rjmp	.+6      	; 0x184c <main+0xa24>
                } else {
                    hours = 99;
    1846:	83 e6       	ldi	r24, 0x63	; 99
    1848:	80 93 68 00 	sts	0x0068, r24
                }
                H_Decrement_flag = 1;
    184c:	81 e0       	ldi	r24, 0x01	; 1
    184e:	80 93 71 00 	sts	0x0071, r24
    1852:	02 c0       	rjmp	.+4      	; 0x1858 <main+0xa30>
            }
        } else {
            H_Decrement_flag = 0;
    1854:	10 92 71 00 	sts	0x0071, r1
        }

        //--------------------Timer State Change--------------------

        // Change Timer State (Increment/Decrement)
        if (!(PINB & (1<<7))) {
    1858:	e6 e3       	ldi	r30, 0x36	; 54
    185a:	f0 e0       	ldi	r31, 0x00	; 0
    185c:	80 81       	ld	r24, Z
    185e:	88 23       	and	r24, r24
    1860:	0c f4       	brge	.+2      	; 0x1864 <main+0xa3c>
    1862:	97 c0       	rjmp	.+302    	; 0x1992 <main+0xb6a>
    1864:	80 e0       	ldi	r24, 0x00	; 0
    1866:	90 e0       	ldi	r25, 0x00	; 0
    1868:	a0 ef       	ldi	r26, 0xF0	; 240
    186a:	b1 e4       	ldi	r27, 0x41	; 65
    186c:	8b 87       	std	Y+11, r24	; 0x0b
    186e:	9c 87       	std	Y+12, r25	; 0x0c
    1870:	ad 87       	std	Y+13, r26	; 0x0d
    1872:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1874:	6b 85       	ldd	r22, Y+11	; 0x0b
    1876:	7c 85       	ldd	r23, Y+12	; 0x0c
    1878:	8d 85       	ldd	r24, Y+13	; 0x0d
    187a:	9e 85       	ldd	r25, Y+14	; 0x0e
    187c:	20 e0       	ldi	r18, 0x00	; 0
    187e:	30 e0       	ldi	r19, 0x00	; 0
    1880:	4a e7       	ldi	r20, 0x7A	; 122
    1882:	55 e4       	ldi	r21, 0x45	; 69
    1884:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1888:	dc 01       	movw	r26, r24
    188a:	cb 01       	movw	r24, r22
    188c:	8f 83       	std	Y+7, r24	; 0x07
    188e:	98 87       	std	Y+8, r25	; 0x08
    1890:	a9 87       	std	Y+9, r26	; 0x09
    1892:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1894:	6f 81       	ldd	r22, Y+7	; 0x07
    1896:	78 85       	ldd	r23, Y+8	; 0x08
    1898:	89 85       	ldd	r24, Y+9	; 0x09
    189a:	9a 85       	ldd	r25, Y+10	; 0x0a
    189c:	20 e0       	ldi	r18, 0x00	; 0
    189e:	30 e0       	ldi	r19, 0x00	; 0
    18a0:	40 e8       	ldi	r20, 0x80	; 128
    18a2:	5f e3       	ldi	r21, 0x3F	; 63
    18a4:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    18a8:	88 23       	and	r24, r24
    18aa:	2c f4       	brge	.+10     	; 0x18b6 <main+0xa8e>
		__ticks = 1;
    18ac:	81 e0       	ldi	r24, 0x01	; 1
    18ae:	90 e0       	ldi	r25, 0x00	; 0
    18b0:	9e 83       	std	Y+6, r25	; 0x06
    18b2:	8d 83       	std	Y+5, r24	; 0x05
    18b4:	3f c0       	rjmp	.+126    	; 0x1934 <main+0xb0c>
	else if (__tmp > 65535)
    18b6:	6f 81       	ldd	r22, Y+7	; 0x07
    18b8:	78 85       	ldd	r23, Y+8	; 0x08
    18ba:	89 85       	ldd	r24, Y+9	; 0x09
    18bc:	9a 85       	ldd	r25, Y+10	; 0x0a
    18be:	20 e0       	ldi	r18, 0x00	; 0
    18c0:	3f ef       	ldi	r19, 0xFF	; 255
    18c2:	4f e7       	ldi	r20, 0x7F	; 127
    18c4:	57 e4       	ldi	r21, 0x47	; 71
    18c6:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    18ca:	18 16       	cp	r1, r24
    18cc:	4c f5       	brge	.+82     	; 0x1920 <main+0xaf8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    18ce:	6b 85       	ldd	r22, Y+11	; 0x0b
    18d0:	7c 85       	ldd	r23, Y+12	; 0x0c
    18d2:	8d 85       	ldd	r24, Y+13	; 0x0d
    18d4:	9e 85       	ldd	r25, Y+14	; 0x0e
    18d6:	20 e0       	ldi	r18, 0x00	; 0
    18d8:	30 e0       	ldi	r19, 0x00	; 0
    18da:	40 e2       	ldi	r20, 0x20	; 32
    18dc:	51 e4       	ldi	r21, 0x41	; 65
    18de:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    18e2:	dc 01       	movw	r26, r24
    18e4:	cb 01       	movw	r24, r22
    18e6:	bc 01       	movw	r22, r24
    18e8:	cd 01       	movw	r24, r26
    18ea:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    18ee:	dc 01       	movw	r26, r24
    18f0:	cb 01       	movw	r24, r22
    18f2:	9e 83       	std	Y+6, r25	; 0x06
    18f4:	8d 83       	std	Y+5, r24	; 0x05
    18f6:	0f c0       	rjmp	.+30     	; 0x1916 <main+0xaee>
    18f8:	80 e9       	ldi	r24, 0x90	; 144
    18fa:	91 e0       	ldi	r25, 0x01	; 1
    18fc:	9c 83       	std	Y+4, r25	; 0x04
    18fe:	8b 83       	std	Y+3, r24	; 0x03
    1900:	8b 81       	ldd	r24, Y+3	; 0x03
    1902:	9c 81       	ldd	r25, Y+4	; 0x04
    1904:	01 97       	sbiw	r24, 0x01	; 1
    1906:	f1 f7       	brne	.-4      	; 0x1904 <main+0xadc>
    1908:	9c 83       	std	Y+4, r25	; 0x04
    190a:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    190c:	8d 81       	ldd	r24, Y+5	; 0x05
    190e:	9e 81       	ldd	r25, Y+6	; 0x06
    1910:	01 97       	sbiw	r24, 0x01	; 1
    1912:	9e 83       	std	Y+6, r25	; 0x06
    1914:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1916:	8d 81       	ldd	r24, Y+5	; 0x05
    1918:	9e 81       	ldd	r25, Y+6	; 0x06
    191a:	00 97       	sbiw	r24, 0x00	; 0
    191c:	69 f7       	brne	.-38     	; 0x18f8 <main+0xad0>
    191e:	14 c0       	rjmp	.+40     	; 0x1948 <main+0xb20>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1920:	6f 81       	ldd	r22, Y+7	; 0x07
    1922:	78 85       	ldd	r23, Y+8	; 0x08
    1924:	89 85       	ldd	r24, Y+9	; 0x09
    1926:	9a 85       	ldd	r25, Y+10	; 0x0a
    1928:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    192c:	dc 01       	movw	r26, r24
    192e:	cb 01       	movw	r24, r22
    1930:	9e 83       	std	Y+6, r25	; 0x06
    1932:	8d 83       	std	Y+5, r24	; 0x05
    1934:	8d 81       	ldd	r24, Y+5	; 0x05
    1936:	9e 81       	ldd	r25, Y+6	; 0x06
    1938:	9a 83       	std	Y+2, r25	; 0x02
    193a:	89 83       	std	Y+1, r24	; 0x01
    193c:	89 81       	ldd	r24, Y+1	; 0x01
    193e:	9a 81       	ldd	r25, Y+2	; 0x02
    1940:	01 97       	sbiw	r24, 0x01	; 1
    1942:	f1 f7       	brne	.-4      	; 0x1940 <main+0xb18>
    1944:	9a 83       	std	Y+2, r25	; 0x02
    1946:	89 83       	std	Y+1, r24	; 0x01
            _delay_ms(30);
            if (!(PINB & (1<<7)) && TimerState_pushbutton_flag == 0) {
    1948:	e6 e3       	ldi	r30, 0x36	; 54
    194a:	f0 e0       	ldi	r31, 0x00	; 0
    194c:	80 81       	ld	r24, Z
    194e:	88 23       	and	r24, r24
    1950:	0c f4       	brge	.+2      	; 0x1954 <main+0xb2c>
    1952:	20 cb       	rjmp	.-2496   	; 0xf94 <main+0x16c>
    1954:	80 91 6b 00 	lds	r24, 0x006B
    1958:	88 23       	and	r24, r24
    195a:	09 f0       	breq	.+2      	; 0x195e <main+0xb36>
    195c:	1b cb       	rjmp	.-2506   	; 0xf94 <main+0x16c>
                PORTD ^= (1<<4);  // Toggle RED LED
    195e:	a2 e3       	ldi	r26, 0x32	; 50
    1960:	b0 e0       	ldi	r27, 0x00	; 0
    1962:	e2 e3       	ldi	r30, 0x32	; 50
    1964:	f0 e0       	ldi	r31, 0x00	; 0
    1966:	90 81       	ld	r25, Z
    1968:	80 e1       	ldi	r24, 0x10	; 16
    196a:	89 27       	eor	r24, r25
    196c:	8c 93       	st	X, r24
                PORTD ^= (1<<5);  // Toggle YELLOW LED
    196e:	a2 e3       	ldi	r26, 0x32	; 50
    1970:	b0 e0       	ldi	r27, 0x00	; 0
    1972:	e2 e3       	ldi	r30, 0x32	; 50
    1974:	f0 e0       	ldi	r31, 0x00	; 0
    1976:	90 81       	ld	r25, Z
    1978:	80 e2       	ldi	r24, 0x20	; 32
    197a:	89 27       	eor	r24, r25
    197c:	8c 93       	st	X, r24
                TimerState_flag ^= 1;  // Toggle Timer state
    197e:	90 91 6c 00 	lds	r25, 0x006C
    1982:	81 e0       	ldi	r24, 0x01	; 1
    1984:	89 27       	eor	r24, r25
    1986:	80 93 6c 00 	sts	0x006C, r24
                TimerState_pushbutton_flag = 1;
    198a:	81 e0       	ldi	r24, 0x01	; 1
    198c:	80 93 6b 00 	sts	0x006B, r24
    1990:	01 cb       	rjmp	.-2558   	; 0xf94 <main+0x16c>
            }
        } else {
            TimerState_pushbutton_flag = 0;
    1992:	10 92 6b 00 	sts	0x006B, r1
    1996:	fe ca       	rjmp	.-2564   	; 0xf94 <main+0x16c>

00001998 <display_time>:
    }
}

//--------------------------------------DISPLAY FUNCTION--------------------------------------------

void display_time(volatile unsigned char h, volatile unsigned char m, volatile unsigned char s) {
    1998:	0f 93       	push	r16
    199a:	1f 93       	push	r17
    199c:	df 93       	push	r29
    199e:	cf 93       	push	r28
    19a0:	cd b7       	in	r28, 0x3d	; 61
    19a2:	de b7       	in	r29, 0x3e	; 62
    19a4:	c7 55       	subi	r28, 0x57	; 87
    19a6:	d0 40       	sbci	r29, 0x00	; 0
    19a8:	0f b6       	in	r0, 0x3f	; 63
    19aa:	f8 94       	cli
    19ac:	de bf       	out	0x3e, r29	; 62
    19ae:	0f be       	out	0x3f, r0	; 63
    19b0:	cd bf       	out	0x3d, r28	; 61
    19b2:	fe 01       	movw	r30, r28
    19b4:	eb 5a       	subi	r30, 0xAB	; 171
    19b6:	ff 4f       	sbci	r31, 0xFF	; 255
    19b8:	80 83       	st	Z, r24
    19ba:	fe 01       	movw	r30, r28
    19bc:	ea 5a       	subi	r30, 0xAA	; 170
    19be:	ff 4f       	sbci	r31, 0xFF	; 255
    19c0:	60 83       	st	Z, r22
    19c2:	fe 01       	movw	r30, r28
    19c4:	e9 5a       	subi	r30, 0xA9	; 169
    19c6:	ff 4f       	sbci	r31, 0xFF	; 255
    19c8:	40 83       	st	Z, r20

	//The 2 Digits time whether that's hours, minutes or seconds can be displayed by just one variable as following for the number is 15: 15 / 0 = 1 , 15 % 10 = 5 ;

	// _ _ _ _ _ []
	PORTC = s % 10;
    19ca:	a5 e3       	ldi	r26, 0x35	; 53
    19cc:	b0 e0       	ldi	r27, 0x00	; 0
    19ce:	fe 01       	movw	r30, r28
    19d0:	e9 5a       	subi	r30, 0xA9	; 169
    19d2:	ff 4f       	sbci	r31, 0xFF	; 255
    19d4:	80 81       	ld	r24, Z
    19d6:	9a e0       	ldi	r25, 0x0A	; 10
    19d8:	69 2f       	mov	r22, r25
    19da:	0e 94 8a 10 	call	0x2114	; 0x2114 <__udivmodqi4>
    19de:	89 2f       	mov	r24, r25
    19e0:	8c 93       	st	X, r24
    PORTA |= 0x20; //Write 1 to show the Digit as it's common anode 7-segment
    19e2:	ab e3       	ldi	r26, 0x3B	; 59
    19e4:	b0 e0       	ldi	r27, 0x00	; 0
    19e6:	eb e3       	ldi	r30, 0x3B	; 59
    19e8:	f0 e0       	ldi	r31, 0x00	; 0
    19ea:	80 81       	ld	r24, Z
    19ec:	80 62       	ori	r24, 0x20	; 32
    19ee:	8c 93       	st	X, r24
    19f0:	fe 01       	movw	r30, r28
    19f2:	ef 5a       	subi	r30, 0xAF	; 175
    19f4:	ff 4f       	sbci	r31, 0xFF	; 255
    19f6:	80 e0       	ldi	r24, 0x00	; 0
    19f8:	90 e0       	ldi	r25, 0x00	; 0
    19fa:	a0 e4       	ldi	r26, 0x40	; 64
    19fc:	b0 e4       	ldi	r27, 0x40	; 64
    19fe:	80 83       	st	Z, r24
    1a00:	91 83       	std	Z+1, r25	; 0x01
    1a02:	a2 83       	std	Z+2, r26	; 0x02
    1a04:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1a06:	8e 01       	movw	r16, r28
    1a08:	03 5b       	subi	r16, 0xB3	; 179
    1a0a:	1f 4f       	sbci	r17, 0xFF	; 255
    1a0c:	fe 01       	movw	r30, r28
    1a0e:	ef 5a       	subi	r30, 0xAF	; 175
    1a10:	ff 4f       	sbci	r31, 0xFF	; 255
    1a12:	60 81       	ld	r22, Z
    1a14:	71 81       	ldd	r23, Z+1	; 0x01
    1a16:	82 81       	ldd	r24, Z+2	; 0x02
    1a18:	93 81       	ldd	r25, Z+3	; 0x03
    1a1a:	20 e0       	ldi	r18, 0x00	; 0
    1a1c:	30 e0       	ldi	r19, 0x00	; 0
    1a1e:	4a e7       	ldi	r20, 0x7A	; 122
    1a20:	55 e4       	ldi	r21, 0x45	; 69
    1a22:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1a26:	dc 01       	movw	r26, r24
    1a28:	cb 01       	movw	r24, r22
    1a2a:	f8 01       	movw	r30, r16
    1a2c:	80 83       	st	Z, r24
    1a2e:	91 83       	std	Z+1, r25	; 0x01
    1a30:	a2 83       	std	Z+2, r26	; 0x02
    1a32:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1a34:	fe 01       	movw	r30, r28
    1a36:	e3 5b       	subi	r30, 0xB3	; 179
    1a38:	ff 4f       	sbci	r31, 0xFF	; 255
    1a3a:	60 81       	ld	r22, Z
    1a3c:	71 81       	ldd	r23, Z+1	; 0x01
    1a3e:	82 81       	ldd	r24, Z+2	; 0x02
    1a40:	93 81       	ldd	r25, Z+3	; 0x03
    1a42:	20 e0       	ldi	r18, 0x00	; 0
    1a44:	30 e0       	ldi	r19, 0x00	; 0
    1a46:	40 e8       	ldi	r20, 0x80	; 128
    1a48:	5f e3       	ldi	r21, 0x3F	; 63
    1a4a:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1a4e:	88 23       	and	r24, r24
    1a50:	44 f4       	brge	.+16     	; 0x1a62 <display_time+0xca>
		__ticks = 1;
    1a52:	fe 01       	movw	r30, r28
    1a54:	e5 5b       	subi	r30, 0xB5	; 181
    1a56:	ff 4f       	sbci	r31, 0xFF	; 255
    1a58:	81 e0       	ldi	r24, 0x01	; 1
    1a5a:	90 e0       	ldi	r25, 0x00	; 0
    1a5c:	91 83       	std	Z+1, r25	; 0x01
    1a5e:	80 83       	st	Z, r24
    1a60:	64 c0       	rjmp	.+200    	; 0x1b2a <display_time+0x192>
	else if (__tmp > 65535)
    1a62:	fe 01       	movw	r30, r28
    1a64:	e3 5b       	subi	r30, 0xB3	; 179
    1a66:	ff 4f       	sbci	r31, 0xFF	; 255
    1a68:	60 81       	ld	r22, Z
    1a6a:	71 81       	ldd	r23, Z+1	; 0x01
    1a6c:	82 81       	ldd	r24, Z+2	; 0x02
    1a6e:	93 81       	ldd	r25, Z+3	; 0x03
    1a70:	20 e0       	ldi	r18, 0x00	; 0
    1a72:	3f ef       	ldi	r19, 0xFF	; 255
    1a74:	4f e7       	ldi	r20, 0x7F	; 127
    1a76:	57 e4       	ldi	r21, 0x47	; 71
    1a78:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1a7c:	18 16       	cp	r1, r24
    1a7e:	0c f0       	brlt	.+2      	; 0x1a82 <display_time+0xea>
    1a80:	43 c0       	rjmp	.+134    	; 0x1b08 <display_time+0x170>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1a82:	fe 01       	movw	r30, r28
    1a84:	ef 5a       	subi	r30, 0xAF	; 175
    1a86:	ff 4f       	sbci	r31, 0xFF	; 255
    1a88:	60 81       	ld	r22, Z
    1a8a:	71 81       	ldd	r23, Z+1	; 0x01
    1a8c:	82 81       	ldd	r24, Z+2	; 0x02
    1a8e:	93 81       	ldd	r25, Z+3	; 0x03
    1a90:	20 e0       	ldi	r18, 0x00	; 0
    1a92:	30 e0       	ldi	r19, 0x00	; 0
    1a94:	40 e2       	ldi	r20, 0x20	; 32
    1a96:	51 e4       	ldi	r21, 0x41	; 65
    1a98:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1a9c:	dc 01       	movw	r26, r24
    1a9e:	cb 01       	movw	r24, r22
    1aa0:	8e 01       	movw	r16, r28
    1aa2:	05 5b       	subi	r16, 0xB5	; 181
    1aa4:	1f 4f       	sbci	r17, 0xFF	; 255
    1aa6:	bc 01       	movw	r22, r24
    1aa8:	cd 01       	movw	r24, r26
    1aaa:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1aae:	dc 01       	movw	r26, r24
    1ab0:	cb 01       	movw	r24, r22
    1ab2:	f8 01       	movw	r30, r16
    1ab4:	91 83       	std	Z+1, r25	; 0x01
    1ab6:	80 83       	st	Z, r24
    1ab8:	1f c0       	rjmp	.+62     	; 0x1af8 <display_time+0x160>
    1aba:	fe 01       	movw	r30, r28
    1abc:	e7 5b       	subi	r30, 0xB7	; 183
    1abe:	ff 4f       	sbci	r31, 0xFF	; 255
    1ac0:	80 e9       	ldi	r24, 0x90	; 144
    1ac2:	91 e0       	ldi	r25, 0x01	; 1
    1ac4:	91 83       	std	Z+1, r25	; 0x01
    1ac6:	80 83       	st	Z, r24
    1ac8:	fe 01       	movw	r30, r28
    1aca:	e7 5b       	subi	r30, 0xB7	; 183
    1acc:	ff 4f       	sbci	r31, 0xFF	; 255
    1ace:	80 81       	ld	r24, Z
    1ad0:	91 81       	ldd	r25, Z+1	; 0x01
    1ad2:	01 97       	sbiw	r24, 0x01	; 1
    1ad4:	f1 f7       	brne	.-4      	; 0x1ad2 <display_time+0x13a>
    1ad6:	fe 01       	movw	r30, r28
    1ad8:	e7 5b       	subi	r30, 0xB7	; 183
    1ada:	ff 4f       	sbci	r31, 0xFF	; 255
    1adc:	91 83       	std	Z+1, r25	; 0x01
    1ade:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1ae0:	de 01       	movw	r26, r28
    1ae2:	a5 5b       	subi	r26, 0xB5	; 181
    1ae4:	bf 4f       	sbci	r27, 0xFF	; 255
    1ae6:	fe 01       	movw	r30, r28
    1ae8:	e5 5b       	subi	r30, 0xB5	; 181
    1aea:	ff 4f       	sbci	r31, 0xFF	; 255
    1aec:	80 81       	ld	r24, Z
    1aee:	91 81       	ldd	r25, Z+1	; 0x01
    1af0:	01 97       	sbiw	r24, 0x01	; 1
    1af2:	11 96       	adiw	r26, 0x01	; 1
    1af4:	9c 93       	st	X, r25
    1af6:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1af8:	fe 01       	movw	r30, r28
    1afa:	e5 5b       	subi	r30, 0xB5	; 181
    1afc:	ff 4f       	sbci	r31, 0xFF	; 255
    1afe:	80 81       	ld	r24, Z
    1b00:	91 81       	ldd	r25, Z+1	; 0x01
    1b02:	00 97       	sbiw	r24, 0x00	; 0
    1b04:	d1 f6       	brne	.-76     	; 0x1aba <display_time+0x122>
    1b06:	27 c0       	rjmp	.+78     	; 0x1b56 <display_time+0x1be>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1b08:	8e 01       	movw	r16, r28
    1b0a:	05 5b       	subi	r16, 0xB5	; 181
    1b0c:	1f 4f       	sbci	r17, 0xFF	; 255
    1b0e:	fe 01       	movw	r30, r28
    1b10:	e3 5b       	subi	r30, 0xB3	; 179
    1b12:	ff 4f       	sbci	r31, 0xFF	; 255
    1b14:	60 81       	ld	r22, Z
    1b16:	71 81       	ldd	r23, Z+1	; 0x01
    1b18:	82 81       	ldd	r24, Z+2	; 0x02
    1b1a:	93 81       	ldd	r25, Z+3	; 0x03
    1b1c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1b20:	dc 01       	movw	r26, r24
    1b22:	cb 01       	movw	r24, r22
    1b24:	f8 01       	movw	r30, r16
    1b26:	91 83       	std	Z+1, r25	; 0x01
    1b28:	80 83       	st	Z, r24
    1b2a:	de 01       	movw	r26, r28
    1b2c:	a9 5b       	subi	r26, 0xB9	; 185
    1b2e:	bf 4f       	sbci	r27, 0xFF	; 255
    1b30:	fe 01       	movw	r30, r28
    1b32:	e5 5b       	subi	r30, 0xB5	; 181
    1b34:	ff 4f       	sbci	r31, 0xFF	; 255
    1b36:	80 81       	ld	r24, Z
    1b38:	91 81       	ldd	r25, Z+1	; 0x01
    1b3a:	8d 93       	st	X+, r24
    1b3c:	9c 93       	st	X, r25
    1b3e:	fe 01       	movw	r30, r28
    1b40:	e9 5b       	subi	r30, 0xB9	; 185
    1b42:	ff 4f       	sbci	r31, 0xFF	; 255
    1b44:	80 81       	ld	r24, Z
    1b46:	91 81       	ldd	r25, Z+1	; 0x01
    1b48:	01 97       	sbiw	r24, 0x01	; 1
    1b4a:	f1 f7       	brne	.-4      	; 0x1b48 <display_time+0x1b0>
    1b4c:	fe 01       	movw	r30, r28
    1b4e:	e9 5b       	subi	r30, 0xB9	; 185
    1b50:	ff 4f       	sbci	r31, 0xFF	; 255
    1b52:	91 83       	std	Z+1, r25	; 0x01
    1b54:	80 83       	st	Z, r24
    _delay_ms(3);
    PORTA &= ~0x20;
    1b56:	ab e3       	ldi	r26, 0x3B	; 59
    1b58:	b0 e0       	ldi	r27, 0x00	; 0
    1b5a:	eb e3       	ldi	r30, 0x3B	; 59
    1b5c:	f0 e0       	ldi	r31, 0x00	; 0
    1b5e:	80 81       	ld	r24, Z
    1b60:	8f 7d       	andi	r24, 0xDF	; 223
    1b62:	8c 93       	st	X, r24

    // _ _ _ _ [] _
    PORTC = s / 10;
    1b64:	a5 e3       	ldi	r26, 0x35	; 53
    1b66:	b0 e0       	ldi	r27, 0x00	; 0
    1b68:	fe 01       	movw	r30, r28
    1b6a:	e9 5a       	subi	r30, 0xA9	; 169
    1b6c:	ff 4f       	sbci	r31, 0xFF	; 255
    1b6e:	80 81       	ld	r24, Z
    1b70:	9a e0       	ldi	r25, 0x0A	; 10
    1b72:	69 2f       	mov	r22, r25
    1b74:	0e 94 8a 10 	call	0x2114	; 0x2114 <__udivmodqi4>
    1b78:	8c 93       	st	X, r24
    PORTA |= 0x10;
    1b7a:	ab e3       	ldi	r26, 0x3B	; 59
    1b7c:	b0 e0       	ldi	r27, 0x00	; 0
    1b7e:	eb e3       	ldi	r30, 0x3B	; 59
    1b80:	f0 e0       	ldi	r31, 0x00	; 0
    1b82:	80 81       	ld	r24, Z
    1b84:	80 61       	ori	r24, 0x10	; 16
    1b86:	8c 93       	st	X, r24
    1b88:	fe 01       	movw	r30, r28
    1b8a:	ed 5b       	subi	r30, 0xBD	; 189
    1b8c:	ff 4f       	sbci	r31, 0xFF	; 255
    1b8e:	80 e0       	ldi	r24, 0x00	; 0
    1b90:	90 e0       	ldi	r25, 0x00	; 0
    1b92:	a0 e4       	ldi	r26, 0x40	; 64
    1b94:	b0 e4       	ldi	r27, 0x40	; 64
    1b96:	80 83       	st	Z, r24
    1b98:	91 83       	std	Z+1, r25	; 0x01
    1b9a:	a2 83       	std	Z+2, r26	; 0x02
    1b9c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1b9e:	8e 01       	movw	r16, r28
    1ba0:	01 5c       	subi	r16, 0xC1	; 193
    1ba2:	1f 4f       	sbci	r17, 0xFF	; 255
    1ba4:	fe 01       	movw	r30, r28
    1ba6:	ed 5b       	subi	r30, 0xBD	; 189
    1ba8:	ff 4f       	sbci	r31, 0xFF	; 255
    1baa:	60 81       	ld	r22, Z
    1bac:	71 81       	ldd	r23, Z+1	; 0x01
    1bae:	82 81       	ldd	r24, Z+2	; 0x02
    1bb0:	93 81       	ldd	r25, Z+3	; 0x03
    1bb2:	20 e0       	ldi	r18, 0x00	; 0
    1bb4:	30 e0       	ldi	r19, 0x00	; 0
    1bb6:	4a e7       	ldi	r20, 0x7A	; 122
    1bb8:	55 e4       	ldi	r21, 0x45	; 69
    1bba:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1bbe:	dc 01       	movw	r26, r24
    1bc0:	cb 01       	movw	r24, r22
    1bc2:	f8 01       	movw	r30, r16
    1bc4:	80 83       	st	Z, r24
    1bc6:	91 83       	std	Z+1, r25	; 0x01
    1bc8:	a2 83       	std	Z+2, r26	; 0x02
    1bca:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1bcc:	fe 01       	movw	r30, r28
    1bce:	ff 96       	adiw	r30, 0x3f	; 63
    1bd0:	60 81       	ld	r22, Z
    1bd2:	71 81       	ldd	r23, Z+1	; 0x01
    1bd4:	82 81       	ldd	r24, Z+2	; 0x02
    1bd6:	93 81       	ldd	r25, Z+3	; 0x03
    1bd8:	20 e0       	ldi	r18, 0x00	; 0
    1bda:	30 e0       	ldi	r19, 0x00	; 0
    1bdc:	40 e8       	ldi	r20, 0x80	; 128
    1bde:	5f e3       	ldi	r21, 0x3F	; 63
    1be0:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1be4:	88 23       	and	r24, r24
    1be6:	2c f4       	brge	.+10     	; 0x1bf2 <display_time+0x25a>
		__ticks = 1;
    1be8:	81 e0       	ldi	r24, 0x01	; 1
    1bea:	90 e0       	ldi	r25, 0x00	; 0
    1bec:	9e af       	std	Y+62, r25	; 0x3e
    1bee:	8d af       	std	Y+61, r24	; 0x3d
    1bf0:	46 c0       	rjmp	.+140    	; 0x1c7e <display_time+0x2e6>
	else if (__tmp > 65535)
    1bf2:	fe 01       	movw	r30, r28
    1bf4:	ff 96       	adiw	r30, 0x3f	; 63
    1bf6:	60 81       	ld	r22, Z
    1bf8:	71 81       	ldd	r23, Z+1	; 0x01
    1bfa:	82 81       	ldd	r24, Z+2	; 0x02
    1bfc:	93 81       	ldd	r25, Z+3	; 0x03
    1bfe:	20 e0       	ldi	r18, 0x00	; 0
    1c00:	3f ef       	ldi	r19, 0xFF	; 255
    1c02:	4f e7       	ldi	r20, 0x7F	; 127
    1c04:	57 e4       	ldi	r21, 0x47	; 71
    1c06:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1c0a:	18 16       	cp	r1, r24
    1c0c:	64 f5       	brge	.+88     	; 0x1c66 <display_time+0x2ce>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1c0e:	fe 01       	movw	r30, r28
    1c10:	ed 5b       	subi	r30, 0xBD	; 189
    1c12:	ff 4f       	sbci	r31, 0xFF	; 255
    1c14:	60 81       	ld	r22, Z
    1c16:	71 81       	ldd	r23, Z+1	; 0x01
    1c18:	82 81       	ldd	r24, Z+2	; 0x02
    1c1a:	93 81       	ldd	r25, Z+3	; 0x03
    1c1c:	20 e0       	ldi	r18, 0x00	; 0
    1c1e:	30 e0       	ldi	r19, 0x00	; 0
    1c20:	40 e2       	ldi	r20, 0x20	; 32
    1c22:	51 e4       	ldi	r21, 0x41	; 65
    1c24:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1c28:	dc 01       	movw	r26, r24
    1c2a:	cb 01       	movw	r24, r22
    1c2c:	bc 01       	movw	r22, r24
    1c2e:	cd 01       	movw	r24, r26
    1c30:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1c34:	dc 01       	movw	r26, r24
    1c36:	cb 01       	movw	r24, r22
    1c38:	9e af       	std	Y+62, r25	; 0x3e
    1c3a:	8d af       	std	Y+61, r24	; 0x3d
    1c3c:	0f c0       	rjmp	.+30     	; 0x1c5c <display_time+0x2c4>
    1c3e:	80 e9       	ldi	r24, 0x90	; 144
    1c40:	91 e0       	ldi	r25, 0x01	; 1
    1c42:	9c af       	std	Y+60, r25	; 0x3c
    1c44:	8b af       	std	Y+59, r24	; 0x3b
    1c46:	8b ad       	ldd	r24, Y+59	; 0x3b
    1c48:	9c ad       	ldd	r25, Y+60	; 0x3c
    1c4a:	01 97       	sbiw	r24, 0x01	; 1
    1c4c:	f1 f7       	brne	.-4      	; 0x1c4a <display_time+0x2b2>
    1c4e:	9c af       	std	Y+60, r25	; 0x3c
    1c50:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1c52:	8d ad       	ldd	r24, Y+61	; 0x3d
    1c54:	9e ad       	ldd	r25, Y+62	; 0x3e
    1c56:	01 97       	sbiw	r24, 0x01	; 1
    1c58:	9e af       	std	Y+62, r25	; 0x3e
    1c5a:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1c5c:	8d ad       	ldd	r24, Y+61	; 0x3d
    1c5e:	9e ad       	ldd	r25, Y+62	; 0x3e
    1c60:	00 97       	sbiw	r24, 0x00	; 0
    1c62:	69 f7       	brne	.-38     	; 0x1c3e <display_time+0x2a6>
    1c64:	16 c0       	rjmp	.+44     	; 0x1c92 <display_time+0x2fa>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1c66:	fe 01       	movw	r30, r28
    1c68:	ff 96       	adiw	r30, 0x3f	; 63
    1c6a:	60 81       	ld	r22, Z
    1c6c:	71 81       	ldd	r23, Z+1	; 0x01
    1c6e:	82 81       	ldd	r24, Z+2	; 0x02
    1c70:	93 81       	ldd	r25, Z+3	; 0x03
    1c72:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1c76:	dc 01       	movw	r26, r24
    1c78:	cb 01       	movw	r24, r22
    1c7a:	9e af       	std	Y+62, r25	; 0x3e
    1c7c:	8d af       	std	Y+61, r24	; 0x3d
    1c7e:	8d ad       	ldd	r24, Y+61	; 0x3d
    1c80:	9e ad       	ldd	r25, Y+62	; 0x3e
    1c82:	9a af       	std	Y+58, r25	; 0x3a
    1c84:	89 af       	std	Y+57, r24	; 0x39
    1c86:	89 ad       	ldd	r24, Y+57	; 0x39
    1c88:	9a ad       	ldd	r25, Y+58	; 0x3a
    1c8a:	01 97       	sbiw	r24, 0x01	; 1
    1c8c:	f1 f7       	brne	.-4      	; 0x1c8a <display_time+0x2f2>
    1c8e:	9a af       	std	Y+58, r25	; 0x3a
    1c90:	89 af       	std	Y+57, r24	; 0x39
    _delay_ms(3);
    PORTA &= ~0x10;
    1c92:	ab e3       	ldi	r26, 0x3B	; 59
    1c94:	b0 e0       	ldi	r27, 0x00	; 0
    1c96:	eb e3       	ldi	r30, 0x3B	; 59
    1c98:	f0 e0       	ldi	r31, 0x00	; 0
    1c9a:	80 81       	ld	r24, Z
    1c9c:	8f 7e       	andi	r24, 0xEF	; 239
    1c9e:	8c 93       	st	X, r24

    // _ _ _ [] _ _
    PORTC = m % 10;
    1ca0:	a5 e3       	ldi	r26, 0x35	; 53
    1ca2:	b0 e0       	ldi	r27, 0x00	; 0
    1ca4:	fe 01       	movw	r30, r28
    1ca6:	ea 5a       	subi	r30, 0xAA	; 170
    1ca8:	ff 4f       	sbci	r31, 0xFF	; 255
    1caa:	80 81       	ld	r24, Z
    1cac:	9a e0       	ldi	r25, 0x0A	; 10
    1cae:	69 2f       	mov	r22, r25
    1cb0:	0e 94 8a 10 	call	0x2114	; 0x2114 <__udivmodqi4>
    1cb4:	89 2f       	mov	r24, r25
    1cb6:	8c 93       	st	X, r24
    PORTA |= 0x08;
    1cb8:	ab e3       	ldi	r26, 0x3B	; 59
    1cba:	b0 e0       	ldi	r27, 0x00	; 0
    1cbc:	eb e3       	ldi	r30, 0x3B	; 59
    1cbe:	f0 e0       	ldi	r31, 0x00	; 0
    1cc0:	80 81       	ld	r24, Z
    1cc2:	88 60       	ori	r24, 0x08	; 8
    1cc4:	8c 93       	st	X, r24
    1cc6:	80 e0       	ldi	r24, 0x00	; 0
    1cc8:	90 e0       	ldi	r25, 0x00	; 0
    1cca:	a0 e4       	ldi	r26, 0x40	; 64
    1ccc:	b0 e4       	ldi	r27, 0x40	; 64
    1cce:	8d ab       	std	Y+53, r24	; 0x35
    1cd0:	9e ab       	std	Y+54, r25	; 0x36
    1cd2:	af ab       	std	Y+55, r26	; 0x37
    1cd4:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1cd6:	6d a9       	ldd	r22, Y+53	; 0x35
    1cd8:	7e a9       	ldd	r23, Y+54	; 0x36
    1cda:	8f a9       	ldd	r24, Y+55	; 0x37
    1cdc:	98 ad       	ldd	r25, Y+56	; 0x38
    1cde:	20 e0       	ldi	r18, 0x00	; 0
    1ce0:	30 e0       	ldi	r19, 0x00	; 0
    1ce2:	4a e7       	ldi	r20, 0x7A	; 122
    1ce4:	55 e4       	ldi	r21, 0x45	; 69
    1ce6:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1cea:	dc 01       	movw	r26, r24
    1cec:	cb 01       	movw	r24, r22
    1cee:	89 ab       	std	Y+49, r24	; 0x31
    1cf0:	9a ab       	std	Y+50, r25	; 0x32
    1cf2:	ab ab       	std	Y+51, r26	; 0x33
    1cf4:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    1cf6:	69 a9       	ldd	r22, Y+49	; 0x31
    1cf8:	7a a9       	ldd	r23, Y+50	; 0x32
    1cfa:	8b a9       	ldd	r24, Y+51	; 0x33
    1cfc:	9c a9       	ldd	r25, Y+52	; 0x34
    1cfe:	20 e0       	ldi	r18, 0x00	; 0
    1d00:	30 e0       	ldi	r19, 0x00	; 0
    1d02:	40 e8       	ldi	r20, 0x80	; 128
    1d04:	5f e3       	ldi	r21, 0x3F	; 63
    1d06:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1d0a:	88 23       	and	r24, r24
    1d0c:	2c f4       	brge	.+10     	; 0x1d18 <display_time+0x380>
		__ticks = 1;
    1d0e:	81 e0       	ldi	r24, 0x01	; 1
    1d10:	90 e0       	ldi	r25, 0x00	; 0
    1d12:	98 ab       	std	Y+48, r25	; 0x30
    1d14:	8f a7       	std	Y+47, r24	; 0x2f
    1d16:	3f c0       	rjmp	.+126    	; 0x1d96 <display_time+0x3fe>
	else if (__tmp > 65535)
    1d18:	69 a9       	ldd	r22, Y+49	; 0x31
    1d1a:	7a a9       	ldd	r23, Y+50	; 0x32
    1d1c:	8b a9       	ldd	r24, Y+51	; 0x33
    1d1e:	9c a9       	ldd	r25, Y+52	; 0x34
    1d20:	20 e0       	ldi	r18, 0x00	; 0
    1d22:	3f ef       	ldi	r19, 0xFF	; 255
    1d24:	4f e7       	ldi	r20, 0x7F	; 127
    1d26:	57 e4       	ldi	r21, 0x47	; 71
    1d28:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1d2c:	18 16       	cp	r1, r24
    1d2e:	4c f5       	brge	.+82     	; 0x1d82 <display_time+0x3ea>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1d30:	6d a9       	ldd	r22, Y+53	; 0x35
    1d32:	7e a9       	ldd	r23, Y+54	; 0x36
    1d34:	8f a9       	ldd	r24, Y+55	; 0x37
    1d36:	98 ad       	ldd	r25, Y+56	; 0x38
    1d38:	20 e0       	ldi	r18, 0x00	; 0
    1d3a:	30 e0       	ldi	r19, 0x00	; 0
    1d3c:	40 e2       	ldi	r20, 0x20	; 32
    1d3e:	51 e4       	ldi	r21, 0x41	; 65
    1d40:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1d44:	dc 01       	movw	r26, r24
    1d46:	cb 01       	movw	r24, r22
    1d48:	bc 01       	movw	r22, r24
    1d4a:	cd 01       	movw	r24, r26
    1d4c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1d50:	dc 01       	movw	r26, r24
    1d52:	cb 01       	movw	r24, r22
    1d54:	98 ab       	std	Y+48, r25	; 0x30
    1d56:	8f a7       	std	Y+47, r24	; 0x2f
    1d58:	0f c0       	rjmp	.+30     	; 0x1d78 <display_time+0x3e0>
    1d5a:	80 e9       	ldi	r24, 0x90	; 144
    1d5c:	91 e0       	ldi	r25, 0x01	; 1
    1d5e:	9e a7       	std	Y+46, r25	; 0x2e
    1d60:	8d a7       	std	Y+45, r24	; 0x2d
    1d62:	8d a5       	ldd	r24, Y+45	; 0x2d
    1d64:	9e a5       	ldd	r25, Y+46	; 0x2e
    1d66:	01 97       	sbiw	r24, 0x01	; 1
    1d68:	f1 f7       	brne	.-4      	; 0x1d66 <display_time+0x3ce>
    1d6a:	9e a7       	std	Y+46, r25	; 0x2e
    1d6c:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1d6e:	8f a5       	ldd	r24, Y+47	; 0x2f
    1d70:	98 a9       	ldd	r25, Y+48	; 0x30
    1d72:	01 97       	sbiw	r24, 0x01	; 1
    1d74:	98 ab       	std	Y+48, r25	; 0x30
    1d76:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1d78:	8f a5       	ldd	r24, Y+47	; 0x2f
    1d7a:	98 a9       	ldd	r25, Y+48	; 0x30
    1d7c:	00 97       	sbiw	r24, 0x00	; 0
    1d7e:	69 f7       	brne	.-38     	; 0x1d5a <display_time+0x3c2>
    1d80:	14 c0       	rjmp	.+40     	; 0x1daa <display_time+0x412>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1d82:	69 a9       	ldd	r22, Y+49	; 0x31
    1d84:	7a a9       	ldd	r23, Y+50	; 0x32
    1d86:	8b a9       	ldd	r24, Y+51	; 0x33
    1d88:	9c a9       	ldd	r25, Y+52	; 0x34
    1d8a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1d8e:	dc 01       	movw	r26, r24
    1d90:	cb 01       	movw	r24, r22
    1d92:	98 ab       	std	Y+48, r25	; 0x30
    1d94:	8f a7       	std	Y+47, r24	; 0x2f
    1d96:	8f a5       	ldd	r24, Y+47	; 0x2f
    1d98:	98 a9       	ldd	r25, Y+48	; 0x30
    1d9a:	9c a7       	std	Y+44, r25	; 0x2c
    1d9c:	8b a7       	std	Y+43, r24	; 0x2b
    1d9e:	8b a5       	ldd	r24, Y+43	; 0x2b
    1da0:	9c a5       	ldd	r25, Y+44	; 0x2c
    1da2:	01 97       	sbiw	r24, 0x01	; 1
    1da4:	f1 f7       	brne	.-4      	; 0x1da2 <display_time+0x40a>
    1da6:	9c a7       	std	Y+44, r25	; 0x2c
    1da8:	8b a7       	std	Y+43, r24	; 0x2b
    _delay_ms(3);
    PORTA &= ~0x08;
    1daa:	ab e3       	ldi	r26, 0x3B	; 59
    1dac:	b0 e0       	ldi	r27, 0x00	; 0
    1dae:	eb e3       	ldi	r30, 0x3B	; 59
    1db0:	f0 e0       	ldi	r31, 0x00	; 0
    1db2:	80 81       	ld	r24, Z
    1db4:	87 7f       	andi	r24, 0xF7	; 247
    1db6:	8c 93       	st	X, r24

    // _ _ [] _ _ _
    PORTC = m / 10;
    1db8:	a5 e3       	ldi	r26, 0x35	; 53
    1dba:	b0 e0       	ldi	r27, 0x00	; 0
    1dbc:	fe 01       	movw	r30, r28
    1dbe:	ea 5a       	subi	r30, 0xAA	; 170
    1dc0:	ff 4f       	sbci	r31, 0xFF	; 255
    1dc2:	80 81       	ld	r24, Z
    1dc4:	9a e0       	ldi	r25, 0x0A	; 10
    1dc6:	69 2f       	mov	r22, r25
    1dc8:	0e 94 8a 10 	call	0x2114	; 0x2114 <__udivmodqi4>
    1dcc:	8c 93       	st	X, r24
    PORTA |= 0x04;
    1dce:	ab e3       	ldi	r26, 0x3B	; 59
    1dd0:	b0 e0       	ldi	r27, 0x00	; 0
    1dd2:	eb e3       	ldi	r30, 0x3B	; 59
    1dd4:	f0 e0       	ldi	r31, 0x00	; 0
    1dd6:	80 81       	ld	r24, Z
    1dd8:	84 60       	ori	r24, 0x04	; 4
    1dda:	8c 93       	st	X, r24
    1ddc:	80 e0       	ldi	r24, 0x00	; 0
    1dde:	90 e0       	ldi	r25, 0x00	; 0
    1de0:	a0 e4       	ldi	r26, 0x40	; 64
    1de2:	b0 e4       	ldi	r27, 0x40	; 64
    1de4:	8f a3       	std	Y+39, r24	; 0x27
    1de6:	98 a7       	std	Y+40, r25	; 0x28
    1de8:	a9 a7       	std	Y+41, r26	; 0x29
    1dea:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1dec:	6f a1       	ldd	r22, Y+39	; 0x27
    1dee:	78 a5       	ldd	r23, Y+40	; 0x28
    1df0:	89 a5       	ldd	r24, Y+41	; 0x29
    1df2:	9a a5       	ldd	r25, Y+42	; 0x2a
    1df4:	20 e0       	ldi	r18, 0x00	; 0
    1df6:	30 e0       	ldi	r19, 0x00	; 0
    1df8:	4a e7       	ldi	r20, 0x7A	; 122
    1dfa:	55 e4       	ldi	r21, 0x45	; 69
    1dfc:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1e00:	dc 01       	movw	r26, r24
    1e02:	cb 01       	movw	r24, r22
    1e04:	8b a3       	std	Y+35, r24	; 0x23
    1e06:	9c a3       	std	Y+36, r25	; 0x24
    1e08:	ad a3       	std	Y+37, r26	; 0x25
    1e0a:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    1e0c:	6b a1       	ldd	r22, Y+35	; 0x23
    1e0e:	7c a1       	ldd	r23, Y+36	; 0x24
    1e10:	8d a1       	ldd	r24, Y+37	; 0x25
    1e12:	9e a1       	ldd	r25, Y+38	; 0x26
    1e14:	20 e0       	ldi	r18, 0x00	; 0
    1e16:	30 e0       	ldi	r19, 0x00	; 0
    1e18:	40 e8       	ldi	r20, 0x80	; 128
    1e1a:	5f e3       	ldi	r21, 0x3F	; 63
    1e1c:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1e20:	88 23       	and	r24, r24
    1e22:	2c f4       	brge	.+10     	; 0x1e2e <display_time+0x496>
		__ticks = 1;
    1e24:	81 e0       	ldi	r24, 0x01	; 1
    1e26:	90 e0       	ldi	r25, 0x00	; 0
    1e28:	9a a3       	std	Y+34, r25	; 0x22
    1e2a:	89 a3       	std	Y+33, r24	; 0x21
    1e2c:	3f c0       	rjmp	.+126    	; 0x1eac <display_time+0x514>
	else if (__tmp > 65535)
    1e2e:	6b a1       	ldd	r22, Y+35	; 0x23
    1e30:	7c a1       	ldd	r23, Y+36	; 0x24
    1e32:	8d a1       	ldd	r24, Y+37	; 0x25
    1e34:	9e a1       	ldd	r25, Y+38	; 0x26
    1e36:	20 e0       	ldi	r18, 0x00	; 0
    1e38:	3f ef       	ldi	r19, 0xFF	; 255
    1e3a:	4f e7       	ldi	r20, 0x7F	; 127
    1e3c:	57 e4       	ldi	r21, 0x47	; 71
    1e3e:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1e42:	18 16       	cp	r1, r24
    1e44:	4c f5       	brge	.+82     	; 0x1e98 <display_time+0x500>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1e46:	6f a1       	ldd	r22, Y+39	; 0x27
    1e48:	78 a5       	ldd	r23, Y+40	; 0x28
    1e4a:	89 a5       	ldd	r24, Y+41	; 0x29
    1e4c:	9a a5       	ldd	r25, Y+42	; 0x2a
    1e4e:	20 e0       	ldi	r18, 0x00	; 0
    1e50:	30 e0       	ldi	r19, 0x00	; 0
    1e52:	40 e2       	ldi	r20, 0x20	; 32
    1e54:	51 e4       	ldi	r21, 0x41	; 65
    1e56:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1e5a:	dc 01       	movw	r26, r24
    1e5c:	cb 01       	movw	r24, r22
    1e5e:	bc 01       	movw	r22, r24
    1e60:	cd 01       	movw	r24, r26
    1e62:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1e66:	dc 01       	movw	r26, r24
    1e68:	cb 01       	movw	r24, r22
    1e6a:	9a a3       	std	Y+34, r25	; 0x22
    1e6c:	89 a3       	std	Y+33, r24	; 0x21
    1e6e:	0f c0       	rjmp	.+30     	; 0x1e8e <display_time+0x4f6>
    1e70:	80 e9       	ldi	r24, 0x90	; 144
    1e72:	91 e0       	ldi	r25, 0x01	; 1
    1e74:	98 a3       	std	Y+32, r25	; 0x20
    1e76:	8f 8f       	std	Y+31, r24	; 0x1f
    1e78:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1e7a:	98 a1       	ldd	r25, Y+32	; 0x20
    1e7c:	01 97       	sbiw	r24, 0x01	; 1
    1e7e:	f1 f7       	brne	.-4      	; 0x1e7c <display_time+0x4e4>
    1e80:	98 a3       	std	Y+32, r25	; 0x20
    1e82:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1e84:	89 a1       	ldd	r24, Y+33	; 0x21
    1e86:	9a a1       	ldd	r25, Y+34	; 0x22
    1e88:	01 97       	sbiw	r24, 0x01	; 1
    1e8a:	9a a3       	std	Y+34, r25	; 0x22
    1e8c:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1e8e:	89 a1       	ldd	r24, Y+33	; 0x21
    1e90:	9a a1       	ldd	r25, Y+34	; 0x22
    1e92:	00 97       	sbiw	r24, 0x00	; 0
    1e94:	69 f7       	brne	.-38     	; 0x1e70 <display_time+0x4d8>
    1e96:	14 c0       	rjmp	.+40     	; 0x1ec0 <display_time+0x528>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1e98:	6b a1       	ldd	r22, Y+35	; 0x23
    1e9a:	7c a1       	ldd	r23, Y+36	; 0x24
    1e9c:	8d a1       	ldd	r24, Y+37	; 0x25
    1e9e:	9e a1       	ldd	r25, Y+38	; 0x26
    1ea0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1ea4:	dc 01       	movw	r26, r24
    1ea6:	cb 01       	movw	r24, r22
    1ea8:	9a a3       	std	Y+34, r25	; 0x22
    1eaa:	89 a3       	std	Y+33, r24	; 0x21
    1eac:	89 a1       	ldd	r24, Y+33	; 0x21
    1eae:	9a a1       	ldd	r25, Y+34	; 0x22
    1eb0:	9e 8f       	std	Y+30, r25	; 0x1e
    1eb2:	8d 8f       	std	Y+29, r24	; 0x1d
    1eb4:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1eb6:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1eb8:	01 97       	sbiw	r24, 0x01	; 1
    1eba:	f1 f7       	brne	.-4      	; 0x1eb8 <display_time+0x520>
    1ebc:	9e 8f       	std	Y+30, r25	; 0x1e
    1ebe:	8d 8f       	std	Y+29, r24	; 0x1d
    _delay_ms(3);
    PORTA &= ~0x04;
    1ec0:	ab e3       	ldi	r26, 0x3B	; 59
    1ec2:	b0 e0       	ldi	r27, 0x00	; 0
    1ec4:	eb e3       	ldi	r30, 0x3B	; 59
    1ec6:	f0 e0       	ldi	r31, 0x00	; 0
    1ec8:	80 81       	ld	r24, Z
    1eca:	8b 7f       	andi	r24, 0xFB	; 251
    1ecc:	8c 93       	st	X, r24

    // _ [] _ _ _ _
    PORTC = h % 10;
    1ece:	a5 e3       	ldi	r26, 0x35	; 53
    1ed0:	b0 e0       	ldi	r27, 0x00	; 0
    1ed2:	fe 01       	movw	r30, r28
    1ed4:	eb 5a       	subi	r30, 0xAB	; 171
    1ed6:	ff 4f       	sbci	r31, 0xFF	; 255
    1ed8:	80 81       	ld	r24, Z
    1eda:	9a e0       	ldi	r25, 0x0A	; 10
    1edc:	69 2f       	mov	r22, r25
    1ede:	0e 94 8a 10 	call	0x2114	; 0x2114 <__udivmodqi4>
    1ee2:	89 2f       	mov	r24, r25
    1ee4:	8c 93       	st	X, r24
    PORTA |= 0x02;
    1ee6:	ab e3       	ldi	r26, 0x3B	; 59
    1ee8:	b0 e0       	ldi	r27, 0x00	; 0
    1eea:	eb e3       	ldi	r30, 0x3B	; 59
    1eec:	f0 e0       	ldi	r31, 0x00	; 0
    1eee:	80 81       	ld	r24, Z
    1ef0:	82 60       	ori	r24, 0x02	; 2
    1ef2:	8c 93       	st	X, r24
    1ef4:	80 e0       	ldi	r24, 0x00	; 0
    1ef6:	90 e0       	ldi	r25, 0x00	; 0
    1ef8:	a0 e4       	ldi	r26, 0x40	; 64
    1efa:	b0 e4       	ldi	r27, 0x40	; 64
    1efc:	89 8f       	std	Y+25, r24	; 0x19
    1efe:	9a 8f       	std	Y+26, r25	; 0x1a
    1f00:	ab 8f       	std	Y+27, r26	; 0x1b
    1f02:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1f04:	69 8d       	ldd	r22, Y+25	; 0x19
    1f06:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1f08:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1f0a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1f0c:	20 e0       	ldi	r18, 0x00	; 0
    1f0e:	30 e0       	ldi	r19, 0x00	; 0
    1f10:	4a e7       	ldi	r20, 0x7A	; 122
    1f12:	55 e4       	ldi	r21, 0x45	; 69
    1f14:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1f18:	dc 01       	movw	r26, r24
    1f1a:	cb 01       	movw	r24, r22
    1f1c:	8d 8b       	std	Y+21, r24	; 0x15
    1f1e:	9e 8b       	std	Y+22, r25	; 0x16
    1f20:	af 8b       	std	Y+23, r26	; 0x17
    1f22:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1f24:	6d 89       	ldd	r22, Y+21	; 0x15
    1f26:	7e 89       	ldd	r23, Y+22	; 0x16
    1f28:	8f 89       	ldd	r24, Y+23	; 0x17
    1f2a:	98 8d       	ldd	r25, Y+24	; 0x18
    1f2c:	20 e0       	ldi	r18, 0x00	; 0
    1f2e:	30 e0       	ldi	r19, 0x00	; 0
    1f30:	40 e8       	ldi	r20, 0x80	; 128
    1f32:	5f e3       	ldi	r21, 0x3F	; 63
    1f34:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1f38:	88 23       	and	r24, r24
    1f3a:	2c f4       	brge	.+10     	; 0x1f46 <display_time+0x5ae>
		__ticks = 1;
    1f3c:	81 e0       	ldi	r24, 0x01	; 1
    1f3e:	90 e0       	ldi	r25, 0x00	; 0
    1f40:	9c 8b       	std	Y+20, r25	; 0x14
    1f42:	8b 8b       	std	Y+19, r24	; 0x13
    1f44:	3f c0       	rjmp	.+126    	; 0x1fc4 <display_time+0x62c>
	else if (__tmp > 65535)
    1f46:	6d 89       	ldd	r22, Y+21	; 0x15
    1f48:	7e 89       	ldd	r23, Y+22	; 0x16
    1f4a:	8f 89       	ldd	r24, Y+23	; 0x17
    1f4c:	98 8d       	ldd	r25, Y+24	; 0x18
    1f4e:	20 e0       	ldi	r18, 0x00	; 0
    1f50:	3f ef       	ldi	r19, 0xFF	; 255
    1f52:	4f e7       	ldi	r20, 0x7F	; 127
    1f54:	57 e4       	ldi	r21, 0x47	; 71
    1f56:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1f5a:	18 16       	cp	r1, r24
    1f5c:	4c f5       	brge	.+82     	; 0x1fb0 <display_time+0x618>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1f5e:	69 8d       	ldd	r22, Y+25	; 0x19
    1f60:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1f62:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1f64:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1f66:	20 e0       	ldi	r18, 0x00	; 0
    1f68:	30 e0       	ldi	r19, 0x00	; 0
    1f6a:	40 e2       	ldi	r20, 0x20	; 32
    1f6c:	51 e4       	ldi	r21, 0x41	; 65
    1f6e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1f72:	dc 01       	movw	r26, r24
    1f74:	cb 01       	movw	r24, r22
    1f76:	bc 01       	movw	r22, r24
    1f78:	cd 01       	movw	r24, r26
    1f7a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1f7e:	dc 01       	movw	r26, r24
    1f80:	cb 01       	movw	r24, r22
    1f82:	9c 8b       	std	Y+20, r25	; 0x14
    1f84:	8b 8b       	std	Y+19, r24	; 0x13
    1f86:	0f c0       	rjmp	.+30     	; 0x1fa6 <display_time+0x60e>
    1f88:	80 e9       	ldi	r24, 0x90	; 144
    1f8a:	91 e0       	ldi	r25, 0x01	; 1
    1f8c:	9a 8b       	std	Y+18, r25	; 0x12
    1f8e:	89 8b       	std	Y+17, r24	; 0x11
    1f90:	89 89       	ldd	r24, Y+17	; 0x11
    1f92:	9a 89       	ldd	r25, Y+18	; 0x12
    1f94:	01 97       	sbiw	r24, 0x01	; 1
    1f96:	f1 f7       	brne	.-4      	; 0x1f94 <display_time+0x5fc>
    1f98:	9a 8b       	std	Y+18, r25	; 0x12
    1f9a:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1f9c:	8b 89       	ldd	r24, Y+19	; 0x13
    1f9e:	9c 89       	ldd	r25, Y+20	; 0x14
    1fa0:	01 97       	sbiw	r24, 0x01	; 1
    1fa2:	9c 8b       	std	Y+20, r25	; 0x14
    1fa4:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1fa6:	8b 89       	ldd	r24, Y+19	; 0x13
    1fa8:	9c 89       	ldd	r25, Y+20	; 0x14
    1faa:	00 97       	sbiw	r24, 0x00	; 0
    1fac:	69 f7       	brne	.-38     	; 0x1f88 <display_time+0x5f0>
    1fae:	14 c0       	rjmp	.+40     	; 0x1fd8 <display_time+0x640>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1fb0:	6d 89       	ldd	r22, Y+21	; 0x15
    1fb2:	7e 89       	ldd	r23, Y+22	; 0x16
    1fb4:	8f 89       	ldd	r24, Y+23	; 0x17
    1fb6:	98 8d       	ldd	r25, Y+24	; 0x18
    1fb8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1fbc:	dc 01       	movw	r26, r24
    1fbe:	cb 01       	movw	r24, r22
    1fc0:	9c 8b       	std	Y+20, r25	; 0x14
    1fc2:	8b 8b       	std	Y+19, r24	; 0x13
    1fc4:	8b 89       	ldd	r24, Y+19	; 0x13
    1fc6:	9c 89       	ldd	r25, Y+20	; 0x14
    1fc8:	98 8b       	std	Y+16, r25	; 0x10
    1fca:	8f 87       	std	Y+15, r24	; 0x0f
    1fcc:	8f 85       	ldd	r24, Y+15	; 0x0f
    1fce:	98 89       	ldd	r25, Y+16	; 0x10
    1fd0:	01 97       	sbiw	r24, 0x01	; 1
    1fd2:	f1 f7       	brne	.-4      	; 0x1fd0 <display_time+0x638>
    1fd4:	98 8b       	std	Y+16, r25	; 0x10
    1fd6:	8f 87       	std	Y+15, r24	; 0x0f
    _delay_ms(3);
    PORTA &= ~0x02;
    1fd8:	ab e3       	ldi	r26, 0x3B	; 59
    1fda:	b0 e0       	ldi	r27, 0x00	; 0
    1fdc:	eb e3       	ldi	r30, 0x3B	; 59
    1fde:	f0 e0       	ldi	r31, 0x00	; 0
    1fe0:	80 81       	ld	r24, Z
    1fe2:	8d 7f       	andi	r24, 0xFD	; 253
    1fe4:	8c 93       	st	X, r24

    // [] _ _ _ _ _
    PORTC = h / 10;
    1fe6:	a5 e3       	ldi	r26, 0x35	; 53
    1fe8:	b0 e0       	ldi	r27, 0x00	; 0
    1fea:	fe 01       	movw	r30, r28
    1fec:	eb 5a       	subi	r30, 0xAB	; 171
    1fee:	ff 4f       	sbci	r31, 0xFF	; 255
    1ff0:	80 81       	ld	r24, Z
    1ff2:	9a e0       	ldi	r25, 0x0A	; 10
    1ff4:	69 2f       	mov	r22, r25
    1ff6:	0e 94 8a 10 	call	0x2114	; 0x2114 <__udivmodqi4>
    1ffa:	8c 93       	st	X, r24
    PORTA |= 0x01;
    1ffc:	ab e3       	ldi	r26, 0x3B	; 59
    1ffe:	b0 e0       	ldi	r27, 0x00	; 0
    2000:	eb e3       	ldi	r30, 0x3B	; 59
    2002:	f0 e0       	ldi	r31, 0x00	; 0
    2004:	80 81       	ld	r24, Z
    2006:	81 60       	ori	r24, 0x01	; 1
    2008:	8c 93       	st	X, r24
    200a:	80 e0       	ldi	r24, 0x00	; 0
    200c:	90 e0       	ldi	r25, 0x00	; 0
    200e:	a0 e4       	ldi	r26, 0x40	; 64
    2010:	b0 e4       	ldi	r27, 0x40	; 64
    2012:	8b 87       	std	Y+11, r24	; 0x0b
    2014:	9c 87       	std	Y+12, r25	; 0x0c
    2016:	ad 87       	std	Y+13, r26	; 0x0d
    2018:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    201a:	6b 85       	ldd	r22, Y+11	; 0x0b
    201c:	7c 85       	ldd	r23, Y+12	; 0x0c
    201e:	8d 85       	ldd	r24, Y+13	; 0x0d
    2020:	9e 85       	ldd	r25, Y+14	; 0x0e
    2022:	20 e0       	ldi	r18, 0x00	; 0
    2024:	30 e0       	ldi	r19, 0x00	; 0
    2026:	4a e7       	ldi	r20, 0x7A	; 122
    2028:	55 e4       	ldi	r21, 0x45	; 69
    202a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    202e:	dc 01       	movw	r26, r24
    2030:	cb 01       	movw	r24, r22
    2032:	8f 83       	std	Y+7, r24	; 0x07
    2034:	98 87       	std	Y+8, r25	; 0x08
    2036:	a9 87       	std	Y+9, r26	; 0x09
    2038:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    203a:	6f 81       	ldd	r22, Y+7	; 0x07
    203c:	78 85       	ldd	r23, Y+8	; 0x08
    203e:	89 85       	ldd	r24, Y+9	; 0x09
    2040:	9a 85       	ldd	r25, Y+10	; 0x0a
    2042:	20 e0       	ldi	r18, 0x00	; 0
    2044:	30 e0       	ldi	r19, 0x00	; 0
    2046:	40 e8       	ldi	r20, 0x80	; 128
    2048:	5f e3       	ldi	r21, 0x3F	; 63
    204a:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    204e:	88 23       	and	r24, r24
    2050:	2c f4       	brge	.+10     	; 0x205c <display_time+0x6c4>
		__ticks = 1;
    2052:	81 e0       	ldi	r24, 0x01	; 1
    2054:	90 e0       	ldi	r25, 0x00	; 0
    2056:	9e 83       	std	Y+6, r25	; 0x06
    2058:	8d 83       	std	Y+5, r24	; 0x05
    205a:	3f c0       	rjmp	.+126    	; 0x20da <display_time+0x742>
	else if (__tmp > 65535)
    205c:	6f 81       	ldd	r22, Y+7	; 0x07
    205e:	78 85       	ldd	r23, Y+8	; 0x08
    2060:	89 85       	ldd	r24, Y+9	; 0x09
    2062:	9a 85       	ldd	r25, Y+10	; 0x0a
    2064:	20 e0       	ldi	r18, 0x00	; 0
    2066:	3f ef       	ldi	r19, 0xFF	; 255
    2068:	4f e7       	ldi	r20, 0x7F	; 127
    206a:	57 e4       	ldi	r21, 0x47	; 71
    206c:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    2070:	18 16       	cp	r1, r24
    2072:	4c f5       	brge	.+82     	; 0x20c6 <display_time+0x72e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2074:	6b 85       	ldd	r22, Y+11	; 0x0b
    2076:	7c 85       	ldd	r23, Y+12	; 0x0c
    2078:	8d 85       	ldd	r24, Y+13	; 0x0d
    207a:	9e 85       	ldd	r25, Y+14	; 0x0e
    207c:	20 e0       	ldi	r18, 0x00	; 0
    207e:	30 e0       	ldi	r19, 0x00	; 0
    2080:	40 e2       	ldi	r20, 0x20	; 32
    2082:	51 e4       	ldi	r21, 0x41	; 65
    2084:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2088:	dc 01       	movw	r26, r24
    208a:	cb 01       	movw	r24, r22
    208c:	bc 01       	movw	r22, r24
    208e:	cd 01       	movw	r24, r26
    2090:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2094:	dc 01       	movw	r26, r24
    2096:	cb 01       	movw	r24, r22
    2098:	9e 83       	std	Y+6, r25	; 0x06
    209a:	8d 83       	std	Y+5, r24	; 0x05
    209c:	0f c0       	rjmp	.+30     	; 0x20bc <display_time+0x724>
    209e:	80 e9       	ldi	r24, 0x90	; 144
    20a0:	91 e0       	ldi	r25, 0x01	; 1
    20a2:	9c 83       	std	Y+4, r25	; 0x04
    20a4:	8b 83       	std	Y+3, r24	; 0x03
    20a6:	8b 81       	ldd	r24, Y+3	; 0x03
    20a8:	9c 81       	ldd	r25, Y+4	; 0x04
    20aa:	01 97       	sbiw	r24, 0x01	; 1
    20ac:	f1 f7       	brne	.-4      	; 0x20aa <display_time+0x712>
    20ae:	9c 83       	std	Y+4, r25	; 0x04
    20b0:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    20b2:	8d 81       	ldd	r24, Y+5	; 0x05
    20b4:	9e 81       	ldd	r25, Y+6	; 0x06
    20b6:	01 97       	sbiw	r24, 0x01	; 1
    20b8:	9e 83       	std	Y+6, r25	; 0x06
    20ba:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    20bc:	8d 81       	ldd	r24, Y+5	; 0x05
    20be:	9e 81       	ldd	r25, Y+6	; 0x06
    20c0:	00 97       	sbiw	r24, 0x00	; 0
    20c2:	69 f7       	brne	.-38     	; 0x209e <display_time+0x706>
    20c4:	14 c0       	rjmp	.+40     	; 0x20ee <display_time+0x756>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    20c6:	6f 81       	ldd	r22, Y+7	; 0x07
    20c8:	78 85       	ldd	r23, Y+8	; 0x08
    20ca:	89 85       	ldd	r24, Y+9	; 0x09
    20cc:	9a 85       	ldd	r25, Y+10	; 0x0a
    20ce:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    20d2:	dc 01       	movw	r26, r24
    20d4:	cb 01       	movw	r24, r22
    20d6:	9e 83       	std	Y+6, r25	; 0x06
    20d8:	8d 83       	std	Y+5, r24	; 0x05
    20da:	8d 81       	ldd	r24, Y+5	; 0x05
    20dc:	9e 81       	ldd	r25, Y+6	; 0x06
    20de:	9a 83       	std	Y+2, r25	; 0x02
    20e0:	89 83       	std	Y+1, r24	; 0x01
    20e2:	89 81       	ldd	r24, Y+1	; 0x01
    20e4:	9a 81       	ldd	r25, Y+2	; 0x02
    20e6:	01 97       	sbiw	r24, 0x01	; 1
    20e8:	f1 f7       	brne	.-4      	; 0x20e6 <display_time+0x74e>
    20ea:	9a 83       	std	Y+2, r25	; 0x02
    20ec:	89 83       	std	Y+1, r24	; 0x01
    _delay_ms(3);
    PORTA &= ~0x01;
    20ee:	ab e3       	ldi	r26, 0x3B	; 59
    20f0:	b0 e0       	ldi	r27, 0x00	; 0
    20f2:	eb e3       	ldi	r30, 0x3B	; 59
    20f4:	f0 e0       	ldi	r31, 0x00	; 0
    20f6:	80 81       	ld	r24, Z
    20f8:	8e 7f       	andi	r24, 0xFE	; 254
    20fa:	8c 93       	st	X, r24
}
    20fc:	c9 5a       	subi	r28, 0xA9	; 169
    20fe:	df 4f       	sbci	r29, 0xFF	; 255
    2100:	0f b6       	in	r0, 0x3f	; 63
    2102:	f8 94       	cli
    2104:	de bf       	out	0x3e, r29	; 62
    2106:	0f be       	out	0x3f, r0	; 63
    2108:	cd bf       	out	0x3d, r28	; 61
    210a:	cf 91       	pop	r28
    210c:	df 91       	pop	r29
    210e:	1f 91       	pop	r17
    2110:	0f 91       	pop	r16
    2112:	08 95       	ret

00002114 <__udivmodqi4>:
    2114:	99 1b       	sub	r25, r25
    2116:	79 e0       	ldi	r23, 0x09	; 9
    2118:	04 c0       	rjmp	.+8      	; 0x2122 <__udivmodqi4_ep>

0000211a <__udivmodqi4_loop>:
    211a:	99 1f       	adc	r25, r25
    211c:	96 17       	cp	r25, r22
    211e:	08 f0       	brcs	.+2      	; 0x2122 <__udivmodqi4_ep>
    2120:	96 1b       	sub	r25, r22

00002122 <__udivmodqi4_ep>:
    2122:	88 1f       	adc	r24, r24
    2124:	7a 95       	dec	r23
    2126:	c9 f7       	brne	.-14     	; 0x211a <__udivmodqi4_loop>
    2128:	80 95       	com	r24
    212a:	08 95       	ret

0000212c <__prologue_saves__>:
    212c:	2f 92       	push	r2
    212e:	3f 92       	push	r3
    2130:	4f 92       	push	r4
    2132:	5f 92       	push	r5
    2134:	6f 92       	push	r6
    2136:	7f 92       	push	r7
    2138:	8f 92       	push	r8
    213a:	9f 92       	push	r9
    213c:	af 92       	push	r10
    213e:	bf 92       	push	r11
    2140:	cf 92       	push	r12
    2142:	df 92       	push	r13
    2144:	ef 92       	push	r14
    2146:	ff 92       	push	r15
    2148:	0f 93       	push	r16
    214a:	1f 93       	push	r17
    214c:	cf 93       	push	r28
    214e:	df 93       	push	r29
    2150:	cd b7       	in	r28, 0x3d	; 61
    2152:	de b7       	in	r29, 0x3e	; 62
    2154:	ca 1b       	sub	r28, r26
    2156:	db 0b       	sbc	r29, r27
    2158:	0f b6       	in	r0, 0x3f	; 63
    215a:	f8 94       	cli
    215c:	de bf       	out	0x3e, r29	; 62
    215e:	0f be       	out	0x3f, r0	; 63
    2160:	cd bf       	out	0x3d, r28	; 61
    2162:	09 94       	ijmp

00002164 <__epilogue_restores__>:
    2164:	2a 88       	ldd	r2, Y+18	; 0x12
    2166:	39 88       	ldd	r3, Y+17	; 0x11
    2168:	48 88       	ldd	r4, Y+16	; 0x10
    216a:	5f 84       	ldd	r5, Y+15	; 0x0f
    216c:	6e 84       	ldd	r6, Y+14	; 0x0e
    216e:	7d 84       	ldd	r7, Y+13	; 0x0d
    2170:	8c 84       	ldd	r8, Y+12	; 0x0c
    2172:	9b 84       	ldd	r9, Y+11	; 0x0b
    2174:	aa 84       	ldd	r10, Y+10	; 0x0a
    2176:	b9 84       	ldd	r11, Y+9	; 0x09
    2178:	c8 84       	ldd	r12, Y+8	; 0x08
    217a:	df 80       	ldd	r13, Y+7	; 0x07
    217c:	ee 80       	ldd	r14, Y+6	; 0x06
    217e:	fd 80       	ldd	r15, Y+5	; 0x05
    2180:	0c 81       	ldd	r16, Y+4	; 0x04
    2182:	1b 81       	ldd	r17, Y+3	; 0x03
    2184:	aa 81       	ldd	r26, Y+2	; 0x02
    2186:	b9 81       	ldd	r27, Y+1	; 0x01
    2188:	ce 0f       	add	r28, r30
    218a:	d1 1d       	adc	r29, r1
    218c:	0f b6       	in	r0, 0x3f	; 63
    218e:	f8 94       	cli
    2190:	de bf       	out	0x3e, r29	; 62
    2192:	0f be       	out	0x3f, r0	; 63
    2194:	cd bf       	out	0x3d, r28	; 61
    2196:	ed 01       	movw	r28, r26
    2198:	08 95       	ret

0000219a <_exit>:
    219a:	f8 94       	cli

0000219c <__stop_program>:
    219c:	ff cf       	rjmp	.-2      	; 0x219c <__stop_program>
